{
  "version": 3,
  "sources": ["../../@nostr-dev-kit/ndk/dist/index.mjs"],
  "sourcesContent": ["// src/user/index.ts\nimport { nip19 as nip194 } from \"nostr-tools\";\n\n// src/events/index.ts\nimport { EventEmitter as EventEmitter4 } from \"tseep\";\n\n// src/outbox/relay-ranking.ts\nfunction getTopRelaysForAuthors(ndk, authors) {\n  const relaysWithCount = /* @__PURE__ */ new Map();\n  authors.forEach((author) => {\n    const writeRelays = getWriteRelaysFor(ndk, author);\n    if (writeRelays) {\n      writeRelays.forEach((relay) => {\n        const count = relaysWithCount.get(relay) || 0;\n        relaysWithCount.set(relay, count + 1);\n      });\n    }\n  });\n  let sortedRelays = Array.from(relaysWithCount.entries()).sort((a, b) => b[1] - a[1]);\n  return sortedRelays.map((entry) => entry[0]);\n}\n\n// src/outbox/read/with-authors.ts\nfunction getWriteRelaysFor(ndk, author) {\n  if (!ndk.outboxTracker)\n    return void 0;\n  return ndk.outboxTracker.data.get(author)?.writeRelays;\n}\nfunction getAllRelaysForAllPubkeys(ndk, pubkeys) {\n  const pubkeysToRelays = /* @__PURE__ */ new Map();\n  const authorsMissingRelays = /* @__PURE__ */ new Set();\n  pubkeys.forEach((author) => {\n    const writeRelays = getWriteRelaysFor(ndk, author);\n    if (writeRelays && writeRelays.size > 0) {\n      writeRelays.forEach((relay) => {\n        const pubkeysInRelay = pubkeysToRelays.get(relay) || /* @__PURE__ */ new Set();\n        pubkeysInRelay.add(author);\n        pubkeysToRelays.set(relay, pubkeysInRelay);\n      });\n      pubkeysToRelays.set(author, writeRelays);\n    } else {\n      authorsMissingRelays.add(author);\n    }\n  });\n  return { pubkeysToRelays, authorsMissingRelays };\n}\nfunction getRelaysForFilterWithAuthors(ndk, authors, pool, relayGoalPerAuthor = 2) {\n  const relayToAuthorsMap = /* @__PURE__ */ new Map();\n  const { pubkeysToRelays, authorsMissingRelays } = getAllRelaysForAllPubkeys(ndk, authors);\n  const sortedRelays = getTopRelaysForAuthors(ndk, authors);\n  const addAuthorToRelay = (author, relay) => {\n    const authorsInRelay = relayToAuthorsMap.get(relay) || [];\n    authorsInRelay.push(author);\n    relayToAuthorsMap.set(relay, authorsInRelay);\n  };\n  for (const [author, authorRelays] of pubkeysToRelays.entries()) {\n    let missingRelaysForThisAuthor = relayGoalPerAuthor;\n    const connectedRelays = pool.connectedRelays();\n    for (const relay of connectedRelays) {\n      if (authorRelays.has(relay.url)) {\n        addAuthorToRelay(author, relay.url);\n        missingRelaysForThisAuthor--;\n      }\n    }\n    for (const authorRelay of authorRelays) {\n      if (relayToAuthorsMap.has(authorRelay)) {\n        addAuthorToRelay(author, authorRelay);\n        missingRelaysForThisAuthor--;\n      }\n    }\n    if (missingRelaysForThisAuthor <= 0)\n      continue;\n    for (const relay of sortedRelays) {\n      if (missingRelaysForThisAuthor <= 0)\n        break;\n      if (authorRelays.has(relay)) {\n        addAuthorToRelay(author, relay);\n        missingRelaysForThisAuthor--;\n      }\n    }\n  }\n  for (const author of authorsMissingRelays) {\n    pool.permanentAndConnectedRelays().forEach((relay) => {\n      const authorsInRelay = relayToAuthorsMap.get(relay.url) || [];\n      authorsInRelay.push(author);\n      relayToAuthorsMap.set(relay.url, authorsInRelay);\n    });\n  }\n  return relayToAuthorsMap;\n}\n\n// src/relay/index.ts\nimport debug from \"debug\";\nimport { EventEmitter as EventEmitter2 } from \"tseep\";\n\n// src/relay/connectivity.ts\nimport { relayInit } from \"nostr-tools\";\n\n// src/utils/timeout.ts\nasync function runWithTimeout(fn, timeoutMs, timeoutMessage) {\n  if (!timeoutMs)\n    return fn();\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      reject(new Error(timeoutMessage || `Timed out after ${timeoutMs}ms`));\n    }, timeoutMs);\n    fn().then(resolve, reject).finally(() => clearTimeout(timeout));\n  });\n}\n\n// src/relay/connectivity.ts\nvar MAX_RECONNECT_ATTEMPTS = 5;\nvar NDKRelayConnectivity = class {\n  ndkRelay;\n  _status;\n  relay;\n  timeoutMs;\n  connectedAt;\n  _connectionStats = {\n    attempts: 0,\n    success: 0,\n    durations: []\n  };\n  debug;\n  reconnectTimeout;\n  constructor(ndkRelay) {\n    this.ndkRelay = ndkRelay;\n    this._status = 3 /* DISCONNECTED */;\n    this.relay = relayInit(this.ndkRelay.url);\n    this.debug = this.ndkRelay.debug.extend(\"connectivity\");\n    this.relay.on(\"notice\", (notice) => this.handleNotice(notice));\n  }\n  async connect(timeoutMs, reconnect = true) {\n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = void 0;\n    }\n    timeoutMs ??= this.timeoutMs;\n    if (!this.timeoutMs && timeoutMs)\n      this.timeoutMs = timeoutMs;\n    const connectHandler = () => {\n      this.updateConnectionStats.connected();\n      this._status = 1 /* CONNECTED */;\n      this.ndkRelay.emit(\"connect\");\n      this.ndkRelay.emit(\"ready\");\n    };\n    const disconnectHandler = () => {\n      this.updateConnectionStats.disconnected();\n      if (this._status === 1 /* CONNECTED */) {\n        this._status = 3 /* DISCONNECTED */;\n        this.handleReconnection();\n      }\n      this.ndkRelay.emit(\"disconnect\");\n    };\n    const authHandler = async (challenge) => {\n      this.debug(\"Relay requested authentication\", {\n        havePolicy: !!this.ndkRelay.authPolicy\n      });\n      if (this.ndkRelay.authPolicy) {\n        if (this._status !== 7 /* AUTHENTICATING */) {\n          this._status = 7 /* AUTHENTICATING */;\n          await this.ndkRelay.authPolicy(this.ndkRelay, challenge);\n          if (this._status === 7 /* AUTHENTICATING */) {\n            this.debug(\"Authentication policy finished\");\n            this._status = 1 /* CONNECTED */;\n            this.ndkRelay.emit(\"authed\");\n          }\n        }\n      } else {\n        await this.ndkRelay.emit(\"auth\", challenge);\n      }\n    };\n    try {\n      this.updateConnectionStats.attempt();\n      if (this._status === 3 /* DISCONNECTED */)\n        this._status = 0 /* CONNECTING */;\n      else\n        this._status = 4 /* RECONNECTING */;\n      this.relay.off(\"connect\", connectHandler);\n      this.relay.off(\"disconnect\", disconnectHandler);\n      this.relay.on(\"connect\", connectHandler);\n      this.relay.on(\"disconnect\", disconnectHandler);\n      this.relay.on(\"auth\", authHandler);\n      await runWithTimeout(this.relay.connect, timeoutMs, \"Timed out while connecting\");\n    } catch (e) {\n      this._status = 3 /* DISCONNECTED */;\n      if (reconnect)\n        this.handleReconnection();\n      else\n        this.ndkRelay.emit(\"delayed-connect\", 2 * 24 * 60 * 60 * 1e3);\n      throw e;\n    }\n  }\n  disconnect() {\n    this._status = 2 /* DISCONNECTING */;\n    this.relay.close();\n  }\n  get status() {\n    return this._status;\n  }\n  isAvailable() {\n    return this._status === 1 /* CONNECTED */;\n  }\n  /**\n   * Evaluates the connection stats to determine if the relay is flapping.\n   */\n  isFlapping() {\n    const durations = this._connectionStats.durations;\n    if (durations.length % 3 !== 0)\n      return false;\n    const sum = durations.reduce((a, b) => a + b, 0);\n    const avg = sum / durations.length;\n    const variance = durations.map((x) => Math.pow(x - avg, 2)).reduce((a, b) => a + b, 0) / durations.length;\n    const stdDev = Math.sqrt(variance);\n    const isFlapping = stdDev < 1e3;\n    return isFlapping;\n  }\n  async handleNotice(notice) {\n    if (notice.includes(\"oo many\") || notice.includes(\"aximum\")) {\n      this.disconnect();\n      setTimeout(() => this.connect(), 2e3);\n      this.debug(this.relay.url, \"Relay complaining?\", notice);\n    }\n    this.ndkRelay.emit(\"notice\", notice);\n  }\n  /**\n   * Called when the relay is unexpectedly disconnected.\n   */\n  handleReconnection(attempt = 0) {\n    if (this.reconnectTimeout)\n      return;\n    this.debug(\"Attempting to reconnect\", { attempt });\n    if (this.isFlapping()) {\n      this.ndkRelay.emit(\"flapping\", this._connectionStats);\n      this._status = 5 /* FLAPPING */;\n      return;\n    }\n    const reconnectDelay = this.connectedAt ? Math.max(0, 6e4 - (Date.now() - this.connectedAt)) : 5e3 * (this._connectionStats.attempts + 1);\n    this.reconnectTimeout = setTimeout(() => {\n      this.reconnectTimeout = void 0;\n      this._status = 4 /* RECONNECTING */;\n      this.connect().then(() => {\n        this.debug(\"Reconnected\");\n      }).catch((err) => {\n        if (attempt < MAX_RECONNECT_ATTEMPTS) {\n          setTimeout(() => {\n            this.handleReconnection(attempt + 1);\n          }, 1e3 * (attempt + 1) ^ 4);\n        } else {\n          this.debug(\"Reconnect failed\");\n        }\n      });\n    }, reconnectDelay);\n    this.ndkRelay.emit(\"delayed-connect\", reconnectDelay);\n    this.debug(\"Reconnecting in\", reconnectDelay);\n    this._connectionStats.nextReconnectAt = Date.now() + reconnectDelay;\n  }\n  /**\n   * Utility functions to update the connection stats.\n   */\n  updateConnectionStats = {\n    connected: () => {\n      this._connectionStats.success++;\n      this._connectionStats.connectedAt = Date.now();\n    },\n    disconnected: () => {\n      if (this._connectionStats.connectedAt) {\n        this._connectionStats.durations.push(\n          Date.now() - this._connectionStats.connectedAt\n        );\n        if (this._connectionStats.durations.length > 100) {\n          this._connectionStats.durations.shift();\n        }\n      }\n      this._connectionStats.connectedAt = void 0;\n    },\n    attempt: () => {\n      this._connectionStats.attempts++;\n    }\n  };\n  /**\n   * Returns the connection stats.\n   */\n  get connectionStats() {\n    return this._connectionStats;\n  }\n};\n\n// src/relay/publisher.ts\nvar NDKRelayPublisher = class {\n  ndkRelay;\n  constructor(ndkRelay) {\n    this.ndkRelay = ndkRelay;\n  }\n  /**\n   * Published an event to the relay; if the relay is not connected, it will\n   * wait for the relay to connect before publishing the event.\n   *\n   * If the relay does not connect within the timeout, the publish operation\n   * will fail.\n   * @param event  The event to publish\n   * @param timeoutMs  The timeout for the publish operation in milliseconds\n   * @returns A promise that resolves when the event has been published or rejects if the operation times out\n   */\n  async publish(event, timeoutMs = 2500) {\n    const publishWhenConnected = () => {\n      return new Promise((resolve, reject) => {\n        try {\n          this.publishEvent(event, timeoutMs).then((result) => resolve(result)).catch((err) => reject(err));\n        } catch (err) {\n          reject(err);\n        }\n      });\n    };\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(() => reject(new Error(\"Timeout\")), timeoutMs);\n    });\n    const onConnectHandler = () => {\n      publishWhenConnected().then((result) => connectResolve(result)).catch((err) => connectReject(err));\n    };\n    let connectResolve;\n    let connectReject;\n    if (this.ndkRelay.status === 1 /* CONNECTED */) {\n      return Promise.race([publishWhenConnected(), timeoutPromise]);\n    } else {\n      return Promise.race([\n        new Promise((resolve, reject) => {\n          connectResolve = resolve;\n          connectReject = reject;\n          this.ndkRelay.once(\"connect\", onConnectHandler);\n        }),\n        timeoutPromise\n      ]).finally(() => {\n        this.ndkRelay.removeListener(\"connect\", onConnectHandler);\n      });\n    }\n  }\n  async publishEvent(event, timeoutMs) {\n    const nostrEvent = await event.toNostrEvent();\n    const publish = this.ndkRelay.connectivity.relay.publish(nostrEvent);\n    let publishTimeout;\n    const publishPromise = new Promise((resolve, reject) => {\n      publish.then(() => {\n        clearTimeout(publishTimeout);\n        this.ndkRelay.emit(\"published\", event);\n        resolve(true);\n      }).catch((err) => {\n        clearTimeout(publishTimeout);\n        this.ndkRelay.debug(\"Publish failed\", err, event.id);\n        this.ndkRelay.emit(\"publish:failed\", event, err);\n        reject(err);\n      });\n    });\n    if (!timeoutMs || event.isEphemeral()) {\n      return publishPromise;\n    }\n    const timeoutPromise = new Promise((_, reject) => {\n      publishTimeout = setTimeout(() => {\n        this.ndkRelay.debug(\"Publish timed out\", event.rawEvent());\n        this.ndkRelay.emit(\"publish:failed\", event, \"Timeout\");\n        reject(new Error(\"Publish operation timed out\"));\n      }, timeoutMs);\n    });\n    return Promise.race([publishPromise, timeoutPromise]);\n  }\n  async auth(event) {\n    return this.ndkRelay.connectivity.relay.auth(event.rawEvent());\n  }\n};\n\n// src/relay/subscriptions.ts\nimport { EventEmitter } from \"tseep\";\nimport { matchFilter } from \"nostr-tools\";\n\n// src/subscription/grouping.ts\nfunction calculateGroupableId(filters, closeOnEose) {\n  const elements = [];\n  for (const filter of filters) {\n    const hasTimeConstraints = filter.since || filter.until;\n    if (hasTimeConstraints)\n      return null;\n    const keys = Object.keys(filter || {}).sort().join(\"-\");\n    elements.push(keys);\n  }\n  let id = closeOnEose ? \"+\" : \"\";\n  id += elements.join(\"|\");\n  return id;\n}\nfunction mergeFilters(filters) {\n  const result = {};\n  filters.forEach((filter) => {\n    Object.entries(filter).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        if (result[key] === void 0) {\n          result[key] = [...value];\n        } else {\n          result[key] = Array.from(/* @__PURE__ */ new Set([...result[key], ...value]));\n        }\n      } else {\n        result[key] = value;\n      }\n    });\n  });\n  return result;\n}\n\n// src/subscription/utils.ts\nimport { nip19 } from \"nostr-tools\";\nvar MAX_SUBID_LENGTH = 20;\nfunction queryFullyFilled(subscription) {\n  if (filterIncludesIds(subscription.filter)) {\n    if (resultHasAllRequestedIds(subscription)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction compareFilter(filter1, filter2) {\n  if (Object.keys(filter1).length !== Object.keys(filter2).length)\n    return false;\n  for (const [key, value] of Object.entries(filter1)) {\n    const valuesInFilter2 = filter2[key];\n    if (!valuesInFilter2)\n      return false;\n    if (Array.isArray(value) && Array.isArray(valuesInFilter2)) {\n      const v = value;\n      for (const valueInFilter2 of valuesInFilter2) {\n        const val = valueInFilter2;\n        if (!v.includes(val)) {\n          return false;\n        }\n      }\n    } else {\n      if (valuesInFilter2 !== value)\n        return false;\n    }\n  }\n  return true;\n}\nfunction filterIncludesIds(filter) {\n  return !!filter[\"ids\"];\n}\nfunction resultHasAllRequestedIds(subscription) {\n  const ids = subscription.filter[\"ids\"];\n  return !!ids && ids.length === subscription.eventFirstSeen.size;\n}\nfunction generateSubId(subscriptions, filters) {\n  const subIds = subscriptions.map((sub) => sub.subId).filter(Boolean);\n  const subIdParts = [];\n  const filterNonKindKeys = /* @__PURE__ */ new Set();\n  const filterKinds = /* @__PURE__ */ new Set();\n  if (subIds.length > 0) {\n    subIdParts.push(Array.from(new Set(subIds)).join(\",\"));\n  } else {\n    for (const filter of filters) {\n      for (const key of Object.keys(filter)) {\n        if (key === \"kinds\") {\n          filter.kinds?.forEach((k) => filterKinds.add(k));\n        } else {\n          filterNonKindKeys.add(key);\n        }\n      }\n    }\n    if (filterKinds.size > 0) {\n      subIdParts.push(\"kinds:\" + Array.from(filterKinds).join(\",\"));\n    }\n    if (filterNonKindKeys.size > 0) {\n      subIdParts.push(Array.from(filterNonKindKeys).join(\",\"));\n    }\n  }\n  let subId = subIdParts.join(\"-\");\n  if (subId.length > MAX_SUBID_LENGTH)\n    subId = subId.substring(0, MAX_SUBID_LENGTH);\n  subId += \"-\" + Math.floor(Math.random() * 999).toString();\n  return subId;\n}\nfunction filterFromId(id) {\n  let decoded;\n  if (id.match(NIP33_A_REGEX)) {\n    const [kind, pubkey, identifier] = id.split(\":\");\n    const filter = {\n      authors: [pubkey],\n      kinds: [parseInt(kind)]\n    };\n    if (identifier) {\n      filter[\"#d\"] = [identifier];\n    }\n    return filter;\n  }\n  if (id.match(BECH32_REGEX)) {\n    try {\n      decoded = nip19.decode(id);\n      switch (decoded.type) {\n        case \"nevent\":\n          return { ids: [decoded.data.id] };\n        case \"note\":\n          return { ids: [decoded.data] };\n        case \"naddr\":\n          const filter = {\n            authors: [decoded.data.pubkey],\n            kinds: [decoded.data.kind]\n          };\n          if (decoded.data.identifier)\n            filter[\"#d\"] = [decoded.data.identifier];\n          return filter;\n      }\n    } catch (e) {\n      console.error(\"Error decoding\", id, e);\n    }\n  }\n  return { ids: [id] };\n}\nfunction isNip33AValue(value) {\n  return value.match(NIP33_A_REGEX) !== null;\n}\nvar NIP33_A_REGEX = /^(\\d+):([0-9A-Fa-f]+)(?::(.*))?$/;\nvar BECH32_REGEX = /^n(event|ote|profile|pub|addr)1[\\d\\w]+$/;\nfunction relaysFromBech32(bech322) {\n  try {\n    const decoded = nip19.decode(bech322);\n    if ([\"naddr\", \"nevent\"].includes(decoded?.type)) {\n      const data = decoded.data;\n      if (data?.relays) {\n        return data.relays.map((r) => new NDKRelay(r));\n      }\n    }\n  } catch (e) {\n  }\n  return [];\n}\n\n// src/relay/subscriptions.ts\nvar NDKGroupedSubscriptions = class extends EventEmitter {\n  subscriptions;\n  req;\n  debug;\n  constructor(subscriptions, debug7) {\n    super();\n    this.subscriptions = subscriptions;\n    this.debug = debug7 || this.subscriptions[0].subscription.debug.extend(\"grouped\");\n    for (const subscription of subscriptions) {\n      this.handleSubscriptionClosure(subscription);\n    }\n  }\n  /**\n   * Adds a subscription to this group.\n   * @param subscription\n   */\n  addSubscription(subscription) {\n    this.subscriptions.push(subscription);\n    this.handleSubscriptionClosure(subscription);\n  }\n  eventReceived(rawEvent) {\n    for (const subscription of this.subscriptions) {\n      subscription.eventReceived(rawEvent);\n    }\n  }\n  eoseReceived(relay) {\n    const subscriptionsToInform = Array.from(this.subscriptions);\n    subscriptionsToInform.forEach(async (subscription) => {\n      subscription.subscription.eoseReceived(relay);\n    });\n  }\n  handleSubscriptionClosure(subscription) {\n    subscription.subscription.on(\"close\", () => {\n      const index = this.subscriptions.findIndex(\n        (i) => i.subscription === subscription.subscription\n      );\n      this.subscriptions.splice(index, 1);\n      if (this.subscriptions.length <= 0) {\n        this.emit(\"close\");\n      }\n    });\n  }\n  /**\n   * Maps each subscription through a transformation function.\n   * @param fn - The transformation function.\n   * @returns A new array with each subscription transformed by fn.\n   */\n  map(fn) {\n    return this.subscriptions.map(fn);\n  }\n  [Symbol.iterator]() {\n    let index = 0;\n    const subscriptions = this.subscriptions;\n    return {\n      next() {\n        if (index < subscriptions.length) {\n          return { value: subscriptions[index++], done: false };\n        } else {\n          return { value: null, done: true };\n        }\n      }\n    };\n  }\n};\nvar NDKSubscriptionFilters = class {\n  subscription;\n  filters = [];\n  ndkRelay;\n  constructor(subscription, filters, ndkRelay) {\n    this.subscription = subscription;\n    this.filters = filters;\n    this.ndkRelay = ndkRelay;\n  }\n  eventReceived(rawEvent) {\n    if (!this.eventMatchesLocalFilter(rawEvent))\n      return;\n    const event = new NDKEvent(void 0, rawEvent);\n    event.relay = this.ndkRelay;\n    this.subscription.eventReceived(event, this.ndkRelay, false);\n  }\n  eventMatchesLocalFilter(rawEvent) {\n    return this.filters.some((filter) => matchFilter(filter, rawEvent));\n  }\n};\nfunction findMatchingActiveSubscriptions(activeSubscriptions, filters) {\n  if (activeSubscriptions.length !== filters.length)\n    return false;\n  for (let i = 0; i < activeSubscriptions.length; i++) {\n    if (!compareFilter(activeSubscriptions[i], filters[i])) {\n      break;\n    }\n    return activeSubscriptions[i];\n  }\n  return void 0;\n}\nvar NDKRelaySubscriptions = class {\n  ndkRelay;\n  delayedItems = /* @__PURE__ */ new Map();\n  delayedTimers = /* @__PURE__ */ new Map();\n  /**\n   * Active subscriptions this relay is connected to\n   */\n  activeSubscriptions = /* @__PURE__ */ new Map();\n  activeSubscriptionsByGroupId = /* @__PURE__ */ new Map();\n  executionTimeoutsByGroupId = /* @__PURE__ */ new Map();\n  debug;\n  groupingDebug;\n  conn;\n  constructor(ndkRelay) {\n    this.ndkRelay = ndkRelay;\n    this.conn = ndkRelay.connectivity;\n    this.debug = ndkRelay.debug.extend(\"subscriptions\");\n    this.groupingDebug = ndkRelay.debug.extend(\"grouping\");\n  }\n  /**\n   * Creates or queues a subscription to the relay.\n   */\n  subscribe(subscription, filters) {\n    const groupableId = calculateGroupableId(filters, subscription.closeOnEose);\n    const subscriptionFilters = new NDKSubscriptionFilters(\n      subscription,\n      filters,\n      this.ndkRelay\n    );\n    const isNotGroupable = !groupableId || !subscription.isGroupable();\n    if (isNotGroupable) {\n      this.executeSubscriptions(\n        groupableId,\n        // hacky\n        new NDKGroupedSubscriptions([subscriptionFilters]),\n        filters\n      );\n      return;\n    }\n    const activeSubscriptions = this.activeSubscriptionsByGroupId.get(groupableId);\n    if (activeSubscriptions) {\n      const matchingSubscription = findMatchingActiveSubscriptions(\n        activeSubscriptions.filters,\n        filters\n      );\n      if (matchingSubscription) {\n        const activeSubscription = this.activeSubscriptions.get(activeSubscriptions.sub);\n        activeSubscription?.addSubscription(\n          new NDKSubscriptionFilters(subscription, filters, this.ndkRelay)\n        );\n        return;\n      }\n    }\n    let delayedItem = this.delayedItems.get(groupableId);\n    if (!delayedItem) {\n      delayedItem = new NDKGroupedSubscriptions([subscriptionFilters]);\n      this.delayedItems.set(groupableId, delayedItem);\n      delayedItem.once(\"close\", () => {\n        const delayedItem2 = this.delayedItems.get(groupableId);\n        if (!delayedItem2)\n          return;\n        this.delayedItems.delete(groupableId);\n      });\n    } else {\n      delayedItem.addSubscription(subscriptionFilters);\n    }\n    let timeout = this.executionTimeoutsByGroupId.get(groupableId);\n    if (!timeout || subscription.opts.groupableDelayType === \"at-most\") {\n      timeout = setTimeout(() => {\n        this.executeGroup(groupableId, subscription);\n      }, subscription.opts.groupableDelay);\n      this.executionTimeoutsByGroupId.set(groupableId, timeout);\n    }\n    if (this.delayedTimers.has(groupableId)) {\n      this.delayedTimers.get(groupableId).push(timeout);\n    } else {\n      this.delayedTimers.set(groupableId, [timeout]);\n    }\n  }\n  /**\n   * Executes a delayed subscription via its groupable ID.\n   * @param groupableId\n   */\n  executeGroup(groupableId, triggeredBy) {\n    const delayedItem = this.delayedItems.get(groupableId);\n    this.delayedItems.delete(groupableId);\n    const timeouts = this.delayedTimers.get(groupableId);\n    this.delayedTimers.delete(groupableId);\n    if (timeouts) {\n      for (const timeout of timeouts) {\n        clearTimeout(timeout);\n      }\n    }\n    if (delayedItem) {\n      const filterCount = delayedItem.subscriptions[0].filters.length;\n      const mergedFilters = [];\n      for (let i = 0; i < filterCount; i++) {\n        const allFiltersAtIndex = delayedItem.map((di) => di.filters[i]);\n        mergedFilters.push(mergeFilters(allFiltersAtIndex));\n      }\n      this.executeSubscriptions(groupableId, delayedItem, mergedFilters);\n    }\n  }\n  executeSubscriptionsWhenConnected(groupableId, groupedSubscriptions, mergedFilters) {\n    const readyListener = () => {\n      this.executeSubscriptionsConnected(groupableId, groupedSubscriptions, mergedFilters);\n    };\n    this.ndkRelay.once(\"ready\", readyListener);\n    groupedSubscriptions.once(\"close\", () => {\n      this.ndkRelay.removeListener(\"ready\", readyListener);\n    });\n  }\n  /**\n   * Executes one or more subscriptions.\n   *\n   * If the relay is not connected, subscriptions will be queued\n   * until the relay connects.\n   *\n   * @param groupableId\n   * @param subscriptionFilters\n   * @param mergedFilters\n   */\n  executeSubscriptions(groupableId, groupedSubscriptions, mergedFilters) {\n    if (this.conn.isAvailable()) {\n      this.executeSubscriptionsConnected(groupableId, groupedSubscriptions, mergedFilters);\n    } else {\n      this.executeSubscriptionsWhenConnected(\n        groupableId,\n        groupedSubscriptions,\n        mergedFilters\n      );\n    }\n  }\n  /**\n   * Executes one or more subscriptions.\n   *\n   * When there are more than one subscription, results\n   * will be sent to the right subscription\n   *\n   * @param subscriptions\n   * @param filters The filters as they should be sent to the relay\n   */\n  executeSubscriptionsConnected(groupableId, groupedSubscriptions, mergedFilters) {\n    const subscriptions = [];\n    for (const { subscription } of groupedSubscriptions) {\n      subscriptions.push(subscription);\n    }\n    const subId = generateSubId(subscriptions, mergedFilters);\n    groupedSubscriptions.req = mergedFilters;\n    const subOptions = { id: subId };\n    subOptions.skipVerification = true;\n    const sub = this.conn.relay.sub(mergedFilters, subOptions);\n    this.activeSubscriptions.set(sub, groupedSubscriptions);\n    if (groupableId) {\n      this.activeSubscriptionsByGroupId.set(groupableId, { filters: mergedFilters, sub });\n    }\n    sub.on(\"event\", (rawEvent) => {\n      const subFilters = this.activeSubscriptions.get(sub);\n      subFilters?.eventReceived(rawEvent);\n    });\n    sub.on(\"eose\", () => {\n      const subFilters = this.activeSubscriptions.get(sub);\n      subFilters?.eoseReceived(this.ndkRelay);\n    });\n    groupedSubscriptions.once(\"close\", () => {\n      sub.unsub();\n      this.activeSubscriptions.delete(sub);\n      if (groupableId) {\n        this.activeSubscriptionsByGroupId.delete(groupableId);\n      }\n    });\n    this.executeSubscriptionsWhenConnected(groupableId, groupedSubscriptions, mergedFilters);\n    return sub;\n  }\n  executedFilters() {\n    const ret = /* @__PURE__ */ new Map();\n    for (const [, groupedSubscriptions] of this.activeSubscriptions) {\n      ret.set(\n        groupedSubscriptions.req,\n        groupedSubscriptions.map((sub) => sub.subscription)\n      );\n    }\n    return ret;\n  }\n};\n\n// ../../../node_modules/.pnpm/normalize-url@8.0.1/node_modules/normalize-url/index.js\nvar DATA_URL_DEFAULT_MIME_TYPE = \"text/plain\";\nvar DATA_URL_DEFAULT_CHARSET = \"us-ascii\";\nvar testParameter = (name, filters) => filters.some((filter) => filter instanceof RegExp ? filter.test(name) : filter === name);\nvar supportedProtocols = /* @__PURE__ */ new Set([\n  \"https:\",\n  \"http:\",\n  \"file:\"\n]);\nvar hasCustomProtocol = (urlString) => {\n  try {\n    const { protocol } = new URL(urlString);\n    return protocol.endsWith(\":\") && !protocol.includes(\".\") && !supportedProtocols.has(protocol);\n  } catch {\n    return false;\n  }\n};\nvar normalizeDataURL = (urlString, { stripHash }) => {\n  const match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(urlString);\n  if (!match) {\n    throw new Error(`Invalid URL: ${urlString}`);\n  }\n  let { type, data, hash } = match.groups;\n  const mediaType = type.split(\";\");\n  hash = stripHash ? \"\" : hash;\n  let isBase64 = false;\n  if (mediaType[mediaType.length - 1] === \"base64\") {\n    mediaType.pop();\n    isBase64 = true;\n  }\n  const mimeType = mediaType.shift()?.toLowerCase() ?? \"\";\n  const attributes = mediaType.map((attribute) => {\n    let [key, value = \"\"] = attribute.split(\"=\").map((string) => string.trim());\n    if (key === \"charset\") {\n      value = value.toLowerCase();\n      if (value === DATA_URL_DEFAULT_CHARSET) {\n        return \"\";\n      }\n    }\n    return `${key}${value ? `=${value}` : \"\"}`;\n  }).filter(Boolean);\n  const normalizedMediaType = [\n    ...attributes\n  ];\n  if (isBase64) {\n    normalizedMediaType.push(\"base64\");\n  }\n  if (normalizedMediaType.length > 0 || mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE) {\n    normalizedMediaType.unshift(mimeType);\n  }\n  return `data:${normalizedMediaType.join(\";\")},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : \"\"}`;\n};\nfunction normalizeUrl(urlString, options) {\n  options = {\n    defaultProtocol: \"http\",\n    normalizeProtocol: true,\n    forceHttp: false,\n    forceHttps: false,\n    stripAuthentication: true,\n    stripHash: false,\n    stripTextFragment: true,\n    stripWWW: true,\n    removeQueryParameters: [/^utm_\\w+/i],\n    removeTrailingSlash: true,\n    removeSingleSlash: true,\n    removeDirectoryIndex: false,\n    removeExplicitPort: false,\n    sortQueryParameters: true,\n    ...options\n  };\n  if (typeof options.defaultProtocol === \"string\" && !options.defaultProtocol.endsWith(\":\")) {\n    options.defaultProtocol = `${options.defaultProtocol}:`;\n  }\n  urlString = urlString.trim();\n  if (/^data:/i.test(urlString)) {\n    return normalizeDataURL(urlString, options);\n  }\n  if (hasCustomProtocol(urlString)) {\n    return urlString;\n  }\n  const hasRelativeProtocol = urlString.startsWith(\"//\");\n  const isRelativeUrl = !hasRelativeProtocol && /^\\.*\\//.test(urlString);\n  if (!isRelativeUrl) {\n    urlString = urlString.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//, options.defaultProtocol);\n  }\n  const urlObject = new URL(urlString);\n  if (options.forceHttp && options.forceHttps) {\n    throw new Error(\"The `forceHttp` and `forceHttps` options cannot be used together\");\n  }\n  if (options.forceHttp && urlObject.protocol === \"https:\") {\n    urlObject.protocol = \"http:\";\n  }\n  if (options.forceHttps && urlObject.protocol === \"http:\") {\n    urlObject.protocol = \"https:\";\n  }\n  if (options.stripAuthentication) {\n    urlObject.username = \"\";\n    urlObject.password = \"\";\n  }\n  if (options.stripHash) {\n    urlObject.hash = \"\";\n  } else if (options.stripTextFragment) {\n    urlObject.hash = urlObject.hash.replace(/#?:~:text.*?$/i, \"\");\n  }\n  if (urlObject.pathname) {\n    const protocolRegex = /\\b[a-z][a-z\\d+\\-.]{1,50}:\\/\\//g;\n    let lastIndex = 0;\n    let result = \"\";\n    for (; ; ) {\n      const match = protocolRegex.exec(urlObject.pathname);\n      if (!match) {\n        break;\n      }\n      const protocol = match[0];\n      const protocolAtIndex = match.index;\n      const intermediate = urlObject.pathname.slice(lastIndex, protocolAtIndex);\n      result += intermediate.replace(/\\/{2,}/g, \"/\");\n      result += protocol;\n      lastIndex = protocolAtIndex + protocol.length;\n    }\n    const remnant = urlObject.pathname.slice(lastIndex, urlObject.pathname.length);\n    result += remnant.replace(/\\/{2,}/g, \"/\");\n    urlObject.pathname = result;\n  }\n  if (urlObject.pathname) {\n    try {\n      urlObject.pathname = decodeURI(urlObject.pathname);\n    } catch {\n    }\n  }\n  if (options.removeDirectoryIndex === true) {\n    options.removeDirectoryIndex = [/^index\\.[a-z]+$/];\n  }\n  if (Array.isArray(options.removeDirectoryIndex) && options.removeDirectoryIndex.length > 0) {\n    let pathComponents = urlObject.pathname.split(\"/\");\n    const lastComponent = pathComponents[pathComponents.length - 1];\n    if (testParameter(lastComponent, options.removeDirectoryIndex)) {\n      pathComponents = pathComponents.slice(0, -1);\n      urlObject.pathname = pathComponents.slice(1).join(\"/\") + \"/\";\n    }\n  }\n  if (urlObject.hostname) {\n    urlObject.hostname = urlObject.hostname.replace(/\\.$/, \"\");\n    if (options.stripWWW && /^www\\.(?!www\\.)[a-z\\-\\d]{1,63}\\.[a-z.\\-\\d]{2,63}$/.test(urlObject.hostname)) {\n      urlObject.hostname = urlObject.hostname.replace(/^www\\./, \"\");\n    }\n  }\n  if (Array.isArray(options.removeQueryParameters)) {\n    for (const key of [...urlObject.searchParams.keys()]) {\n      if (testParameter(key, options.removeQueryParameters)) {\n        urlObject.searchParams.delete(key);\n      }\n    }\n  }\n  if (!Array.isArray(options.keepQueryParameters) && options.removeQueryParameters === true) {\n    urlObject.search = \"\";\n  }\n  if (Array.isArray(options.keepQueryParameters) && options.keepQueryParameters.length > 0) {\n    for (const key of [...urlObject.searchParams.keys()]) {\n      if (!testParameter(key, options.keepQueryParameters)) {\n        urlObject.searchParams.delete(key);\n      }\n    }\n  }\n  if (options.sortQueryParameters) {\n    urlObject.searchParams.sort();\n    try {\n      urlObject.search = decodeURIComponent(urlObject.search);\n    } catch {\n    }\n  }\n  if (options.removeTrailingSlash) {\n    urlObject.pathname = urlObject.pathname.replace(/\\/$/, \"\");\n  }\n  if (options.removeExplicitPort && urlObject.port) {\n    urlObject.port = \"\";\n  }\n  const oldUrlString = urlString;\n  urlString = urlObject.toString();\n  if (!options.removeSingleSlash && urlObject.pathname === \"/\" && !oldUrlString.endsWith(\"/\") && urlObject.hash === \"\") {\n    urlString = urlString.replace(/\\/$/, \"\");\n  }\n  if ((options.removeTrailingSlash || urlObject.pathname === \"/\") && urlObject.hash === \"\" && options.removeSingleSlash) {\n    urlString = urlString.replace(/\\/$/, \"\");\n  }\n  if (hasRelativeProtocol && !options.normalizeProtocol) {\n    urlString = urlString.replace(/^http:\\/\\//, \"//\");\n  }\n  if (options.stripProtocol) {\n    urlString = urlString.replace(/^(?:https?:)?\\/\\//, \"\");\n  }\n  return urlString;\n}\n\n// src/utils/normalize-url.ts\nfunction normalizeRelayUrl(url) {\n  let r = normalizeUrl(url.toLowerCase(), {\n    stripAuthentication: false,\n    stripWWW: false,\n    stripHash: true\n  });\n  if (!r.endsWith(\"/\")) {\n    r += \"/\";\n  }\n  return r;\n}\nfunction normalize(urls) {\n  const normalized = /* @__PURE__ */ new Set();\n  for (const url of urls) {\n    try {\n      normalized.add(normalizeRelayUrl(url));\n    } catch {\n    }\n  }\n  return Array.from(normalized);\n}\n\n// src/relay/index.ts\nvar NDKRelayStatus = /* @__PURE__ */ ((NDKRelayStatus2) => {\n  NDKRelayStatus2[NDKRelayStatus2[\"CONNECTING\"] = 0] = \"CONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"CONNECTED\"] = 1] = \"CONNECTED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"DISCONNECTING\"] = 2] = \"DISCONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"DISCONNECTED\"] = 3] = \"DISCONNECTED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"FLAPPING\"] = 5] = \"FLAPPING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"AUTH_REQUIRED\"] = 6] = \"AUTH_REQUIRED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"AUTHENTICATING\"] = 7] = \"AUTHENTICATING\";\n  return NDKRelayStatus2;\n})(NDKRelayStatus || {});\nvar NDKRelay = class extends EventEmitter2 {\n  url;\n  scores;\n  connectivity;\n  subs;\n  publisher;\n  authPolicy;\n  validationRatio;\n  validatedEventCount = 0;\n  skippedEventCount = 0;\n  /**\n   * Whether this relay is trusted.\n   *\n   * Trusted relay's events do not get their signature verified.\n   */\n  trusted = false;\n  complaining = false;\n  debug;\n  constructor(url, authPolicy) {\n    super();\n    this.url = normalizeRelayUrl(url);\n    this.scores = /* @__PURE__ */ new Map();\n    this.debug = debug(`ndk:relay:${url}`);\n    this.connectivity = new NDKRelayConnectivity(this);\n    this.subs = new NDKRelaySubscriptions(this);\n    this.publisher = new NDKRelayPublisher(this);\n    this.authPolicy = authPolicy;\n    this.validationRatio = void 0;\n  }\n  get status() {\n    return this.connectivity.status;\n  }\n  get connectionStats() {\n    return this.connectivity.connectionStats;\n  }\n  /**\n   * Connects to the relay.\n   */\n  async connect(timeoutMs, reconnect = true) {\n    return this.connectivity.connect(timeoutMs, reconnect);\n  }\n  /**\n   * Disconnects from the relay.\n   */\n  disconnect() {\n    if (this.status === 3 /* DISCONNECTED */) {\n      return;\n    }\n    this.connectivity.disconnect();\n  }\n  /**\n   * Queues or executes the subscription of a specific set of filters\n   * within this relay.\n   *\n   * @param subscription NDKSubscription this filters belong to.\n   * @param filters Filters to execute\n   */\n  subscribe(subscription, filters) {\n    this.subs.subscribe(subscription, filters);\n  }\n  /**\n   * Publishes an event to the relay with an optional timeout.\n   *\n   * If the relay is not connected, the event will be published when the relay connects,\n   * unless the timeout is reached before the relay connects.\n   *\n   * @param event The event to publish\n   * @param timeoutMs The timeout for the publish operation in milliseconds\n   * @returns A promise that resolves when the event has been published or rejects if the operation times out\n   */\n  async publish(event, timeoutMs = 2500) {\n    return this.publisher.publish(event, timeoutMs);\n  }\n  async auth(event) {\n    return this.publisher.auth(event);\n  }\n  /**\n   * Called when this relay has responded with an event but\n   * wasn't the fastest one.\n   * @param timeDiffInMs The time difference in ms between the fastest and this relay in milliseconds\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  scoreSlowerEvent(timeDiffInMs) {\n  }\n  /** @deprecated Use referenceTags instead. */\n  tagReference(marker) {\n    const tag = [\"r\", this.url];\n    if (marker) {\n      tag.push(marker);\n    }\n    return tag;\n  }\n  referenceTags() {\n    return [[\"r\", this.url]];\n  }\n  activeSubscriptions() {\n    return this.subs.executedFilters();\n  }\n  addValidatedEvent() {\n    this.validatedEventCount++;\n  }\n  addSkippedEvent() {\n    this.skippedEventCount++;\n  }\n  getValidationRatio() {\n    if (this.skippedEventCount === 0) {\n      return 1;\n    }\n    return this.validatedEventCount / (this.validatedEventCount + this.skippedEventCount);\n  }\n  shouldValidateEvent() {\n    if (this.trusted) {\n      return false;\n    }\n    if (this.validationRatio === void 0) {\n      return true;\n    }\n    return this.getValidationRatio() < this.validationRatio;\n  }\n};\n\n// src/relay/sets/index.ts\nvar PublishError = class extends Error {\n  errors;\n  constructor(message, errors) {\n    super(message);\n    this.errors = errors;\n  }\n  get relayErrors() {\n    const errors = [];\n    for (const [relay, err] of this.errors) {\n      errors.push(`${relay.url}: ${err}`);\n    }\n    return errors.join(\"\\n\");\n  }\n};\nvar NDKRelaySet = class _NDKRelaySet {\n  relays;\n  debug;\n  ndk;\n  constructor(relays, ndk) {\n    this.relays = relays;\n    this.ndk = ndk;\n    this.debug = ndk.debug.extend(\"relayset\");\n  }\n  /**\n   * Adds a relay to this set.\n   */\n  addRelay(relay) {\n    this.relays.add(relay);\n  }\n  /**\n   * Creates a relay set from a list of relay URLs.\n   *\n   * If no connection to the relay is found in the pool it will temporarily\n   * connect to it.\n   *\n   * @param relayUrls - list of relay URLs to include in this set\n   * @param ndk\n   * @returns NDKRelaySet\n   */\n  static fromRelayUrls(relayUrls, ndk) {\n    const relays = /* @__PURE__ */ new Set();\n    for (const url of relayUrls) {\n      const relay = ndk.pool.relays.get(url);\n      if (relay) {\n        relays.add(relay);\n      } else {\n        const temporaryRelay = new NDKRelay(url);\n        ndk.pool.useTemporaryRelay(temporaryRelay);\n        relays.add(temporaryRelay);\n      }\n    }\n    return new _NDKRelaySet(new Set(relays), ndk);\n  }\n  /**\n   * Publish an event to all relays in this set. Returns the number of relays that have received the event.\n   * @param event\n   * @param timeoutMs - timeout in milliseconds for each publish operation and connection operation\n   * @returns A set where the event was successfully published to\n   * @throws PublishError if no relay was able to receive the event\n   * @example\n   * ```typescript\n   * const event = new NDKEvent(ndk, {kinds: [NDKKind.Message], \"#d\": [\"123\"]});\n   * try {\n   *    const publishedToRelays = await relaySet.publish(event);\n   *    console.log(`published to ${publishedToRelays.size} relays`)\n   * } catch (error) {\n   *   console.error(\"error publishing to relays\", error);\n   *\n   *   if (error instanceof PublishError) {\n   *      for (const [relay, err] of error.errors) {\n   *         console.error(`error publishing to relay ${relay.url}`, err);\n   *       }\n   *   }\n   * }\n   * ```\n   */\n  async publish(event, timeoutMs) {\n    const publishedToRelays = /* @__PURE__ */ new Set();\n    const errors = /* @__PURE__ */ new Map();\n    const isEphemeral2 = event.isEphemeral();\n    const promises = Array.from(this.relays).map((relay) => {\n      return new Promise((resolve) => {\n        relay.publish(event, timeoutMs).then((e) => {\n          publishedToRelays.add(relay);\n          resolve();\n        }).catch((err) => {\n          if (!isEphemeral2) {\n            errors.set(relay, err);\n            this.debug(\"error publishing to relay\", {\n              relay: relay.url,\n              err\n            });\n          }\n          resolve();\n        });\n      });\n    });\n    await Promise.all(promises);\n    if (publishedToRelays.size === 0) {\n      if (!isEphemeral2) {\n        throw new PublishError(\"No relay was able to receive the event\", errors);\n      }\n    }\n    return publishedToRelays;\n  }\n  get size() {\n    return this.relays.size;\n  }\n};\n\n// src/relay/sets/calculate.ts\nfunction calculateRelaySetFromEvent(ndk, event) {\n  const relays = /* @__PURE__ */ new Set();\n  ndk.pool?.permanentAndConnectedRelays().forEach((relay) => relays.add(relay));\n  return new NDKRelaySet(relays, ndk);\n}\nfunction calculateRelaySetsFromFilter(ndk, filters, pool) {\n  const result = /* @__PURE__ */ new Map();\n  const authors = /* @__PURE__ */ new Set();\n  filters.forEach((filter) => {\n    if (filter.authors) {\n      filter.authors.forEach((author) => authors.add(author));\n    }\n  });\n  if (authors.size > 0) {\n    const authorToRelaysMap = getRelaysForFilterWithAuthors(ndk, Array.from(authors), pool);\n    for (const relayUrl of authorToRelaysMap.keys()) {\n      result.set(relayUrl, []);\n    }\n    for (const filter of filters) {\n      if (filter.authors) {\n        for (const [relayUrl, authors2] of authorToRelaysMap.entries()) {\n          const authorFilterAndRelayPubkeyIntersection = filter.authors.filter(\n            (author) => authors2.includes(author)\n          );\n          result.set(relayUrl, [\n            ...result.get(relayUrl),\n            {\n              ...filter,\n              // Overwrite authors sent to this relay with the authors that were\n              // present in the filter and are also present in the relay\n              authors: authorFilterAndRelayPubkeyIntersection\n            }\n          ]);\n        }\n      } else {\n        for (const relayUrl of authorToRelaysMap.keys()) {\n          result.set(relayUrl, [...result.get(relayUrl), filter]);\n        }\n      }\n    }\n  } else {\n    pool.permanentAndConnectedRelays().forEach((relay) => {\n      result.set(relay.url, filters);\n    });\n  }\n  return result;\n}\nfunction calculateRelaySetsFromFilters(ndk, filters, pool) {\n  return calculateRelaySetsFromFilter(ndk, filters, pool);\n}\n\n// src/events/content-tagger.ts\nimport { nip19 as nip192 } from \"nostr-tools\";\nfunction mergeTags(tags1, tags2) {\n  const tagMap = /* @__PURE__ */ new Map();\n  const generateKey = (tag) => tag.join(\",\");\n  const isContained = (smaller, larger) => {\n    return smaller.every((value, index) => value === larger[index]);\n  };\n  const processTag = (tag) => {\n    for (let [key, existingTag] of tagMap) {\n      if (isContained(existingTag, tag) || isContained(tag, existingTag)) {\n        if (tag.length >= existingTag.length) {\n          tagMap.set(key, tag);\n        }\n        return;\n      }\n    }\n    tagMap.set(generateKey(tag), tag);\n  };\n  tags1.concat(tags2).forEach(processTag);\n  return Array.from(tagMap.values());\n}\nasync function generateContentTags(content, tags = []) {\n  const tagRegex = /(@|nostr:)(npub|nprofile|note|nevent|naddr)[a-zA-Z0-9]+/g;\n  const hashtagRegex = /(?<=\\s|^)(#[^\\s!@#$%^&*()=+.\\/,\\[{\\]};:'\"?><]+)/g;\n  let promises = [];\n  const addTagIfNew = (t) => {\n    if (!tags.find((t2) => [\"q\", t[0]].includes(t2[0]) && t2[1] === t[1])) {\n      tags.push(t);\n    }\n  };\n  content = content.replace(tagRegex, (tag) => {\n    try {\n      const entity = tag.split(/(@|nostr:)/)[2];\n      const { type, data } = nip192.decode(entity);\n      let t;\n      switch (type) {\n        case \"npub\":\n          t = [\"p\", data];\n          break;\n        case \"nprofile\":\n          t = [\"p\", data.pubkey];\n          break;\n        case \"note\":\n          promises.push(\n            new Promise(async (resolve) => {\n              addTagIfNew([\n                \"e\",\n                data,\n                await maybeGetEventRelayUrl(entity),\n                \"mention\"\n              ]);\n              resolve();\n            })\n          );\n          break;\n        case \"nevent\":\n          promises.push(\n            new Promise(async (resolve) => {\n              let { id, relays, author } = data;\n              if (!relays || relays.length === 0) {\n                relays = [await maybeGetEventRelayUrl(entity)];\n              }\n              addTagIfNew([\"e\", id, relays[0], \"mention\"]);\n              if (author)\n                addTagIfNew([\"p\", author]);\n              resolve();\n            })\n          );\n          break;\n        case \"naddr\":\n          promises.push(\n            new Promise(async (resolve) => {\n              const id = [data.kind, data.pubkey, data.identifier].join(\":\");\n              let relays = data.relays ?? [];\n              if (relays.length === 0) {\n                relays = [await maybeGetEventRelayUrl(entity)];\n              }\n              addTagIfNew([\"a\", id, relays[0], \"mention\"]);\n              addTagIfNew([\"p\", data.pubkey]);\n              resolve();\n            })\n          );\n          break;\n        default:\n          return tag;\n      }\n      if (t)\n        addTagIfNew(t);\n      return `nostr:${entity}`;\n    } catch (error) {\n      return tag;\n    }\n  });\n  await Promise.all(promises);\n  content = content.replace(hashtagRegex, (tag, word) => {\n    const t = [\"t\", word];\n    if (!tags.find((t2) => t2[0] === t[0] && t2[1] === t[1])) {\n      tags.push(t);\n    }\n    return tag;\n  });\n  return { content, tags };\n}\nasync function maybeGetEventRelayUrl(nip19Id) {\n  return \"\";\n}\n\n// src/events/kind.ts\nfunction isReplaceable() {\n  if (this.kind === void 0)\n    throw new Error(\"Kind not set\");\n  return [0, 3].includes(this.kind) || this.kind >= 1e4 && this.kind < 2e4 || this.kind >= 3e4 && this.kind < 4e4;\n}\nfunction isEphemeral() {\n  if (this.kind === void 0)\n    throw new Error(\"Kind not set\");\n  return this.kind >= 2e4 && this.kind < 3e4;\n}\nfunction isParamReplaceable() {\n  if (this.kind === void 0)\n    throw new Error(\"Kind not set\");\n  return this.kind >= 3e4 && this.kind < 4e4;\n}\n\n// src/events/kinds/index.ts\nvar NDKKind = /* @__PURE__ */ ((NDKKind2) => {\n  NDKKind2[NDKKind2[\"Metadata\"] = 0] = \"Metadata\";\n  NDKKind2[NDKKind2[\"Text\"] = 1] = \"Text\";\n  NDKKind2[NDKKind2[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  NDKKind2[NDKKind2[\"Contacts\"] = 3] = \"Contacts\";\n  NDKKind2[NDKKind2[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  NDKKind2[NDKKind2[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  NDKKind2[NDKKind2[\"Repost\"] = 6] = \"Repost\";\n  NDKKind2[NDKKind2[\"Reaction\"] = 7] = \"Reaction\";\n  NDKKind2[NDKKind2[\"BadgeAward\"] = 8] = \"BadgeAward\";\n  NDKKind2[NDKKind2[\"GroupChat\"] = 9] = \"GroupChat\";\n  NDKKind2[NDKKind2[\"GroupNote\"] = 11] = \"GroupNote\";\n  NDKKind2[NDKKind2[\"GroupReply\"] = 12] = \"GroupReply\";\n  NDKKind2[NDKKind2[\"GenericRepost\"] = 16] = \"GenericRepost\";\n  NDKKind2[NDKKind2[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  NDKKind2[NDKKind2[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  NDKKind2[NDKKind2[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  NDKKind2[NDKKind2[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  NDKKind2[NDKKind2[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  NDKKind2[NDKKind2[\"Media\"] = 1063] = \"Media\";\n  NDKKind2[NDKKind2[\"Report\"] = 1984] = \"Report\";\n  NDKKind2[NDKKind2[\"Label\"] = 1985] = \"Label\";\n  NDKKind2[NDKKind2[\"DVMReqTextExtraction\"] = 5e3] = \"DVMReqTextExtraction\";\n  NDKKind2[NDKKind2[\"DVMReqTextSummarization\"] = 5001] = \"DVMReqTextSummarization\";\n  NDKKind2[NDKKind2[\"DVMReqTextTranslation\"] = 5002] = \"DVMReqTextTranslation\";\n  NDKKind2[NDKKind2[\"DVMReqTextGeneration\"] = 5050] = \"DVMReqTextGeneration\";\n  NDKKind2[NDKKind2[\"DVMReqImageGeneration\"] = 5100] = \"DVMReqImageGeneration\";\n  NDKKind2[NDKKind2[\"DVMReqDiscoveryNostrContent\"] = 5300] = \"DVMReqDiscoveryNostrContent\";\n  NDKKind2[NDKKind2[\"DVMReqDiscoveryNostrPeople\"] = 5301] = \"DVMReqDiscoveryNostrPeople\";\n  NDKKind2[NDKKind2[\"DVMReqTimestamping\"] = 5900] = \"DVMReqTimestamping\";\n  NDKKind2[NDKKind2[\"DVMEventSchedule\"] = 5905] = \"DVMEventSchedule\";\n  NDKKind2[NDKKind2[\"DVMJobFeedback\"] = 7e3] = \"DVMJobFeedback\";\n  NDKKind2[NDKKind2[\"Subscribe\"] = 7001] = \"Subscribe\";\n  NDKKind2[NDKKind2[\"Unsubscribe\"] = 7002] = \"Unsubscribe\";\n  NDKKind2[NDKKind2[\"SubscriptionReceipt\"] = 7003] = \"SubscriptionReceipt\";\n  NDKKind2[NDKKind2[\"GroupAdminAddUser\"] = 9e3] = \"GroupAdminAddUser\";\n  NDKKind2[NDKKind2[\"GroupAdminRemoveUser\"] = 9001] = \"GroupAdminRemoveUser\";\n  NDKKind2[NDKKind2[\"GroupAdminEditMetadata\"] = 9002] = \"GroupAdminEditMetadata\";\n  NDKKind2[NDKKind2[\"GroupAdminEditStatus\"] = 9006] = \"GroupAdminEditStatus\";\n  NDKKind2[NDKKind2[\"MuteList\"] = 1e4] = \"MuteList\";\n  NDKKind2[NDKKind2[\"PinList\"] = 10001] = \"PinList\";\n  NDKKind2[NDKKind2[\"RelayList\"] = 10002] = \"RelayList\";\n  NDKKind2[NDKKind2[\"BookmarkList\"] = 10003] = \"BookmarkList\";\n  NDKKind2[NDKKind2[\"CommunityList\"] = 10004] = \"CommunityList\";\n  NDKKind2[NDKKind2[\"PublicChatList\"] = 10005] = \"PublicChatList\";\n  NDKKind2[NDKKind2[\"BlockRelayList\"] = 10006] = \"BlockRelayList\";\n  NDKKind2[NDKKind2[\"SearchRelayList\"] = 10007] = \"SearchRelayList\";\n  NDKKind2[NDKKind2[\"SimpleGroupList\"] = 10009] = \"SimpleGroupList\";\n  NDKKind2[NDKKind2[\"InterestList\"] = 10015] = \"InterestList\";\n  NDKKind2[NDKKind2[\"EmojiList\"] = 10030] = \"EmojiList\";\n  NDKKind2[NDKKind2[\"BlossomList\"] = 10063] = \"BlossomList\";\n  NDKKind2[NDKKind2[\"NostrWaletConnectInfo\"] = 13194] = \"NostrWaletConnectInfo\";\n  NDKKind2[NDKKind2[\"TierList\"] = 17e3] = \"TierList\";\n  NDKKind2[NDKKind2[\"FollowSet\"] = 3e4] = \"FollowSet\";\n  NDKKind2[NDKKind2[\"CategorizedPeopleList\"] = 3e4 /* FollowSet */] = \"CategorizedPeopleList\";\n  NDKKind2[NDKKind2[\"CategorizedBookmarkList\"] = 30001] = \"CategorizedBookmarkList\";\n  NDKKind2[NDKKind2[\"RelaySet\"] = 30002] = \"RelaySet\";\n  NDKKind2[NDKKind2[\"CategorizedRelayList\"] = 30002 /* RelaySet */] = \"CategorizedRelayList\";\n  NDKKind2[NDKKind2[\"BookmarkSet\"] = 30003] = \"BookmarkSet\";\n  NDKKind2[NDKKind2[\"CurationSet\"] = 30004] = \"CurationSet\";\n  NDKKind2[NDKKind2[\"ArticleCurationSet\"] = 30004] = \"ArticleCurationSet\";\n  NDKKind2[NDKKind2[\"VideoCurationSet\"] = 30005] = \"VideoCurationSet\";\n  NDKKind2[NDKKind2[\"InterestSet\"] = 30015] = \"InterestSet\";\n  NDKKind2[NDKKind2[\"InterestsList\"] = 30015 /* InterestSet */] = \"InterestsList\";\n  NDKKind2[NDKKind2[\"EmojiSet\"] = 30030] = \"EmojiSet\";\n  NDKKind2[NDKKind2[\"HighlightSet\"] = 39802] = \"HighlightSet\";\n  NDKKind2[NDKKind2[\"SubscriptionTier\"] = 37001] = \"SubscriptionTier\";\n  NDKKind2[NDKKind2[\"CategorizedHighlightList\"] = 39802 /* HighlightSet */] = \"CategorizedHighlightList\";\n  NDKKind2[NDKKind2[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  NDKKind2[NDKKind2[\"Zap\"] = 9735] = \"Zap\";\n  NDKKind2[NDKKind2[\"Highlight\"] = 9802] = \"Highlight\";\n  NDKKind2[NDKKind2[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  NDKKind2[NDKKind2[\"NostrWalletConnectReq\"] = 23194] = \"NostrWalletConnectReq\";\n  NDKKind2[NDKKind2[\"NostrWalletConnectRes\"] = 23195] = \"NostrWalletConnectRes\";\n  NDKKind2[NDKKind2[\"NostrConnect\"] = 24133] = \"NostrConnect\";\n  NDKKind2[NDKKind2[\"HttpAuth\"] = 27235] = \"HttpAuth\";\n  NDKKind2[NDKKind2[\"ProfileBadge\"] = 30008] = \"ProfileBadge\";\n  NDKKind2[NDKKind2[\"BadgeDefinition\"] = 30009] = \"BadgeDefinition\";\n  NDKKind2[NDKKind2[\"MarketStall\"] = 30017] = \"MarketStall\";\n  NDKKind2[NDKKind2[\"MarketProduct\"] = 30018] = \"MarketProduct\";\n  NDKKind2[NDKKind2[\"Article\"] = 30023] = \"Article\";\n  NDKKind2[NDKKind2[\"AppSpecificData\"] = 30078] = \"AppSpecificData\";\n  NDKKind2[NDKKind2[\"Classified\"] = 30402] = \"Classified\";\n  NDKKind2[NDKKind2[\"HorizontalVideo\"] = 34235] = \"HorizontalVideo\";\n  NDKKind2[NDKKind2[\"GroupMetadata\"] = 39e3] = \"GroupMetadata\";\n  NDKKind2[NDKKind2[\"GroupMembers\"] = 39002] = \"GroupMembers\";\n  NDKKind2[NDKKind2[\"AppRecommendation\"] = 31989] = \"AppRecommendation\";\n  NDKKind2[NDKKind2[\"AppHandler\"] = 31990] = \"AppHandler\";\n  return NDKKind2;\n})(NDKKind || {});\nvar NDKListKinds = [\n  1e4 /* MuteList */,\n  10001 /* PinList */,\n  10002 /* RelayList */,\n  10003 /* BookmarkList */,\n  10004 /* CommunityList */,\n  10005 /* PublicChatList */,\n  10006 /* BlockRelayList */,\n  10007 /* SearchRelayList */,\n  10015 /* InterestList */,\n  10030 /* EmojiList */,\n  3e4 /* FollowSet */,\n  30003 /* BookmarkSet */,\n  30001 /* CategorizedBookmarkList */,\n  // Backwards compatibility\n  30002 /* RelaySet */,\n  30004 /* ArticleCurationSet */,\n  30005 /* VideoCurationSet */,\n  30015 /* InterestSet */,\n  30030 /* EmojiSet */,\n  39802 /* HighlightSet */\n];\n\n// src/events/nip04.ts\nasync function encrypt(recipient, signer) {\n  if (!this.ndk)\n    throw new Error(\"No NDK instance found!\");\n  if (!signer) {\n    await this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  if (!recipient) {\n    const pTags = this.getMatchingTags(\"p\");\n    if (pTags.length !== 1) {\n      throw new Error(\n        \"No recipient could be determined and no explicit recipient was provided\"\n      );\n    }\n    recipient = this.ndk.getUser({ pubkey: pTags[0][1] });\n  }\n  this.content = await signer?.encrypt(recipient, this.content);\n}\nasync function decrypt(sender, signer) {\n  if (!this.ndk)\n    throw new Error(\"No NDK instance found!\");\n  if (!signer) {\n    await this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  if (!sender) {\n    sender = this.author;\n  }\n  this.content = await signer?.decrypt(sender, this.content);\n}\n\n// src/events/nip19.ts\nimport { nip19 as nip193 } from \"nostr-tools\";\nfunction encode() {\n  let relays = [];\n  if (this.onRelays.length > 0) {\n    relays = this.onRelays.map((relay) => relay.url);\n  } else if (this.relay) {\n    relays = [this.relay.url];\n  }\n  if (this.isParamReplaceable()) {\n    return nip193.naddrEncode({\n      kind: this.kind,\n      pubkey: this.pubkey,\n      identifier: this.replaceableDTag(),\n      relays\n    });\n  } else if (relays.length > 0) {\n    return nip193.neventEncode({\n      id: this.tagId(),\n      relays,\n      author: this.pubkey\n    });\n  } else {\n    return nip193.noteEncode(this.tagId());\n  }\n}\n\n// src/events/repost.ts\nasync function repost(publish = true, signer) {\n  if (!signer && publish) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  const e = new NDKEvent(this.ndk, {\n    kind: getKind(this),\n    content: \"\"\n  });\n  e.tag(this);\n  if (e.kind === 16 /* GenericRepost */) {\n    e.tags.push([\"k\", `${this.kind}`]);\n  } else {\n    e.content = JSON.stringify(this.rawEvent());\n  }\n  if (signer)\n    await e.sign(signer);\n  if (publish)\n    await e.publish();\n  return e;\n}\nfunction getKind(event) {\n  if (event.kind === 1) {\n    return 6 /* Repost */;\n  }\n  return 16 /* GenericRepost */;\n}\n\n// src/thread/index.ts\nfunction eventsBySameAuthor(op, events) {\n  const eventsByAuthor = /* @__PURE__ */ new Map();\n  eventsByAuthor.set(op.id, op);\n  events.forEach((event) => {\n    if (event.pubkey === op.pubkey) {\n      eventsByAuthor.set(event.id, event);\n    }\n  });\n  return eventsByAuthor;\n}\nvar hasMarkers = (event, tagType) => {\n  return event.getMatchingTags(tagType).some((tag) => tag[3] && tag[3] !== \"\");\n};\nfunction eventIsReply(op, event, threadIds = /* @__PURE__ */ new Set(), tagType) {\n  tagType ??= op.tagType();\n  const tags = event.getMatchingTags(tagType);\n  threadIds.add(op.tagId());\n  if (threadIds.has(event.tagId()))\n    return false;\n  const heedExplicitReplyMarker = () => {\n    let eventIsTagged = false;\n    for (const tag of tags) {\n      if (tag[3] === \"reply\")\n        return threadIds.has(tag[1]);\n      const markerIsEmpty = tag[3] === \"\" || tag[3] === void 0;\n      const markerIsRoot = tag[3] === \"root\";\n      if (tag[1] === op.tagId() && (markerIsEmpty || markerIsRoot)) {\n        eventIsTagged = markerIsRoot ? \"root\" : true;\n      }\n    }\n    if (!eventIsTagged)\n      return false;\n    if (eventIsTagged === \"root\")\n      return true;\n  };\n  const explicitReplyMarker = heedExplicitReplyMarker();\n  if (explicitReplyMarker !== void 0)\n    return explicitReplyMarker;\n  if (hasMarkers(event, tagType))\n    return false;\n  const expectedTags = op.getMatchingTags(\"e\").map((tag) => tag[1]);\n  expectedTags.push(op.id);\n  return event.getMatchingTags(\"e\").every((tag) => expectedTags.includes(tag[1]));\n}\nfunction eventThreads(op, events) {\n  const eventsByAuthor = eventsBySameAuthor(op, events);\n  const threadEvents = events.filter((event) => eventIsPartOfThread(op, event, eventsByAuthor));\n  return threadEvents.sort((a, b) => a.created_at - b.created_at);\n}\nfunction getEventReplyIds(event) {\n  if (hasMarkers(event, event.tagType())) {\n    let rootTag;\n    let replyTags = [];\n    event.getMatchingTags(event.tagType()).forEach((tag) => {\n      if (tag[3] === \"root\")\n        rootTag = tag;\n      if (tag[3] === \"reply\")\n        replyTags.push(tag);\n    });\n    if (replyTags.length === 0) {\n      if (rootTag) {\n        replyTags.push(rootTag);\n      }\n    }\n    return replyTags.map((tag) => tag[1]);\n  } else {\n    return event.getMatchingTags(\"e\").map((tag) => tag[1]);\n  }\n}\nfunction isEventOriginalPost(event) {\n  return getEventReplyIds(event).length === 0;\n}\nfunction eventThreadIds(op, events) {\n  const threadIds = /* @__PURE__ */ new Map();\n  const threadEvents = eventThreads(op, events);\n  threadEvents.forEach((event) => threadIds.set(event.id, event));\n  return threadIds;\n}\nfunction eventReplies(op, events, threadEventIds) {\n  threadEventIds ??= new Set(eventThreadIds(op, events).keys());\n  return events.filter((event) => eventIsReply(op, event, threadEventIds));\n}\nfunction eventIsPartOfThread(op, event, eventsByAuthor) {\n  if (op.pubkey !== event.pubkey)\n    return false;\n  const taggedEventIds = event.getMatchingTags(\"e\").map((tag) => tag[1]);\n  const allTaggedEventsAreByOriginalAuthor = taggedEventIds.every((id) => eventsByAuthor.has(id));\n  return allTaggedEventsAreByOriginalAuthor;\n}\nfunction eventHasETagMarkers(event) {\n  return event.getMatchingTags(\"e\").some((tag) => tag[3]);\n}\nfunction getRootEventId(event, searchTag) {\n  searchTag ??= event.tagType();\n  const rootEventTag = getRootTag(event, searchTag);\n  return rootEventTag?.[1];\n}\nfunction getRootTag(event, searchTag) {\n  searchTag ??= event.tagType();\n  let rootEventTag = event.tags.find((tag) => tag[3] === \"root\");\n  if (!rootEventTag) {\n    if (eventHasETagMarkers(event))\n      return;\n    const matchingTags = event.getMatchingTags(searchTag);\n    if (matchingTags.length < 3)\n      return matchingTags[0];\n  }\n  return rootEventTag;\n}\nfunction getReplyTag(event, searchTag) {\n  searchTag ??= event.tagType();\n  let replyTag = event.tags.find((tag) => tag[3] === \"reply\");\n  if (replyTag)\n    return replyTag;\n  if (!replyTag)\n    replyTag = event.tags.find((tag) => tag[3] === \"root\");\n  if (!replyTag) {\n    if (eventHasETagMarkers(event))\n      return;\n    const matchingTags = event.getMatchingTags(searchTag);\n    if (matchingTags.length === 1)\n      return matchingTags[0];\n    if (matchingTags.length === 2)\n      return matchingTags[1];\n  }\n}\n\n// src/events/fetch-tagged-event.ts\nasync function fetchTaggedEvent(tag, marker) {\n  if (!this.ndk)\n    throw new Error(\"NDK instance not found\");\n  const t = this.getMatchingTags(tag, marker);\n  if (t.length === 0)\n    return void 0;\n  const [_, id, hint] = t[0];\n  let relay;\n  let event = await this.ndk.fetchEvent(id, {}, relay);\n  return event;\n}\nasync function fetchRootEvent() {\n  if (!this.ndk)\n    throw new Error(\"NDK instance not found\");\n  const rootTag = getRootTag(this);\n  if (!rootTag)\n    return void 0;\n  return this.ndk.fetchEventFromTag(rootTag);\n}\nasync function fetchReplyEvent() {\n  if (!this.ndk)\n    throw new Error(\"NDK instance not found\");\n  const replyTag = getReplyTag(this);\n  if (!replyTag)\n    return void 0;\n  return this.ndk.fetchEventFromTag(replyTag);\n}\n\n// src/events/serializer.ts\nfunction serialize(includeSig = false, includeId = false) {\n  const payload = [0, this.pubkey, this.created_at, this.kind, this.tags, this.content];\n  if (includeSig)\n    payload.push(this.sig);\n  if (includeId)\n    payload.push(this.id);\n  return JSON.stringify(payload);\n}\nfunction deserialize(serializedEvent) {\n  const eventArray = JSON.parse(serializedEvent);\n  const ret = {\n    pubkey: eventArray[1],\n    created_at: eventArray[2],\n    kind: eventArray[3],\n    tags: eventArray[4],\n    content: eventArray[5]\n  };\n  if (eventArray.length === 7)\n    ret.sig = eventArray[6];\n  if (eventArray.length === 8)\n    ret.id = eventArray[7];\n  return ret;\n}\n\n// src/events/validation.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nimport { schnorr } from \"@noble/curves/secp256k1\";\n\n// src/events/signature.ts\nvar worker;\nvar processingQueue = {};\nfunction signatureVerificationInit(w) {\n  worker = w;\n  worker.onmessage = (msg) => {\n    const [eventId, result] = msg.data;\n    const record = processingQueue[eventId];\n    if (!record) {\n      console.error(\"No record found for event\", eventId);\n      return;\n    }\n    delete processingQueue[eventId];\n    for (const resolve of record.resolves) {\n      resolve(result);\n    }\n  };\n}\nasync function verifySignatureAsync(event, persist) {\n  const promise = new Promise((resolve) => {\n    const serialized = event.serialize();\n    let enqueue = false;\n    if (!processingQueue[event.id]) {\n      processingQueue[event.id] = { event, resolves: [] };\n      enqueue = true;\n    }\n    processingQueue[event.id].resolves.push(resolve);\n    if (!enqueue)\n      return;\n    worker.postMessage({\n      serialized,\n      id: event.id,\n      sig: event.sig,\n      pubkey: event.pubkey\n    });\n  });\n  return promise;\n}\n\n// src/events/validation.ts\nimport { LRUCache } from \"typescript-lru-cache\";\nvar PUBKEY_REGEX = /^[a-f0-9]{64}$/;\nfunction validate() {\n  if (typeof this.kind !== \"number\")\n    return false;\n  if (typeof this.content !== \"string\")\n    return false;\n  if (typeof this.created_at !== \"number\")\n    return false;\n  if (typeof this.pubkey !== \"string\")\n    return false;\n  if (!this.pubkey.match(PUBKEY_REGEX))\n    return false;\n  if (!Array.isArray(this.tags))\n    return false;\n  for (let i = 0; i < this.tags.length; i++) {\n    const tag = this.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nvar verifiedEvents = new LRUCache({\n  maxSize: 1e3,\n  entryExpirationTimeInMS: 6e4\n});\nfunction verifySignature(persist) {\n  if (typeof this.signatureVerified === \"boolean\")\n    return this.signatureVerified;\n  const prevVerification = verifiedEvents.get(this.id);\n  if (prevVerification !== null) {\n    return this.signatureVerified = prevVerification;\n  }\n  try {\n    if (this.ndk?.asyncSigVerification) {\n      verifySignatureAsync(this, persist).then((result) => {\n        if (persist) {\n          this.signatureVerified = result;\n          verifiedEvents.set(this.id, result);\n        }\n        if (!result) {\n          this.ndk.emit(\"event:invalid-sig\", this);\n        }\n      });\n    } else {\n      const hash = sha256(new TextEncoder().encode(this.serialize()));\n      const res = schnorr.verify(this.sig, hash, this.pubkey);\n      verifiedEvents.set(this.id, res);\n      return this.signatureVerified = res;\n    }\n  } catch (err) {\n    console.error(\"Error verifying signature\", this.rawEvent(), err);\n    return this.signatureVerified = false;\n  }\n}\nfunction getEventHash() {\n  return getEventHashFromSerializedEvent(this.serialize());\n}\nfunction getEventHashFromSerializedEvent(serializedEvent) {\n  const eventHash = sha256(new TextEncoder().encode(serializedEvent));\n  return bytesToHex(eventHash);\n}\n\n// src/zap/index.ts\nimport { bech32 } from \"@scure/base\";\nimport { EventEmitter as EventEmitter3 } from \"tseep\";\nimport { nip57 } from \"nostr-tools\";\nimport createDebug from \"debug\";\nvar debug2 = createDebug(\"ndk:zap\");\nvar DEFAULT_RELAYS = [\n  \"wss://nos.lol\",\n  \"wss://relay.nostr.band\",\n  \"wss://relay.f7z.io\",\n  \"wss://relay.damus.io\",\n  \"wss://nostr.mom\",\n  \"wss://no.str.cr\"\n];\nvar NDKZap = class _NDKZap extends EventEmitter3 {\n  ndk;\n  zappedEvent;\n  zappedUser;\n  fetch = fetch;\n  constructor(args) {\n    super();\n    this.ndk = args.ndk;\n    this.zappedEvent = args.zappedEvent;\n    this.fetch = args._fetch || fetch;\n    this.zappedUser = args.zappedUser || this.ndk.getUser({ pubkey: this.zappedEvent?.pubkey });\n  }\n  /**\n   * Fetches the zapper's pubkey for the zapped user\n   */\n  static async getZapperPubkey(ndk, forUser) {\n    const zappedUser = ndk.getUser({ pubkey: forUser });\n    const zap = new _NDKZap({ ndk, zappedUser });\n    const lnurlspec = await zap.getZapSpec();\n    return lnurlspec?.nostrPubkey;\n  }\n  async getZapSpec() {\n    if (!this.zappedUser)\n      throw new Error(\"No user to zap was provided\");\n    return this.zappedUser.getZapConfiguration(this.ndk);\n  }\n  async getZapSpecWithoutCache() {\n    let lud06;\n    let lud16;\n    let zapEndpoint;\n    let profile;\n    if (this.zappedUser) {\n      if (!this.zappedUser.profile) {\n        await this.zappedUser.fetchProfile({ groupable: false });\n      }\n      profile = this.zappedUser.profile;\n      lud06 = (this.zappedUser.profile || {}).lud06;\n      lud16 = (this.zappedUser.profile || {}).lud16;\n    }\n    if (lud16 && !lud16.startsWith(\"LNURL\")) {\n      const [name, domain] = lud16.split(\"@\");\n      zapEndpoint = `https://${domain}/.well-known/lnurlp/${name}`;\n    } else if (lud06) {\n      const { words } = bech32.decode(lud06, 1e3);\n      const data = bech32.fromWords(words);\n      const utf8Decoder = new TextDecoder(\"utf-8\");\n      zapEndpoint = utf8Decoder.decode(data);\n    }\n    if (!zapEndpoint) {\n      debug2(\"No zap endpoint found\", profile, { lud06, lud16 });\n      throw new Error(\"No zap endpoint found\");\n    }\n    try {\n      const _fetch = this.fetch || this.ndk.httpFetch;\n      const response = await _fetch(zapEndpoint);\n      if (response.status !== 200) {\n        const text = await response.text();\n        throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${text}`);\n      }\n      return await response.json();\n    } catch (e) {\n      throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${e}`);\n    }\n  }\n  async getZapEndpoint() {\n    const zapSpec = await this.getZapSpec();\n    if (!zapSpec)\n      return;\n    let zapEndpointCallback;\n    if (zapSpec?.allowsNostr && (zapSpec?.nostrPubkey || zapSpec?.nostrPubkey)) {\n      zapEndpointCallback = zapSpec.callback;\n    }\n    return zapEndpointCallback;\n  }\n  /**\n   * Generates a kind:9734 zap request and returns the payment request\n   * @param amount amount to zap in millisatoshis\n   * @param comment optional comment to include in the zap request\n   * @param extraTags optional extra tags to include in the zap request\n   * @param relays optional relays to ask zapper to publish the zap to\n   * @returns the payment request\n   */\n  async createZapRequest(amount, comment, extraTags, relays, signer) {\n    const res = await this.generateZapRequest(amount, comment, extraTags, relays);\n    if (!res)\n      return null;\n    const { event, zapEndpoint } = res;\n    if (!event) {\n      throw new Error(\"No zap request event found\");\n    }\n    await event.sign(signer);\n    let invoice;\n    try {\n      debug2(`Getting invoice for zap request: ${zapEndpoint}`);\n      invoice = await this.getInvoice(event, amount, zapEndpoint);\n    } catch (e) {\n      throw new Error(\"Failed to get invoice: \" + e);\n    }\n    return invoice;\n  }\n  async getInvoice(event, amount, zapEndpoint) {\n    debug2(\n      `Fetching invoice from ${zapEndpoint}?` + new URLSearchParams({\n        amount: amount.toString(),\n        nostr: encodeURIComponent(JSON.stringify(event.rawEvent()))\n      })\n    );\n    const url = new URL(zapEndpoint);\n    url.searchParams.append(\"amount\", amount.toString());\n    url.searchParams.append(\"nostr\", JSON.stringify(event.rawEvent()));\n    debug2(`Fetching invoice from ${url.toString()}`);\n    const response = await fetch(url.toString());\n    debug2(`Got response from zap endpoint: ${zapEndpoint}`, { status: response.status });\n    if (response.status !== 200) {\n      debug2(`Received non-200 status from zap endpoint: ${zapEndpoint}`, {\n        status: response.status,\n        amount,\n        nostr: JSON.stringify(event.rawEvent())\n      });\n      const text = await response.text();\n      throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${text}`);\n    }\n    const body = await response.json();\n    return body.pr;\n  }\n  async generateZapRequest(amount, comment, extraTags, relays, signer) {\n    const zapEndpoint = await this.getZapEndpoint();\n    if (!zapEndpoint) {\n      throw new Error(\"No zap endpoint found\");\n    }\n    if (!this.zappedEvent && !this.zappedUser)\n      throw new Error(\"No zapped event or user found\");\n    const zapRequest = nip57.makeZapRequest({\n      profile: this.zappedUser.pubkey,\n      // set the event to null since nostr-tools doesn't support nip-33 zaps\n      event: null,\n      amount,\n      comment: comment || \"\",\n      relays: relays ?? this.relays()\n    });\n    if (this.zappedEvent) {\n      const tags = this.zappedEvent.referenceTags();\n      const nonPTags = tags.filter((tag) => tag[0] !== \"p\");\n      zapRequest.tags.push(...nonPTags);\n    }\n    zapRequest.tags.push([\"lnurl\", zapEndpoint]);\n    const event = new NDKEvent(this.ndk, zapRequest);\n    if (extraTags) {\n      event.tags = event.tags.concat(extraTags);\n    }\n    return { event, zapEndpoint };\n  }\n  /**\n   * @returns the relays to use for the zap request\n   */\n  relays() {\n    let r = [];\n    if (this.ndk?.pool?.relays) {\n      r = this.ndk.pool.urls();\n    }\n    if (!r.length) {\n      r = DEFAULT_RELAYS;\n    }\n    return r;\n  }\n};\n\n// src/events/index.ts\nvar NDKEvent = class _NDKEvent extends EventEmitter4 {\n  ndk;\n  created_at;\n  content = \"\";\n  tags = [];\n  kind;\n  id = \"\";\n  sig;\n  pubkey = \"\";\n  signatureVerified;\n  _author = void 0;\n  /**\n   * The relay that this event was first received from.\n   */\n  relay;\n  /**\n   * The relays that this event was received from and/or successfully published to.\n   */\n  onRelays = [];\n  constructor(ndk, event) {\n    super();\n    this.ndk = ndk;\n    this.created_at = event?.created_at;\n    this.content = event?.content || \"\";\n    this.tags = event?.tags || [];\n    this.id = event?.id || \"\";\n    this.sig = event?.sig;\n    this.pubkey = event?.pubkey || \"\";\n    this.kind = event?.kind;\n  }\n  /**\n   * Deserialize an NDKEvent from a serialized payload.\n   * @param ndk\n   * @param event\n   * @returns\n   */\n  static deserialize(ndk, event) {\n    return new _NDKEvent(ndk, deserialize(event));\n  }\n  /**\n   * Returns the event as is.\n   */\n  rawEvent() {\n    return {\n      created_at: this.created_at,\n      content: this.content,\n      tags: this.tags,\n      kind: this.kind,\n      pubkey: this.pubkey,\n      id: this.id,\n      sig: this.sig\n    };\n  }\n  set author(user) {\n    this.pubkey = user.pubkey;\n    this._author = void 0;\n  }\n  /**\n   * Returns an NDKUser for the author of the event.\n   */\n  get author() {\n    if (this._author)\n      return this._author;\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    const user = this.ndk.getUser({ pubkey: this.pubkey });\n    this._author = user;\n    return user;\n  }\n  tag(userOrTagOrEvent, marker, skipAuthorTag, forceTag) {\n    let tags = [];\n    const isNDKUser = userOrTagOrEvent.fetchProfile !== void 0;\n    if (isNDKUser) {\n      forceTag ??= \"p\";\n      const tag = [forceTag, userOrTagOrEvent.pubkey];\n      if (marker)\n        tag.push(...[\"\", marker]);\n      tags.push(tag);\n    } else if (userOrTagOrEvent instanceof _NDKEvent) {\n      const event = userOrTagOrEvent;\n      skipAuthorTag ??= event?.pubkey === this.pubkey;\n      tags = event.referenceTags(marker, skipAuthorTag, forceTag);\n      for (const pTag of event.getMatchingTags(\"p\")) {\n        if (pTag[1] === this.pubkey)\n          continue;\n        if (this.tags.find((t) => t[0] === \"p\" && t[1] === pTag[1]))\n          continue;\n        this.tags.push([\"p\", pTag[1]]);\n      }\n    } else if (Array.isArray(userOrTagOrEvent)) {\n      tags = [userOrTagOrEvent];\n    } else {\n      throw new Error(\"Invalid argument\", userOrTagOrEvent);\n    }\n    this.tags = mergeTags(this.tags, tags);\n  }\n  /**\n   * Return a NostrEvent object, trying to fill in missing fields\n   * when possible, adding tags when necessary.\n   * @param pubkey {string} The pubkey of the user who the event belongs to.\n   * @returns {Promise<NostrEvent>} A promise that resolves to a NostrEvent.\n   */\n  async toNostrEvent(pubkey) {\n    if (!pubkey && this.pubkey === \"\") {\n      const user = await this.ndk?.signer?.user();\n      this.pubkey = user?.pubkey || \"\";\n    }\n    if (!this.created_at) {\n      this.created_at = Math.floor(Date.now() / 1e3);\n    }\n    const { content, tags } = await this.generateTags();\n    this.content = content || \"\";\n    this.tags = tags;\n    try {\n      this.id = this.getEventHash();\n    } catch (e) {\n    }\n    return this.rawEvent();\n  }\n  serialize = serialize.bind(this);\n  getEventHash = getEventHash.bind(this);\n  validate = validate.bind(this);\n  verifySignature = verifySignature.bind(this);\n  isReplaceable = isReplaceable.bind(this);\n  isEphemeral = isEphemeral.bind(this);\n  isParamReplaceable = isParamReplaceable.bind(this);\n  /**\n   * Encodes a bech32 id.\n   *\n   * @param relays {string[]} The relays to encode in the id\n   * @returns {string} - Encoded naddr, note or nevent.\n   */\n  encode = encode.bind(this);\n  encrypt = encrypt.bind(this);\n  decrypt = decrypt.bind(this);\n  /**\n   * Get all tags with the given name\n   * @param tagName {string} The name of the tag to search for\n   * @returns {NDKTag[]} An array of the matching tags\n   */\n  getMatchingTags(tagName, marker) {\n    return this.tags.filter((tag) => tag[0] === tagName).filter((tag) => !marker || tag[3] === marker);\n  }\n  /**\n   * Get the first tag with the given name\n   * @param tagName Tag name to search for\n   * @returns The value of the first tag with the given name, or undefined if no such tag exists\n   */\n  tagValue(tagName) {\n    const tags = this.getMatchingTags(tagName);\n    if (tags.length === 0)\n      return void 0;\n    return tags[0][1];\n  }\n  /**\n   * Gets the NIP-31 \"alt\" tag of the event.\n   */\n  get alt() {\n    return this.tagValue(\"alt\");\n  }\n  /**\n   * Sets the NIP-31 \"alt\" tag of the event. Use this to set an alt tag so\n   * clients that don't handle a particular event kind can display something\n   * useful for users.\n   */\n  set alt(alt) {\n    this.removeTag(\"alt\");\n    if (alt)\n      this.tags.push([\"alt\", alt]);\n  }\n  /**\n   * Gets the NIP-33 \"d\" tag of the event.\n   */\n  get dTag() {\n    return this.tagValue(\"d\");\n  }\n  /**\n   * Sets the NIP-33 \"d\" tag of the event.\n   */\n  set dTag(value) {\n    this.removeTag(\"d\");\n    if (value)\n      this.tags.push([\"d\", value]);\n  }\n  /**\n   * Remove all tags with the given name (e.g. \"d\", \"a\", \"p\")\n   * @param tagName Tag name to search for and remove\n   * @returns {void}\n   */\n  removeTag(tagName) {\n    this.tags = this.tags.filter((tag) => tag[0] !== tagName);\n  }\n  /**\n   * Sign the event if a signer is present.\n   *\n   * It will generate tags.\n   * Repleacable events will have their created_at field set to the current time.\n   * @param signer {NDKSigner} The NDKSigner to use to sign the event\n   * @returns {Promise<string>} A Promise that resolves to the signature of the signed event.\n   */\n  async sign(signer) {\n    if (!signer) {\n      this.ndk?.assertSigner();\n      signer = this.ndk.signer;\n    } else {\n      this.author = await signer.user();\n    }\n    const nostrEvent = await this.toNostrEvent();\n    console.log(\"signing\", nostrEvent);\n    this.sig = await signer.sign(nostrEvent);\n    return this.sig;\n  }\n  /**\n   * Attempt to sign and then publish an NDKEvent to a given relaySet.\n   * If no relaySet is provided, the relaySet will be calculated by NDK.\n   * @param relaySet {NDKRelaySet} The relaySet to publish the even to.\n   * @returns A promise that resolves to the relays the event was published to.\n   */\n  async publish(relaySet, timeoutMs) {\n    if (!this.sig)\n      await this.sign();\n    if (!this.ndk)\n      throw new Error(\"NDKEvent must be associated with an NDK instance to publish\");\n    if (!relaySet) {\n      relaySet = this.ndk.devWriteRelaySet || calculateRelaySetFromEvent(this.ndk, this);\n    }\n    this.ndk.debug(`publish to ${relaySet.size} relays`, this.rawEvent());\n    if (this.kind === 5 /* EventDeletion */ && this.ndk.cacheAdapter?.deleteEvent) {\n      this.ndk.cacheAdapter.deleteEvent(this);\n    }\n    const relays = await relaySet.publish(this, timeoutMs);\n    this.onRelays = Array.from(relays);\n    return relays;\n  }\n  /**\n   * Generates tags for users, notes, and other events tagged in content.\n   * Will also generate random \"d\" tag for parameterized replaceable events where needed.\n   * @returns {ContentTag} The tags and content of the event.\n   */\n  async generateTags() {\n    let tags = [];\n    const g = await generateContentTags(this.content, this.tags);\n    const content = g.content;\n    tags = g.tags;\n    if (this.kind && this.isParamReplaceable()) {\n      const dTag = this.getMatchingTags(\"d\")[0];\n      if (!dTag) {\n        const title = this.tagValue(\"title\");\n        const randLength = title ? 6 : 16;\n        let str = [...Array(randLength)].map(() => Math.random().toString(36)[2]).join(\"\");\n        if (title && title.length > 0) {\n          str = title.replace(/[^a-z0-9]+/gi, \"-\").replace(/^-|-$/g, \"\") + \"-\" + str;\n        }\n        tags.push([\"d\", str]);\n      }\n    }\n    if ((this.ndk?.clientName || this.ndk?.clientNip89) && !this.tagValue(\"client\")) {\n      const clientTag = [\"client\", this.ndk.clientName ?? \"\"];\n      if (this.ndk.clientNip89)\n        clientTag.push(this.ndk.clientNip89);\n      tags.push(clientTag);\n    }\n    return { content: content || \"\", tags };\n  }\n  muted() {\n    const authorMutedEntry = this.ndk?.mutedIds.get(this.pubkey);\n    if (authorMutedEntry && authorMutedEntry === \"p\")\n      return \"author\";\n    const eventTagReference = this.tagReference();\n    const eventMutedEntry = this.ndk?.mutedIds.get(eventTagReference[1]);\n    if (eventMutedEntry && eventMutedEntry === eventTagReference[0])\n      return \"event\";\n    return null;\n  }\n  /**\n   * Returns the \"d\" tag of a parameterized replaceable event or throws an error if the event isn't\n   * a parameterized replaceable event.\n   * @returns {string} the \"d\" tag of the event.\n   */\n  replaceableDTag() {\n    if (this.kind && this.kind >= 3e4 && this.kind <= 4e4) {\n      const dTag = this.getMatchingTags(\"d\")[0];\n      const dTagId = dTag ? dTag[1] : \"\";\n      return dTagId;\n    }\n    throw new Error(\"Event is not a parameterized replaceable event\");\n  }\n  /**\n   * Provides a deduplication key for the event.\n   *\n   * For kinds 0, 3, 10k-20k this will be the event <kind>:<pubkey>\n   * For kinds 30k-40k this will be the event <kind>:<pubkey>:<d-tag>\n   * For all other kinds this will be the event id\n   */\n  deduplicationKey() {\n    if (this.kind === 0 || this.kind === 3 || this.kind && this.kind >= 1e4 && this.kind < 2e4) {\n      return `${this.kind}:${this.pubkey}`;\n    } else {\n      return this.tagId();\n    }\n  }\n  /**\n   * Returns the id of the event or, if it's a parameterized event, the generated id of the event using \"d\" tag, pubkey, and kind.\n   * @returns {string} The id\n   */\n  tagId() {\n    if (this.isParamReplaceable()) {\n      return this.tagAddress();\n    }\n    return this.id;\n  }\n  /**\n   * Returns the \"reference\" value (\"<kind>:<author-pubkey>:<d-tag>\") for this replaceable event.\n   * @returns {string} The id\n   */\n  tagAddress() {\n    if (!this.isParamReplaceable()) {\n      throw new Error(\"This must only be called on replaceable events\");\n    }\n    const dTagId = this.replaceableDTag();\n    return `${this.kind}:${this.pubkey}:${dTagId}`;\n  }\n  /**\n   * Determines the type of tag that can be used to reference this event from another event.\n   * @returns {string} The tag type\n   * @example\n   * event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   * event.tagType(); // \"a\"\n   */\n  tagType() {\n    return this.isParamReplaceable() ? \"a\" : \"e\";\n  }\n  /**\n   * Get the tag that can be used to reference this event from another event.\n   *\n   * Consider using referenceTags() instead (unless you have a good reason to use this)\n   *\n   * @example\n   *     event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *     event.tagReference(); // [\"a\", \"30000:pubkey:d-code\"]\n   *\n   *     event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *     event.tagReference(); // [\"e\", \"eventid\"]\n   * @returns {NDKTag} The NDKTag object referencing this event\n   */\n  tagReference(marker) {\n    let tag;\n    if (this.isParamReplaceable()) {\n      tag = [\"a\", this.tagAddress()];\n    } else {\n      tag = [\"e\", this.tagId()];\n    }\n    if (this.relay) {\n      tag.push(this.relay.url);\n    } else {\n      tag.push(\"\");\n    }\n    if (marker) {\n      tag.push(marker);\n    }\n    return tag;\n  }\n  /**\n   * Get the tags that can be used to reference this event from another event\n   * @param marker The marker to use in the tag\n   * @param skipAuthorTag Whether to explicitly skip adding the author tag of the event\n   * @param forceTag Force a specific tag to be used instead of the default \"e\" or \"a\" tag\n   * @example\n   *     event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *     event.referenceTags(); // [[\"a\", \"30000:pubkey:d-code\"], [\"e\", \"parent-id\"]]\n   *\n   *     event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *     event.referenceTags(); // [[\"e\", \"parent-id\"]]\n   * @returns {NDKTag} The NDKTag object referencing this event\n   */\n  referenceTags(marker, skipAuthorTag, forceTag) {\n    let tags = [];\n    if (this.isParamReplaceable()) {\n      tags = [\n        [forceTag ?? \"a\", this.tagAddress()],\n        [forceTag ?? \"e\", this.id]\n      ];\n    } else {\n      tags = [[forceTag ?? \"e\", this.id]];\n    }\n    if (this.relay?.url) {\n      tags = tags.map((tag) => {\n        tag.push(this.relay?.url);\n        return tag;\n      });\n    } else if (marker) {\n      tags = tags.map((tag) => {\n        tag.push(\"\");\n        return tag;\n      });\n    }\n    if (marker) {\n      tags.forEach((tag) => tag.push(marker));\n    }\n    if (!skipAuthorTag)\n      tags.push(...this.author.referenceTags());\n    return tags;\n  }\n  /**\n   * Provides the filter that will return matching events for this event.\n   *\n   * @example\n   *    event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *    event.filter(); // { \"#a\": [\"30000:pubkey:d-code\"] }\n   * @example\n   *    event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *    event.filter(); // { \"#e\": [\"eventid\"] }\n   *\n   * @returns The filter that will return matching events for this event\n   */\n  filter() {\n    if (this.isParamReplaceable()) {\n      return { \"#a\": [this.tagId()] };\n    } else {\n      return { \"#e\": [this.tagId()] };\n    }\n  }\n  /**\n   * Create a zap request for an existing event\n   *\n   * @param amount The amount to zap in millisatoshis\n   * @param comment A comment to add to the zap request\n   * @param extraTags Extra tags to add to the zap request\n   * @param recipient The zap recipient (optional for events)\n   * @param signer The signer to use (will default to the NDK instance's signer)\n   */\n  async zap(amount, comment, extraTags, recipient, signer) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    if (!signer) {\n      this.ndk.assertSigner();\n    }\n    const zap = new NDKZap({\n      ndk: this.ndk,\n      zappedEvent: this,\n      zappedUser: recipient\n    });\n    const relays = Array.from(this.ndk.pool.relays.keys());\n    const paymentRequest = await zap.createZapRequest(\n      amount,\n      comment,\n      extraTags,\n      relays,\n      signer\n    );\n    return paymentRequest;\n  }\n  /**\n   * Generates a deletion event of the current event\n   *\n   * @param reason The reason for the deletion\n   * @param publish Whether to publish the deletion event automatically\n   * @returns The deletion event\n   */\n  async delete(reason, publish = true) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    const e = new _NDKEvent(this.ndk, {\n      kind: 5 /* EventDeletion */,\n      content: reason || \"\"\n    });\n    e.tag(this);\n    if (publish)\n      await e.publish();\n    return e;\n  }\n  /**\n   * Fetch an event tagged with the given tag following relay hints if provided.\n   * @param tag The tag to search for\n   * @param marker The marker to use in the tag (e.g. \"root\")\n   * @returns The fetched event or null if no event was found, undefined if no matching tag was found in the event\n   * * @example\n   * const replyEvent = await ndk.fetchEvent(\"nevent1qqs8x8vnycyha73grv380gmvlury4wtmx0nr9a5ds2dngqwgu87wn6gpzemhxue69uhhyetvv9ujuurjd9kkzmpwdejhgq3ql2vyh47mk2p0qlsku7hg0vn29faehy9hy34ygaclpn66ukqp3afqz4cwjd\")\n   * const originalEvent = await replyEvent.fetchTaggedEvent(\"e\", \"reply\");\n   * console.log(replyEvent.encode() + \" is a reply to event \" + originalEvent?.encode());\n   */\n  fetchTaggedEvent = fetchTaggedEvent.bind(this);\n  /**\n   * Fetch the root event of the current event.\n   * @returns The fetched root event or null if no event was found\n   * @example\n   * const replyEvent = await ndk.fetchEvent(\"nevent1qqs8x8vnycyha73grv380gmvlury4wtmx0nr9a5ds2dngqwgu87wn6gpzemhxue69uhhyetvv9ujuurjd9kkzmpwdejhgq3ql2vyh47mk2p0qlsku7hg0vn29faehy9hy34ygaclpn66ukqp3afqz4cwjd\")\n   * const rootEvent = await replyEvent.fetchRootEvent();\n   * console.log(replyEvent.encode() + \" is a reply in the thread \" + rootEvent?.encode());\n   */\n  fetchRootEvent = fetchRootEvent.bind(this);\n  /**\n   * Fetch the event the current event is replying to.\n   * @returns The fetched reply event or null if no event was found\n   */\n  fetchReplyEvent = fetchReplyEvent.bind(this);\n  /**\n   * NIP-18 reposting event.\n   *\n   * @param publish Whether to publish the reposted event automatically @default true\n   * @param signer The signer to use for signing the reposted event\n   * @returns The reposted event\n   *\n   * @function\n   */\n  repost = repost.bind(this);\n  /**\n   * React to an existing event\n   *\n   * @param content The content of the reaction\n   */\n  async react(content, publish = true) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    const e = new _NDKEvent(this.ndk, {\n      kind: 7 /* Reaction */,\n      content\n    });\n    e.tag(this);\n    if (publish) {\n      await e.publish();\n    } else {\n      await e.sign();\n    }\n    return e;\n  }\n  /**\n   * Checks whether the event is valid per underlying NIPs.\n   *\n   * This method is meant to be overridden by subclasses that implement specific NIPs\n   * to allow the enforcement of NIP-specific validation rules.\n   *\n   * Otherwise, it will only check for basic event properties.\n   *\n   */\n  get isValid() {\n    return this.validate();\n  }\n};\n\n// src/subscription/index.ts\nimport { EventEmitter as EventEmitter5 } from \"tseep\";\nvar NDKSubscriptionCacheUsage = /* @__PURE__ */ ((NDKSubscriptionCacheUsage2) => {\n  NDKSubscriptionCacheUsage2[\"ONLY_CACHE\"] = \"ONLY_CACHE\";\n  NDKSubscriptionCacheUsage2[\"CACHE_FIRST\"] = \"CACHE_FIRST\";\n  NDKSubscriptionCacheUsage2[\"PARALLEL\"] = \"PARALLEL\";\n  NDKSubscriptionCacheUsage2[\"ONLY_RELAY\"] = \"ONLY_RELAY\";\n  return NDKSubscriptionCacheUsage2;\n})(NDKSubscriptionCacheUsage || {});\nvar defaultOpts = {\n  closeOnEose: false,\n  cacheUsage: \"CACHE_FIRST\" /* CACHE_FIRST */,\n  groupable: true,\n  groupableDelay: 100,\n  groupableDelayType: \"at-most\"\n};\nvar NDKSubscription = class extends EventEmitter5 {\n  subId;\n  filters;\n  opts;\n  pool;\n  skipVerification = false;\n  skipValidation = false;\n  /**\n   * Tracks the filters as they are executed on each relay\n   */\n  relayFilters;\n  relaySet;\n  ndk;\n  debug;\n  eoseDebug;\n  /**\n   * Events that have been seen by the subscription, with the time they were first seen.\n   */\n  eventFirstSeen = /* @__PURE__ */ new Map();\n  /**\n   * Relays that have sent an EOSE.\n   */\n  eosesSeen = /* @__PURE__ */ new Set();\n  /**\n   * Events that have been seen by the subscription per relay.\n   */\n  eventsPerRelay = /* @__PURE__ */ new Map();\n  /**\n   * The time the last event was received by the subscription.\n   * This is used to calculate when EOSE should be emitted.\n   */\n  lastEventReceivedAt;\n  internalId;\n  /**\n   * Whether the subscription should close when all relays have reached the end of the event stream.\n   */\n  closeOnEose;\n  constructor(ndk, filters, opts, relaySet, subId) {\n    super();\n    this.ndk = ndk;\n    this.pool = opts?.pool || ndk.pool;\n    this.opts = { ...defaultOpts, ...opts || {} };\n    this.filters = filters instanceof Array ? filters : [filters];\n    this.subId = subId || opts?.subId;\n    this.internalId = Math.random().toString(36).substring(7);\n    this.relaySet = relaySet;\n    this.debug = ndk.debug.extend(`subscription[${opts?.subId ?? this.internalId}]`);\n    this.eoseDebug = this.debug.extend(\"eose\");\n    this.skipVerification = opts?.skipVerification || false;\n    this.skipValidation = opts?.skipValidation || false;\n    this.closeOnEose = opts?.closeOnEose || false;\n    if (this.opts.cacheUsage === \"ONLY_CACHE\" /* ONLY_CACHE */ && !this.opts.closeOnEose) {\n      throw new Error(\"Cannot use cache-only options with a persistent subscription\");\n    }\n  }\n  /**\n   * Provides access to the first filter of the subscription for\n   * backwards compatibility.\n   */\n  get filter() {\n    return this.filters[0];\n  }\n  isGroupable() {\n    return this.opts?.groupable || false;\n  }\n  shouldQueryCache() {\n    return this.opts?.cacheUsage !== \"ONLY_RELAY\" /* ONLY_RELAY */;\n  }\n  shouldQueryRelays() {\n    return this.opts?.cacheUsage !== \"ONLY_CACHE\" /* ONLY_CACHE */;\n  }\n  shouldWaitForCache() {\n    return (\n      // Must want to close on EOSE; subscriptions\n      // that want to receive further updates must\n      // always hit the relay\n      this.opts.closeOnEose && // Cache adapter must claim to be fast\n      !!this.ndk.cacheAdapter?.locking && // If explicitly told to run in parallel, then\n      // we should not wait for the cache\n      this.opts.cacheUsage !== \"PARALLEL\" /* PARALLEL */\n    );\n  }\n  /**\n   * Start the subscription. This is the main method that should be called\n   * after creating a subscription.\n   */\n  async start() {\n    let cachePromise;\n    if (this.shouldQueryCache()) {\n      cachePromise = this.startWithCache();\n      if (this.shouldWaitForCache()) {\n        await cachePromise;\n        if (queryFullyFilled(this)) {\n          this.emit(\"eose\", this);\n          return;\n        }\n      }\n    }\n    if (this.shouldQueryRelays()) {\n      this.startWithRelays();\n    } else {\n      this.emit(\"eose\", this);\n    }\n    return;\n  }\n  stop() {\n    this.emit(\"close\", this);\n    this.removeAllListeners();\n  }\n  /**\n   * @returns Whether the subscription has an authors filter.\n   */\n  hasAuthorsFilter() {\n    return this.filters.some((f) => f.authors?.length);\n  }\n  async startWithCache() {\n    if (this.ndk.cacheAdapter?.query) {\n      const promise = this.ndk.cacheAdapter.query(this);\n      if (this.ndk.cacheAdapter.locking) {\n        await promise;\n      }\n    }\n  }\n  /**\n   * Send REQ to relays\n   */\n  startWithRelays() {\n    if (!this.relaySet) {\n      this.relayFilters = calculateRelaySetsFromFilters(this.ndk, this.filters, this.pool);\n    } else {\n      this.relayFilters = /* @__PURE__ */ new Map();\n      for (const relay of this.relaySet.relays) {\n        this.relayFilters.set(relay.url, this.filters);\n      }\n    }\n    if (!this.relayFilters || this.relayFilters.size === 0) {\n      this.debug(`No relays to subscribe to`, this.pool.relays.size);\n      return;\n    }\n    for (const [relayUrl, filters] of this.relayFilters) {\n      const relay = this.pool.getRelay(relayUrl, true, true, filters);\n      relay.subscribe(this, filters);\n    }\n  }\n  // EVENT handling\n  /**\n   * Called when an event is received from a relay or the cache\n   * @param event\n   * @param relay\n   * @param fromCache Whether the event was received from the cache\n   */\n  eventReceived(event, relay, fromCache = false) {\n    if (relay) {\n      event.relay ??= relay;\n      event.onRelays.push(relay);\n    }\n    if (!relay)\n      relay = event.relay;\n    event.ndk ??= this.ndk;\n    if (!fromCache && relay) {\n      this.ndk.emit(\"event\", event, relay);\n    }\n    const eventAlreadySeen = this.eventFirstSeen.has(event.id);\n    if (eventAlreadySeen) {\n      const timeSinceFirstSeen = Date.now() - (this.eventFirstSeen.get(event.id) || 0);\n      if (relay) {\n        relay.scoreSlowerEvent(timeSinceFirstSeen);\n        this.trackPerRelay(event, relay);\n      }\n      this.emit(\"event:dup\", event, relay, timeSinceFirstSeen, this);\n      return;\n    }\n    if (!fromCache) {\n      if (!this.skipValidation) {\n        if (!event.isValid) {\n          this.debug(`Event failed validation`, event.rawEvent());\n          return;\n        }\n      }\n      if (event.relay?.shouldValidateEvent() !== false) {\n        if (!this.skipVerification) {\n          if (!event.verifySignature(true) && !this.ndk.asyncSigVerification) {\n            this.debug(`Event failed signature validation`, event);\n            return;\n          }\n        }\n      }\n    }\n    if (!fromCache && relay) {\n      this.trackPerRelay(event, relay);\n      if (this.ndk.cacheAdapter) {\n        this.ndk.cacheAdapter.setEvent(event, this.filters, relay);\n      }\n      this.eventFirstSeen.set(event.id, Date.now());\n    } else {\n      this.eventFirstSeen.set(event.id, 0);\n    }\n    this.emit(\"event\", event, relay, this);\n    this.lastEventReceivedAt = Date.now();\n  }\n  trackPerRelay(event, relay) {\n    let events = this.eventsPerRelay.get(relay);\n    if (!events) {\n      events = /* @__PURE__ */ new Set();\n      this.eventsPerRelay.set(relay, events);\n    }\n    events.add(event.id);\n  }\n  // EOSE handling\n  eoseTimeout;\n  eoseReceived(relay) {\n    this.eosesSeen.add(relay);\n    let lastEventSeen = this.lastEventReceivedAt ? Date.now() - this.lastEventReceivedAt : void 0;\n    const hasSeenAllEoses = this.eosesSeen.size === this.relayFilters?.size;\n    const queryFilled = queryFullyFilled(this);\n    if (queryFilled) {\n      this.emit(\"eose\");\n      if (this.opts?.closeOnEose) {\n        this.stop();\n      } else {\n      }\n    } else if (hasSeenAllEoses) {\n      this.emit(\"eose\");\n      this.eoseDebug(`All EOSEs seen`);\n      if (this.opts?.closeOnEose) {\n        this.stop();\n      } else {\n      }\n    } else {\n      let timeToWaitForNextEose = 1e3;\n      const percentageOfRelaysThatHaveSentEose = this.eosesSeen.size / this.relayFilters.size;\n      if (this.eosesSeen.size >= 2 && percentageOfRelaysThatHaveSentEose >= 0.5) {\n        timeToWaitForNextEose = timeToWaitForNextEose * (1 - percentageOfRelaysThatHaveSentEose);\n        if (this.eoseTimeout) {\n          clearTimeout(this.eoseTimeout);\n        }\n        const sendEoseTimeout = () => {\n          lastEventSeen = this.lastEventReceivedAt ? Date.now() - this.lastEventReceivedAt : void 0;\n          if (lastEventSeen !== void 0 && lastEventSeen < 20) {\n            this.eoseTimeout = setTimeout(sendEoseTimeout, timeToWaitForNextEose);\n          } else {\n            this.emit(\"eose\");\n            if (this.opts?.closeOnEose)\n              this.stop();\n          }\n        };\n        this.eoseTimeout = setTimeout(sendEoseTimeout, timeToWaitForNextEose);\n      }\n    }\n  }\n};\n\n// src/user/follows.ts\nasync function follows(opts, outbox, kind = 3 /* Contacts */) {\n  if (!this.ndk)\n    throw new Error(\"NDK not set\");\n  const contactListEvent = await this.ndk.fetchEvent(\n    { kinds: [kind], authors: [this.pubkey] },\n    opts || { groupable: false }\n  );\n  if (contactListEvent) {\n    const pubkeys = /* @__PURE__ */ new Set();\n    contactListEvent.tags.forEach((tag) => {\n      if (tag[0] === \"p\")\n        pubkeys.add(tag[1]);\n    });\n    if (outbox) {\n      this.ndk?.outboxTracker?.trackUsers(Array.from(pubkeys));\n    }\n    return [...pubkeys].reduce((acc, pubkey) => {\n      const user = new NDKUser({ pubkey });\n      user.ndk = this.ndk;\n      acc.add(user);\n      return acc;\n    }, /* @__PURE__ */ new Set());\n  }\n  return /* @__PURE__ */ new Set();\n}\n\n// src/user/profile.ts\nfunction profileFromEvent(event) {\n  const profile = {};\n  let payload;\n  try {\n    payload = JSON.parse(event.content);\n  } catch (error) {\n    throw new Error(`Failed to parse profile event: ${error}`);\n  }\n  Object.keys(payload).forEach((key) => {\n    switch (key) {\n      case \"name\":\n        profile.name = payload.name;\n        break;\n      case \"display_name\":\n        profile.displayName = payload.display_name;\n        break;\n      case \"image\":\n      case \"picture\":\n        profile.image = payload.picture || payload.image;\n        break;\n      case \"banner\":\n        profile.banner = payload.banner;\n        break;\n      case \"bio\":\n        profile.bio = payload.bio;\n        break;\n      case \"nip05\":\n        profile.nip05 = payload.nip05;\n        break;\n      case \"lud06\":\n        profile.lud06 = payload.lud06;\n        break;\n      case \"lud16\":\n        profile.lud16 = payload.lud16;\n        break;\n      case \"about\":\n        profile.about = payload.about;\n        break;\n      case \"zapService\":\n        profile.zapService = payload.zapService;\n        break;\n      case \"website\":\n        profile.website = payload.website;\n        break;\n      default:\n        profile[key] = payload[key];\n        break;\n    }\n  });\n  return profile;\n}\nfunction serializeProfile(profile) {\n  const payload = {};\n  for (const [key, val] of Object.entries(profile)) {\n    switch (key) {\n      case \"username\":\n      case \"name\":\n        payload.name = val;\n        break;\n      case \"displayName\":\n        payload.display_name = val;\n        break;\n      case \"image\":\n      case \"picture\":\n        payload.picture = val;\n        break;\n      case \"bio\":\n      case \"about\":\n        payload.about = val;\n        break;\n      default:\n        payload[key] = val;\n        break;\n    }\n  }\n  return JSON.stringify(payload);\n}\n\n// src/user/nip05.ts\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nasync function getNip05For(ndk, fullname, _fetch = fetch, fetchOpts = {}) {\n  return await ndk.queuesNip05.add({\n    id: fullname,\n    func: async () => {\n      if (ndk.cacheAdapter && ndk.cacheAdapter.loadNip05) {\n        const profile = await ndk.cacheAdapter.loadNip05(fullname);\n        if (profile !== \"missing\") {\n          if (profile) {\n            const user = new NDKUser({\n              pubkey: profile.pubkey,\n              relayUrls: profile.relays,\n              nip46Urls: profile.nip46\n            });\n            user.ndk = ndk;\n            return user;\n          } else if (fetchOpts.cache !== \"no-cache\") {\n            return null;\n          }\n        }\n      }\n      const match = fullname.match(NIP05_REGEX);\n      if (!match)\n        return null;\n      const [_, name = \"_\", domain] = match;\n      try {\n        const res = await _fetch(\n          `https://${domain}/.well-known/nostr.json?name=${name}`,\n          fetchOpts\n        );\n        const { names, relays, nip46 } = parseNIP05Result(await res.json());\n        const pubkey = names[name.toLowerCase()];\n        let profile = null;\n        if (pubkey) {\n          profile = { pubkey, relays: relays?.[pubkey], nip46: nip46?.[pubkey] };\n        }\n        if (ndk?.cacheAdapter && ndk.cacheAdapter.saveNip05) {\n          ndk.cacheAdapter.saveNip05(fullname, profile);\n        }\n        return profile;\n      } catch (_e) {\n        if (ndk?.cacheAdapter && ndk.cacheAdapter.saveNip05) {\n          ndk?.cacheAdapter.saveNip05(fullname, null);\n        }\n        console.error(\"Failed to fetch NIP05 for\", fullname, _e);\n        return null;\n      }\n    }\n  });\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name.toLowerCase()] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter(\n          (relay) => typeof relay === \"string\"\n        );\n      }\n    }\n  }\n  if (json.nip46) {\n    result.nip46 = {};\n    for (const [pubkey, nip46] of Object.entries(json.nip46)) {\n      if (typeof pubkey === \"string\" && Array.isArray(nip46)) {\n        result.nip46[pubkey] = nip46.filter((relay) => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// src/user/index.ts\nvar NDKUser = class _NDKUser {\n  ndk;\n  profile;\n  _npub;\n  _pubkey;\n  relayUrls = [];\n  nip46Urls = [];\n  constructor(opts) {\n    if (opts.npub)\n      this._npub = opts.npub;\n    if (opts.hexpubkey)\n      this._pubkey = opts.hexpubkey;\n    if (opts.pubkey)\n      this._pubkey = opts.pubkey;\n    if (opts.relayUrls)\n      this.relayUrls = opts.relayUrls;\n    if (opts.nip46Urls)\n      this.nip46Urls = opts.nip46Urls;\n  }\n  get npub() {\n    if (!this._npub) {\n      if (!this._pubkey)\n        throw new Error(\"pubkey not set\");\n      this._npub = nip194.npubEncode(this.pubkey);\n    }\n    return this._npub;\n  }\n  set npub(npub) {\n    this._npub = npub;\n  }\n  /**\n   * Get the user's hexpubkey\n   * @returns {Hexpubkey} The user's hexpubkey\n   *\n   * @deprecated Use `pubkey` instead\n   */\n  get hexpubkey() {\n    return this.pubkey;\n  }\n  /**\n   * Set the user's hexpubkey\n   * @param pubkey {Hexpubkey} The user's hexpubkey\n   * @deprecated Use `pubkey` instead\n   */\n  set hexpubkey(pubkey) {\n    this._pubkey = pubkey;\n  }\n  /**\n   * Get the user's pubkey\n   * @returns {string} The user's pubkey\n   */\n  get pubkey() {\n    if (!this._pubkey) {\n      if (!this._npub)\n        throw new Error(\"npub not set\");\n      this._pubkey = nip194.decode(this.npub).data;\n    }\n    return this._pubkey;\n  }\n  /**\n   * Set the user's pubkey\n   * @param pubkey {string} The user's pubkey\n   */\n  set pubkey(pubkey) {\n    this._pubkey = pubkey;\n  }\n  /**\n   * Retrieves the zapper this pubkey has designated as an issuer of zap receipts\n   */\n  async getZapConfiguration(ndk) {\n    ndk ??= this.ndk;\n    if (!ndk)\n      throw new Error(\"No NDK instance found\");\n    const process = async () => {\n      if (this.ndk?.cacheAdapter?.loadUsersLNURLDoc) {\n        const doc = await this.ndk.cacheAdapter.loadUsersLNURLDoc(this.pubkey);\n        if (doc !== \"missing\") {\n          if (doc === null)\n            return;\n          if (doc)\n            return doc;\n        }\n      }\n      const zap = new NDKZap({ ndk, zappedUser: this });\n      let lnurlspec;\n      try {\n        lnurlspec = await zap.getZapSpecWithoutCache();\n      } catch {\n      }\n      if (this.ndk?.cacheAdapter?.saveUsersLNURLDoc) {\n        this.ndk.cacheAdapter.saveUsersLNURLDoc(this.pubkey, lnurlspec || null);\n      }\n      if (!lnurlspec)\n        return;\n      return lnurlspec;\n    };\n    return await ndk.queuesZapConfig.add({\n      id: this.pubkey,\n      func: process\n    });\n  }\n  /**\n   * Fetches the zapper's pubkey for the zapped user\n   * @returns The zapper's pubkey if one can be found\n   */\n  async getZapperPubkey() {\n    const zapConfig = await this.getZapConfiguration();\n    return zapConfig?.nostrPubkey;\n  }\n  /**\n   * Instantiate an NDKUser from a NIP-05 string\n   * @param nip05Id {string} The user's NIP-05\n   * @param ndk {NDK} An NDK instance\n   * @param skipCache {boolean} Whether to skip the cache or not\n   * @returns {NDKUser | undefined} An NDKUser if one is found for the given NIP-05, undefined otherwise.\n   */\n  static async fromNip05(nip05Id, ndk, skipCache = false) {\n    if (!ndk)\n      throw new Error(\"No NDK instance found\");\n    let opts = {};\n    if (skipCache)\n      opts.cache = \"no-cache\";\n    const profile = await getNip05For(ndk, nip05Id, ndk?.httpFetch, opts);\n    if (profile) {\n      const user = new _NDKUser({\n        pubkey: profile.pubkey,\n        relayUrls: profile.relays,\n        nip46Urls: profile.nip46\n      });\n      user.ndk = ndk;\n      return user;\n    }\n  }\n  /**\n   * Fetch a user's profile\n   * @param opts {NDKSubscriptionOptions} A set of NDKSubscriptionOptions\n   * @returns User Profile\n   */\n  async fetchProfile(opts) {\n    if (!this.ndk)\n      throw new Error(\"NDK not set\");\n    if (!this.profile)\n      this.profile = {};\n    let setMetadataEvents = null;\n    if (this.ndk.cacheAdapter && this.ndk.cacheAdapter.fetchProfile && opts?.cacheUsage !== \"ONLY_RELAY\" /* ONLY_RELAY */) {\n      const profile = await this.ndk.cacheAdapter.fetchProfile(this.pubkey);\n      if (profile) {\n        this.profile = profile;\n        return profile;\n      }\n    }\n    if (!opts && // if no options have been set\n    this.ndk.cacheAdapter && // and we have a cache\n    this.ndk.cacheAdapter.locking) {\n      setMetadataEvents = await this.ndk.fetchEvents(\n        {\n          kinds: [0],\n          authors: [this.pubkey]\n        },\n        {\n          cacheUsage: \"ONLY_CACHE\" /* ONLY_CACHE */,\n          closeOnEose: true,\n          groupable: false\n        }\n      );\n      opts = {\n        cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */,\n        closeOnEose: true,\n        groupable: true,\n        groupableDelay: 250\n      };\n    }\n    if (!setMetadataEvents || setMetadataEvents.size === 0) {\n      setMetadataEvents = await this.ndk.fetchEvents(\n        {\n          kinds: [0],\n          authors: [this.pubkey]\n        },\n        opts\n      );\n    }\n    const sortedSetMetadataEvents = Array.from(setMetadataEvents).sort(\n      (a, b) => a.created_at - b.created_at\n    );\n    if (sortedSetMetadataEvents.length === 0)\n      return null;\n    this.profile = profileFromEvent(sortedSetMetadataEvents[0]);\n    if (this.profile && this.ndk.cacheAdapter && this.ndk.cacheAdapter.saveProfile) {\n      this.ndk.cacheAdapter.saveProfile(this.pubkey, this.profile);\n    }\n    return this.profile;\n  }\n  /**\n   * Returns a set of users that this user follows.\n   */\n  follows = follows.bind(this);\n  /** @deprecated Use referenceTags instead. */\n  /**\n   * Get the tag that can be used to reference this user in an event\n   * @returns {NDKTag} an NDKTag\n   */\n  tagReference() {\n    return [\"p\", this.pubkey];\n  }\n  /**\n   * Get the tags that can be used to reference this user in an event\n   * @returns {NDKTag[]} an array of NDKTag\n   */\n  referenceTags(marker) {\n    const tag = [[\"p\", this.pubkey]];\n    if (!marker)\n      return tag;\n    tag[0].push(\"\", marker);\n    return tag;\n  }\n  /**\n   * Publishes the current profile.\n   */\n  async publish() {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    if (!this.profile)\n      throw new Error(\"No profile available\");\n    this.ndk.assertSigner();\n    const event = new NDKEvent(this.ndk, {\n      kind: 0,\n      content: serializeProfile(this.profile)\n    });\n    await event.publish();\n  }\n  /**\n   * Add a follow to this user's contact list\n   *\n   * @param newFollow {NDKUser} The user to follow\n   * @param currentFollowList {Set<NDKUser>} The current follow list\n   * @param kind {NDKKind} The kind to use for this contact list (defaults to `3`)\n   * @returns {Promise<boolean>} True if the follow was added, false if the follow already exists\n   */\n  async follow(newFollow, currentFollowList, kind = 3 /* Contacts */) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    if (!currentFollowList) {\n      currentFollowList = await this.follows(void 0, void 0, kind);\n    }\n    if (currentFollowList.has(newFollow)) {\n      return false;\n    }\n    currentFollowList.add(newFollow);\n    const event = new NDKEvent(this.ndk, { kind });\n    for (const follow of currentFollowList) {\n      event.tag(follow);\n    }\n    await event.publish();\n    return true;\n  }\n  /**\n   * Remove a follow from this user's contact list\n   *\n   * @param user {NDKUser} The user to unfollow\n   * @param currentFollowList {Set<Hexpubkey>} The current follow list\n   * @param kind {NDKKind} The kind to use for this contact list (defaults to `3`)\n   * @returns The relays were the follow list was published or false if the user wasn't found\n   */\n  async unfollow(user, currentFollowList, kind = 3 /* Contacts */) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    if (!currentFollowList) {\n      currentFollowList = await this.follows(void 0, void 0, kind);\n    }\n    const newUserFollowList = /* @__PURE__ */ new Set();\n    let foundUser = false;\n    for (const follow of currentFollowList) {\n      if (follow.pubkey !== user.pubkey) {\n        newUserFollowList.add(follow);\n        foundUser = true;\n      }\n    }\n    if (!foundUser)\n      return false;\n    const event = new NDKEvent(this.ndk, { kind });\n    for (const follow of currentFollowList) {\n      event.tag(follow);\n    }\n    return await event.publish();\n  }\n  /**\n   * Validate a user's NIP-05 identifier (usually fetched from their kind:0 profile data)\n   *\n   * @param nip05Id The NIP-05 string to validate\n   * @returns {Promise<boolean | null>} True if the NIP-05 is found and matches this user's pubkey,\n   * False if the NIP-05 is found but doesn't match this user's pubkey,\n   * null if the NIP-05 isn't found on the domain or we're unable to verify (because of network issues, etc.)\n   */\n  async validateNip05(nip05Id) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    const profilePointer = await getNip05For(this.ndk, nip05Id);\n    if (profilePointer === null)\n      return null;\n    return profilePointer.pubkey === this.pubkey;\n  }\n  /**\n   * Zap a user\n   *\n   * @param amount The amount to zap in millisatoshis\n   * @param comment A comment to add to the zap request\n   * @param extraTags Extra tags to add to the zap request\n   * @param signer The signer to use (will default to the NDK instance's signer)\n   */\n  async zap(amount, comment, extraTags, signer) {\n    if (!this.ndk)\n      throw new Error(\"No NDK instance found\");\n    if (!signer) {\n      this.ndk.assertSigner();\n    }\n    const zap = new NDKZap({\n      ndk: this.ndk,\n      zappedUser: this\n    });\n    const relays = Array.from(this.ndk.pool.relays.keys());\n    const paymentRequest = await zap.createZapRequest(\n      amount,\n      comment,\n      extraTags,\n      relays,\n      signer\n    );\n    return paymentRequest;\n  }\n};\n\n// src/events/kinds/lists/index.ts\nvar NDKList = class _NDKList extends NDKEvent {\n  _encryptedTags;\n  /**\n   * Stores the number of bytes the content was before decryption\n   * to expire the cache when the content changes.\n   */\n  encryptedTagsLength;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30001 /* CategorizedBookmarkList */;\n  }\n  /**\n   * Wrap a NDKEvent into a NDKList\n   */\n  static from(ndkEvent) {\n    return new _NDKList(ndkEvent.ndk, ndkEvent.rawEvent());\n  }\n  /**\n   * Returns the title of the list. Falls back on fetching the name tag value.\n   */\n  get title() {\n    const titleTag = this.tagValue(\"title\") || this.tagValue(\"name\");\n    if (this.kind === 3 /* Contacts */ && !titleTag) {\n      return \"Contacts\";\n    } else if (this.kind === 1e4 /* MuteList */ && !titleTag) {\n      return \"Mute\";\n    } else if (this.kind === 10001 /* PinList */ && !titleTag) {\n      return \"Pinned Notes\";\n    } else if (this.kind === 10002 /* RelayList */ && !titleTag) {\n      return \"Relay Metadata\";\n    } else if (this.kind === 10003 /* BookmarkList */ && !titleTag) {\n      return \"Bookmarks\";\n    } else if (this.kind === 10004 /* CommunityList */ && !titleTag) {\n      return \"Communities\";\n    } else if (this.kind === 10005 /* PublicChatList */ && !titleTag) {\n      return \"Public Chats\";\n    } else if (this.kind === 10006 /* BlockRelayList */ && !titleTag) {\n      return \"Blocked Relays\";\n    } else if (this.kind === 10007 /* SearchRelayList */ && !titleTag) {\n      return \"Search Relays\";\n    } else if (this.kind === 10015 /* InterestList */ && !titleTag) {\n      return \"Interests\";\n    } else if (this.kind === 10030 /* EmojiList */ && !titleTag) {\n      return \"Emojis\";\n    } else {\n      return titleTag ?? this.tagValue(\"d\");\n    }\n  }\n  /**\n   * Sets the title of the list.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    this.removeTag(\"name\");\n    if (title) {\n      this.tags.push([\"title\", title]);\n    } else {\n      throw new Error(\"Title cannot be empty\");\n    }\n  }\n  /**\n   * Returns the name of the list.\n   * @deprecated Please use \"title\" instead.\n   */\n  get name() {\n    const nameTag = this.tagValue(\"name\");\n    if (this.kind === 3 /* Contacts */ && !nameTag) {\n      return \"Contacts\";\n    } else if (this.kind === 1e4 /* MuteList */ && !nameTag) {\n      return \"Mute\";\n    } else if (this.kind === 10001 /* PinList */ && !nameTag) {\n      return \"Pinned Notes\";\n    } else if (this.kind === 10002 /* RelayList */ && !nameTag) {\n      return \"Relay Metadata\";\n    } else if (this.kind === 10003 /* BookmarkList */ && !nameTag) {\n      return \"Bookmarks\";\n    } else if (this.kind === 10004 /* CommunityList */ && !nameTag) {\n      return \"Communities\";\n    } else if (this.kind === 10005 /* PublicChatList */ && !nameTag) {\n      return \"Public Chats\";\n    } else if (this.kind === 10006 /* BlockRelayList */ && !nameTag) {\n      return \"Blocked Relays\";\n    } else if (this.kind === 10007 /* SearchRelayList */ && !nameTag) {\n      return \"Search Relays\";\n    } else if (this.kind === 10015 /* InterestList */ && !nameTag) {\n      return \"Interests\";\n    } else if (this.kind === 10030 /* EmojiList */ && !nameTag) {\n      return \"Emojis\";\n    } else {\n      return nameTag ?? this.tagValue(\"d\");\n    }\n  }\n  /**\n   * Sets the name of the list.\n   * @deprecated Please use \"title\" instead. This method will use the `title` tag instead.\n   */\n  set name(name) {\n    this.removeTag(\"name\");\n    if (name) {\n      this.tags.push([\"title\", name]);\n    } else {\n      throw new Error(\"Name cannot be empty\");\n    }\n  }\n  /**\n   * Returns the description of the list.\n   */\n  get description() {\n    return this.tagValue(\"description\");\n  }\n  /**\n   * Sets the description of the list.\n   */\n  set description(name) {\n    if (name) {\n      this.tags.push([\"description\", name]);\n    } else {\n      this.removeTag(\"description\");\n    }\n  }\n  isEncryptedTagsCacheValid() {\n    return !!(this._encryptedTags && this.encryptedTagsLength === this.content.length);\n  }\n  /**\n   * Returns the decrypted content of the list.\n   */\n  async encryptedTags(useCache = true) {\n    if (useCache && this.isEncryptedTagsCacheValid())\n      return this._encryptedTags;\n    if (!this.ndk)\n      throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer)\n      throw new Error(\"NDK signer not set\");\n    const user = await this.ndk.signer.user();\n    try {\n      if (this.content.length > 0) {\n        try {\n          const decryptedContent = await this.ndk.signer.decrypt(user, this.content);\n          const a = JSON.parse(decryptedContent);\n          if (a && a[0]) {\n            this.encryptedTagsLength = this.content.length;\n            return this._encryptedTags = a;\n          }\n          this.encryptedTagsLength = this.content.length;\n          return this._encryptedTags = [];\n        } catch (e) {\n          console.log(`error decrypting ${this.content}`);\n        }\n      }\n    } catch (e) {\n    }\n    return [];\n  }\n  /**\n   * This method can be overriden to validate that a tag is valid for this list.\n   *\n   * (i.e. the NDKPersonList can validate that items are NDKUser instances)\n   */\n  validateTag(tagValue) {\n    return true;\n  }\n  getItems(type) {\n    return this.tags.filter((tag) => tag[0] === type);\n  }\n  /**\n   * Returns the unecrypted items in this list.\n   */\n  get items() {\n    return this.tags.filter((t) => {\n      return ![\n        \"d\",\n        \"L\",\n        \"l\",\n        \"title\",\n        \"name\",\n        \"description\",\n        \"summary\",\n        \"image\",\n        \"thumb\",\n        \"alt\",\n        \"expiration\",\n        \"subject\",\n        \"client\"\n      ].includes(t[0]);\n    });\n  }\n  /**\n   * Adds a new item to the list.\n   * @param relay Relay to add\n   * @param mark Optional mark to add to the item\n   * @param encrypted Whether to encrypt the item\n   * @param position Where to add the item in the list (top or bottom)\n   */\n  async addItem(item, mark = void 0, encrypted = false, position = \"bottom\") {\n    if (!this.ndk)\n      throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer)\n      throw new Error(\"NDK signer not set\");\n    let tags;\n    if (item instanceof NDKEvent) {\n      tags = [item.tagReference(mark)];\n    } else if (item instanceof NDKUser) {\n      tags = item.referenceTags();\n    } else if (item instanceof NDKRelay) {\n      tags = item.referenceTags();\n    } else if (Array.isArray(item)) {\n      tags = [item];\n    } else {\n      throw new Error(\"Invalid object type\");\n    }\n    if (mark)\n      tags[0].push(mark);\n    if (encrypted) {\n      const user = await this.ndk.signer.user();\n      const currentList = await this.encryptedTags();\n      if (position === \"top\")\n        currentList.unshift(...tags);\n      else\n        currentList.push(...tags);\n      this._encryptedTags = currentList;\n      this.encryptedTagsLength = this.content.length;\n      this.content = JSON.stringify(currentList);\n      await this.encrypt(user);\n    } else {\n      if (position === \"top\")\n        this.tags.unshift(...tags);\n      else\n        this.tags.push(...tags);\n    }\n    this.created_at = Math.floor(Date.now() / 1e3);\n    this.emit(\"change\");\n  }\n  /**\n   * Removes an item from the list.\n   *\n   * @param index The index of the item to remove.\n   * @param encrypted Whether to remove from the encrypted list or not.\n   */\n  async removeItem(index, encrypted) {\n    if (!this.ndk)\n      throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer)\n      throw new Error(\"NDK signer not set\");\n    if (encrypted) {\n      const user = await this.ndk.signer.user();\n      const currentList = await this.encryptedTags();\n      currentList.splice(index, 1);\n      this._encryptedTags = currentList;\n      this.encryptedTagsLength = this.content.length;\n      this.content = JSON.stringify(currentList);\n      await this.encrypt(user);\n    } else {\n      this.tags.splice(index, 1);\n    }\n    this.created_at = Math.floor(Date.now() / 1e3);\n    this.emit(\"change\");\n    return this;\n  }\n  /**\n   * Creates a filter that will result in fetching\n   * the items of this list\n   * @example\n   * const list = new NDKList(...);\n   * const filters = list.filterForItems();\n   * const events = await ndk.fetchEvents(filters);\n   */\n  filterForItems() {\n    const ids = /* @__PURE__ */ new Set();\n    const nip33Queries = /* @__PURE__ */ new Map();\n    const filters = [];\n    for (const tag of this.items) {\n      if (tag[0] === \"e\" && tag[1]) {\n        ids.add(tag[1]);\n      } else if (tag[0] === \"a\" && tag[1]) {\n        const [kind, pubkey, dTag] = tag[1].split(\":\");\n        if (!kind || !pubkey)\n          continue;\n        const key = `${kind}:${pubkey}`;\n        const item = nip33Queries.get(key) || [];\n        item.push(dTag || \"\");\n        nip33Queries.set(key, item);\n      }\n    }\n    if (ids.size > 0) {\n      filters.push({ ids: Array.from(ids) });\n    }\n    if (nip33Queries.size > 0) {\n      for (const [key, values] of nip33Queries.entries()) {\n        const [kind, pubkey] = key.split(\":\");\n        filters.push({\n          kinds: [parseInt(kind)],\n          authors: [pubkey],\n          \"#d\": values\n        });\n      }\n    }\n    return filters;\n  }\n};\nvar lists_default = NDKList;\n\n// src/user/pin.ts\nasync function pinEvent(user, event, pinEvent2, publish) {\n  const kind = 10001 /* PinList */;\n  if (!user.ndk)\n    throw new Error(\"No NDK instance found\");\n  user.ndk.assertSigner();\n  if (!pinEvent2) {\n    const events = await user.ndk.fetchEvents(\n      { kinds: [kind], authors: [user.pubkey] },\n      { cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */ }\n    );\n    if (events.size > 0) {\n      pinEvent2 = lists_default.from(Array.from(events)[0]);\n    } else {\n      pinEvent2 = new NDKEvent(user.ndk, {\n        kind\n      });\n    }\n  }\n  pinEvent2.tag(event);\n  if (publish) {\n    await pinEvent2.publish();\n  }\n  return pinEvent2;\n}\n\n// src/events/kinds/article.ts\nvar NDKArticle = class _NDKArticle extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30023 /* Article */;\n  }\n  /**\n   * Creates a NDKArticle from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKArticle from.\n   * @returns NDKArticle\n   */\n  static from(event) {\n    return new _NDKArticle(event.ndk, event.rawEvent());\n  }\n  /**\n   * Getter for the article title.\n   *\n   * @returns {string | undefined} - The article title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the article title.\n   *\n   * @param {string | undefined} title - The title to set for the article.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title)\n      this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the article image.\n   *\n   * @returns {string | undefined} - The article image if available, otherwise undefined.\n   */\n  get image() {\n    return this.tagValue(\"image\");\n  }\n  /**\n   * Setter for the article image.\n   *\n   * @param {string | undefined} image - The image to set for the article.\n   */\n  set image(image) {\n    this.removeTag(\"image\");\n    if (image)\n      this.tags.push([\"image\", image]);\n  }\n  get summary() {\n    return this.tagValue(\"summary\");\n  }\n  set summary(summary) {\n    this.removeTag(\"summary\");\n    if (summary)\n      this.tags.push([\"summary\", summary]);\n  }\n  /**\n   * Getter for the article's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the article was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      let val = parseInt(tag);\n      if (val > 1e12) {\n        val = Math.floor(val / 1e3);\n      }\n      return val;\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the article's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the article's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Generates content tags for the article.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n  /**\n   * Getter for the article's URL.\n   *\n   * @returns {string | undefined} - The article's URL if available, otherwise undefined.\n   */\n  get url() {\n    return this.tagValue(\"url\");\n  }\n  /**\n   * Setter for the article's URL.\n   *\n   * @param {string | undefined} url - The URL to set for the article.\n   */\n  set url(url) {\n    if (url) {\n      this.tags.push([\"url\", url]);\n    } else {\n      this.removeTag(\"url\");\n    }\n  }\n};\n\n// src/events/kinds/classified.ts\nvar NDKClassified = class _NDKClassified extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30402 /* Classified */;\n  }\n  /**\n   * Creates a NDKClassified from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKClassified from.\n   * @returns NDKClassified\n   */\n  static from(event) {\n    return new _NDKClassified(event.ndk, event.rawEvent());\n  }\n  /**\n   * Getter for the classified title.\n   *\n   * @returns {string | undefined} - The classified title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the classified title.\n   *\n   * @param {string | undefined} title - The title to set for the classified.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title)\n      this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the classified summary.\n   *\n   * @returns {string | undefined} - The classified summary if available, otherwise undefined.\n   */\n  get summary() {\n    return this.tagValue(\"summary\");\n  }\n  /**\n   * Setter for the classified summary.\n   *\n   * @param {string | undefined} summary - The summary to set for the classified.\n   */\n  set summary(summary) {\n    this.removeTag(\"summary\");\n    if (summary)\n      this.tags.push([\"summary\", summary]);\n  }\n  /**\n   * Getter for the classified's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the classified was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the classified's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the classified's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Getter for the classified location.\n   *\n   * @returns {string | undefined} - The classified location if available, otherwise undefined.\n   */\n  get location() {\n    return this.tagValue(\"location\");\n  }\n  /**\n   * Setter for the classified location.\n   *\n   * @param {string | undefined} location - The location to set for the classified.\n   */\n  set location(location) {\n    this.removeTag(\"location\");\n    if (location)\n      this.tags.push([\"location\", location]);\n  }\n  /**\n   * Getter for the classified price.\n   *\n   * @returns {NDKClassifiedPriceTag | undefined} - The classified price if available, otherwise undefined.\n   */\n  get price() {\n    const priceTag = this.tags.find((tag) => tag[0] === \"price\");\n    if (priceTag) {\n      return {\n        amount: parseFloat(priceTag[1]),\n        currency: priceTag[2],\n        frequency: priceTag[3]\n      };\n    } else {\n      return void 0;\n    }\n  }\n  /**\n   * Setter for the classified price.\n   *\n   * @param price - The price to set for the classified.\n   */\n  set price(priceTag) {\n    if (typeof priceTag === \"string\") {\n      priceTag = {\n        amount: parseFloat(priceTag)\n      };\n    }\n    if (priceTag?.amount) {\n      const tag = [\"price\", priceTag.amount.toString()];\n      if (priceTag.currency)\n        tag.push(priceTag.currency);\n      if (priceTag.frequency)\n        tag.push(priceTag.frequency);\n      this.tags.push(tag);\n    } else {\n      this.removeTag(\"price\");\n    }\n  }\n  /**\n   * Generates content tags for the classified.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n};\n\n// src/events/kinds/video.ts\nvar NDKVideo = class _NDKVideo extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 34235 /* HorizontalVideo */;\n  }\n  /**\n   * Creates a NDKArticle from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKArticle from.\n   * @returns NDKArticle\n   */\n  static from(event) {\n    return new _NDKVideo(event.ndk, event.rawEvent());\n  }\n  /**\n   * Getter for the article title.\n   *\n   * @returns {string | undefined} - The article title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the article title.\n   *\n   * @param {string | undefined} title - The title to set for the article.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title)\n      this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the article thumbnail.\n   *\n   * @returns {string | undefined} - The article thumbnail if available, otherwise undefined.\n   */\n  get thumbnail() {\n    return this.tagValue(\"thumb\");\n  }\n  /**\n   * Setter for the article thumbnail.\n   *\n   * @param {string | undefined} thumbnail - The thumbnail to set for the article.\n   */\n  set thumbnail(thumbnail) {\n    this.removeTag(\"thumb\");\n    if (thumbnail)\n      this.tags.push([\"thumb\", thumbnail]);\n  }\n  get url() {\n    return this.tagValue(\"url\");\n  }\n  set url(url) {\n    this.removeTag(\"url\");\n    if (url)\n      this.tags.push([\"url\", url]);\n  }\n  /**\n   * Getter for the article's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the article was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the article's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the article's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Generates content tags for the article.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n  get duration() {\n    const tag = this.tagValue(\"duration\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the video's duration\n   *\n   * @param {number | undefined} duration - The duration to set for the video (in seconds)\n   */\n  set duration(dur) {\n    this.removeTag(\"duration\");\n    if (dur !== void 0) {\n      this.tags.push([\"duration\", Math.floor(dur).toString()]);\n    }\n  }\n};\n\n// src/events/kinds/highlight.ts\nimport { nip19 as nip195 } from \"nostr-tools\";\nvar NDKHighlight = class _NDKHighlight extends NDKEvent {\n  _article;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 9802 /* Highlight */;\n  }\n  static from(event) {\n    return new _NDKHighlight(event.ndk, event.rawEvent());\n  }\n  get url() {\n    return this.tagValue(\"r\");\n  }\n  /**\n   * Context tag.\n   */\n  set context(context) {\n    if (context === void 0) {\n      this.tags = this.tags.filter(([tag, value]) => tag !== \"context\");\n    } else {\n      this.tags = this.tags.filter(([tag, value]) => tag !== \"context\");\n      this.tags.push([\"context\", context]);\n    }\n  }\n  get context() {\n    return this.tags.find(([tag, value]) => tag === \"context\")?.[1] ?? void 0;\n  }\n  /**\n   * Will return the article URL or NDKEvent if they have already been\n   * set (it won't attempt to load remote events)\n   */\n  get article() {\n    return this._article;\n  }\n  /**\n   * Article the highlight is coming from.\n   *\n   * @param article Article URL or NDKEvent.\n   */\n  set article(article) {\n    this._article = article;\n    if (typeof article === \"string\") {\n      this.tags.push([\"r\", article]);\n    } else {\n      this.tag(article);\n    }\n  }\n  getArticleTag() {\n    return this.getMatchingTags(\"a\")[0] || this.getMatchingTags(\"e\")[0] || this.getMatchingTags(\"r\")[0];\n  }\n  async getArticle() {\n    if (this._article !== void 0)\n      return this._article;\n    let taggedBech32;\n    const articleTag = this.getArticleTag();\n    if (!articleTag)\n      return void 0;\n    switch (articleTag[0]) {\n      case \"a\":\n        const [kind, pubkey, identifier] = articleTag[1].split(\":\");\n        taggedBech32 = nip195.naddrEncode({ kind: parseInt(kind), pubkey, identifier });\n        break;\n      case \"e\":\n        taggedBech32 = nip195.noteEncode(articleTag[1]);\n        break;\n      case \"r\":\n        this._article = articleTag[1];\n        break;\n    }\n    if (taggedBech32) {\n      let a = await this.ndk?.fetchEvent(taggedBech32);\n      if (a) {\n        if (a.kind === 30023 /* Article */) {\n          a = NDKArticle.from(a);\n        }\n        this._article = a;\n      }\n    }\n    return this._article;\n  }\n};\n\n// src/events/kinds/NDKRelayList.ts\nvar READ_MARKER = \"read\";\nvar WRITE_MARKER = \"write\";\nvar NDKRelayList = class _NDKRelayList extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 10002 /* RelayList */;\n  }\n  static from(ndkEvent) {\n    return new _NDKRelayList(ndkEvent.ndk, ndkEvent.rawEvent());\n  }\n  static async forUser(pubkey, ndk) {\n    const result = await this.forUsers([pubkey], ndk);\n    return result.get(pubkey);\n  }\n  /**\n   * Gathers a set of relay list events for a given set of users.\n   * @returns A map of pubkeys to relay list.\n   */\n  static async forUsers(pubkeys, ndk) {\n    const pool = ndk.outboxPool || ndk.pool;\n    const set = /* @__PURE__ */ new Set();\n    for (const relay of pool.relays.values())\n      set.add(relay);\n    const relayLists = /* @__PURE__ */ new Map();\n    const fromContactList = /* @__PURE__ */ new Map();\n    const relaySet = new NDKRelaySet(set, ndk);\n    if (ndk.cacheAdapter?.locking) {\n      const cachedList = await ndk.fetchEvents(\n        { kinds: [3, 10002], authors: pubkeys },\n        { cacheUsage: \"ONLY_CACHE\" /* ONLY_CACHE */ }\n      );\n      for (const relayList of cachedList) {\n        if (relayList.kind === 10002)\n          relayLists.set(relayList.pubkey, _NDKRelayList.from(relayList));\n      }\n      for (const relayList of cachedList) {\n        if (relayList.kind === 3) {\n          const list = relayListFromKind3(ndk, relayList);\n          if (list)\n            fromContactList.set(relayList.pubkey, list);\n        }\n      }\n      pubkeys = pubkeys.filter(\n        (pubkey) => !relayLists.has(pubkey) && !fromContactList.has(pubkey)\n      );\n    }\n    if (pubkeys.length === 0)\n      return relayLists;\n    await Promise.all([\n      // Fetch all kind 10002 events\n      new Promise(async (resolve) => {\n        const lists = await ndk.fetchEvents(\n          { kinds: [10002], authors: pubkeys },\n          { closeOnEose: true, pool, groupable: false },\n          relaySet\n        );\n        for (const relayList of lists) {\n          relayLists.set(relayList.pubkey, _NDKRelayList.from(relayList));\n        }\n        resolve();\n      }),\n      // Also fetch all kind 3 events\n      new Promise(async (resolve) => {\n        const lists = await ndk.fetchEvents(\n          { kinds: [3], authors: pubkeys },\n          { closeOnEose: true, pool, groupable: false },\n          relaySet\n        );\n        for (const relayList of lists) {\n          const list = relayListFromKind3(ndk, relayList);\n          if (list)\n            fromContactList.set(relayList.pubkey, list);\n        }\n        resolve();\n      })\n    ]);\n    const result = /* @__PURE__ */ new Map();\n    for (const pubkey of pubkeys) {\n      const relayList = relayLists.get(pubkey) ?? fromContactList.get(pubkey);\n      if (relayList)\n        result.set(pubkey, relayList);\n    }\n    return result;\n  }\n  get readRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2] || tag[2] && tag[2] === READ_MARKER).map((tag) => tag[1]);\n  }\n  set readRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay, READ_MARKER]);\n    }\n  }\n  get writeRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2] || tag[2] && tag[2] === WRITE_MARKER).map((tag) => tag[1]);\n  }\n  set writeRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay, WRITE_MARKER]);\n    }\n  }\n  get bothRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2]).map((tag) => tag[1]);\n  }\n  set bothRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay]);\n    }\n  }\n  get relays() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").map((tag) => tag[1]);\n  }\n};\nfunction relayListFromKind3(ndk, contactList) {\n  try {\n    const content = JSON.parse(contactList.content);\n    const relayList = new NDKRelayList(ndk);\n    const readRelays = /* @__PURE__ */ new Set();\n    const writeRelays = /* @__PURE__ */ new Set();\n    for (let [key, config] of Object.entries(content)) {\n      try {\n        key = normalizeRelayUrl(key);\n      } catch {\n        continue;\n      }\n      if (!config) {\n        readRelays.add(key);\n        writeRelays.add(key);\n      } else {\n        const relayConfig = config;\n        if (relayConfig.write)\n          writeRelays.add(key);\n        if (relayConfig.read)\n          readRelays.add(key);\n      }\n    }\n    relayList.readRelayUrls = Array.from(readRelays);\n    relayList.writeRelayUrls = Array.from(writeRelays);\n    return relayList;\n  } catch {\n  }\n  return void 0;\n}\n\n// src/events/kinds/repost.ts\nvar NDKRepost = class _NDKRepost extends NDKEvent {\n  _repostedEvents;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n  }\n  static from(event) {\n    return new _NDKRepost(event.ndk, event.rawEvent());\n  }\n  /**\n   * Returns all reposted events by the current event.\n   *\n   * @param klass Optional class to convert the events to.\n   * @returns\n   */\n  async repostedEvents(klass, opts) {\n    const items = [];\n    if (!this.ndk)\n      throw new Error(\"NDK instance not set\");\n    if (this._repostedEvents !== void 0)\n      return this._repostedEvents;\n    for (const eventId of this.repostedEventIds()) {\n      const filter = filterForId(eventId);\n      const event = await this.ndk.fetchEvent(filter, opts);\n      if (event) {\n        items.push(klass ? klass.from(event) : event);\n      }\n    }\n    return items;\n  }\n  /**\n   * Returns the reposted event IDs.\n   */\n  repostedEventIds() {\n    return this.tags.filter((t) => t[0] === \"e\" || t[0] === \"a\").map((t) => t[1]);\n  }\n};\nfunction filterForId(id) {\n  if (id.match(/:/)) {\n    const [kind, pubkey, identifier] = id.split(\":\");\n    return {\n      kinds: [parseInt(kind)],\n      authors: [pubkey],\n      \"#d\": [identifier]\n    };\n  } else {\n    return { ids: [id] };\n  }\n}\n\n// src/events/kinds/nip89/NDKAppHandler.ts\nvar NDKAppHandlerEvent = class _NDKAppHandlerEvent extends NDKEvent {\n  profile;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 31990 /* AppHandler */;\n  }\n  static from(ndkEvent) {\n    return new _NDKAppHandlerEvent(ndkEvent.ndk, ndkEvent.rawEvent());\n  }\n  /**\n   * Fetches app handler information\n   * If no app information is available on the kind:31990,\n   * we fetch the event's author's profile and return that instead.\n   */\n  async fetchProfile() {\n    if (this.profile === void 0 && this.content.length > 0) {\n      try {\n        const profile = JSON.parse(this.content);\n        if (profile && profile.name) {\n          return profile;\n        } else {\n          this.profile = null;\n        }\n      } catch (e) {\n        this.profile = null;\n      }\n    }\n    return new Promise((resolve, reject) => {\n      const author = this.author;\n      author.fetchProfile().then(() => {\n        resolve(author.profile);\n      }).catch(reject);\n    });\n  }\n};\n\n// src/events/kinds/subscriptions/amount.ts\nvar possibleIntervalFrequencies = [\n  \"daily\",\n  \"weekly\",\n  \"monthly\",\n  \"quarterly\",\n  \"yearly\"\n];\nfunction calculateTermDurationInSeconds(term) {\n  switch (term) {\n    case \"daily\":\n      return 24 * 60 * 60;\n    case \"weekly\":\n      return 7 * 24 * 60 * 60;\n    case \"monthly\":\n      return 30 * 24 * 60 * 60;\n    case \"quarterly\":\n      return 3 * 30 * 24 * 60 * 60;\n    case \"yearly\":\n      return 365 * 24 * 60 * 60;\n  }\n}\nfunction newAmount(amount, currency, term) {\n  return [\"amount\", amount.toString(), currency, term];\n}\nfunction parseTagToSubscriptionAmount(tag) {\n  const amount = parseInt(tag[1]);\n  if (isNaN(amount) || amount === void 0 || amount === null || amount <= 0)\n    return void 0;\n  const currency = tag[2];\n  if (currency === void 0 || currency === \"\")\n    return void 0;\n  const term = tag[3];\n  if (term === void 0)\n    return void 0;\n  if (!possibleIntervalFrequencies.includes(term))\n    return void 0;\n  return {\n    amount,\n    currency,\n    term\n  };\n}\n\n// src/events/kinds/subscriptions/tier.ts\nvar NDKSubscriptionTier = class _NDKSubscriptionTier extends NDKArticle {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 37001 /* SubscriptionTier */;\n  }\n  /**\n   * Creates a new NDKSubscriptionTier from an event\n   * @param event\n   * @returns NDKSubscriptionTier\n   */\n  static from(event) {\n    return new _NDKSubscriptionTier(event.ndk, event.rawEvent());\n  }\n  /**\n   * Returns perks for this tier\n   */\n  get perks() {\n    return this.getMatchingTags(\"perk\").map((tag) => tag[1]).filter((perk) => perk !== void 0);\n  }\n  /**\n   * Adds a perk to this tier\n   */\n  addPerk(perk) {\n    this.tags.push([\"perk\", perk]);\n  }\n  /**\n   * Returns the amount for this tier\n   */\n  get amounts() {\n    return this.getMatchingTags(\"amount\").map((tag) => parseTagToSubscriptionAmount(tag)).filter((a) => a !== void 0);\n  }\n  /**\n   * Adds an amount to this tier\n   * @param amount Amount in the smallest unit of the currency (e.g. cents, msats)\n   * @param currency Currency code. Use msat for millisatoshis\n   * @param term One of daily, weekly, monthly, quarterly, yearly\n   */\n  addAmount(amount, currency, term) {\n    this.tags.push(newAmount(amount, currency, term));\n  }\n  /**\n   * Sets a relay where content related to this tier can be found\n   * @param relayUrl URL of the relay\n   */\n  set relayUrl(relayUrl) {\n    this.tags.push([\"r\", relayUrl]);\n  }\n  /**\n   * Returns the relay URLs for this tier\n   */\n  get relayUrls() {\n    return this.getMatchingTags(\"r\").map((tag) => tag[1]).filter((relay) => relay !== void 0);\n  }\n  /**\n   * Gets the verifier pubkey for this tier. This is the pubkey that will generate\n   * subscription payment receipts\n   */\n  get verifierPubkey() {\n    return this.tagValue(\"p\");\n  }\n  /**\n   * Sets the verifier pubkey for this tier.\n   */\n  set verifierPubkey(pubkey) {\n    this.removeTag(\"p\");\n    if (pubkey)\n      this.tags.push([\"p\", pubkey]);\n  }\n  /**\n   * Checks if this tier is valid\n   */\n  get isValid() {\n    return this.title !== void 0 && // Must have a title\n    this.amounts.length > 0;\n  }\n};\n\n// src/events/kinds/subscriptions/subscription-start.ts\nimport debug3 from \"debug\";\nvar NDKSubscriptionStart = class _NDKSubscriptionStart extends NDKEvent {\n  debug;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 7001 /* Subscribe */;\n    this.debug = ndk?.debug.extend(\"subscription-start\") ?? debug3(\"ndk:subscription-start\");\n  }\n  static from(event) {\n    return new _NDKSubscriptionStart(event.ndk, event.rawEvent());\n  }\n  /**\n   * Recipient of the subscription. I.e. The author of this event subscribes to this user.\n   */\n  get recipient() {\n    const pTag = this.getMatchingTags(\"p\")?.[0];\n    if (!pTag)\n      return void 0;\n    const user = new NDKUser({ pubkey: pTag[1] });\n    return user;\n  }\n  set recipient(user) {\n    this.removeTag(\"p\");\n    if (!user)\n      return;\n    this.tags.push([\"p\", user.pubkey]);\n  }\n  /**\n   * The amount of the subscription.\n   */\n  get amount() {\n    const amountTag = this.getMatchingTags(\"amount\")?.[0];\n    if (!amountTag)\n      return void 0;\n    return parseTagToSubscriptionAmount(amountTag);\n  }\n  set amount(amount) {\n    this.removeTag(\"amount\");\n    if (!amount)\n      return;\n    this.tags.push(newAmount(amount.amount, amount.currency, amount.term));\n  }\n  /**\n   * The event id or NIP-33 tag id of the tier that the user is subscribing to.\n   */\n  get tierId() {\n    const eTag = this.getMatchingTags(\"e\")?.[0];\n    const aTag = this.getMatchingTags(\"a\")?.[0];\n    if (!eTag || !aTag)\n      return void 0;\n    return eTag[1] ?? aTag[1];\n  }\n  set tier(tier) {\n    this.removeTag(\"e\");\n    this.removeTag(\"a\");\n    this.removeTag(\"event\");\n    if (!tier)\n      return;\n    this.tag(tier);\n    this.removeTag(\"p\");\n    this.tags.push([\"p\", tier.pubkey]);\n    this.tags.push([\"event\", JSON.stringify(tier.rawEvent())]);\n  }\n  /**\n   * Fetches the tier that the user is subscribing to.\n   */\n  async fetchTier() {\n    const eventTag = this.tagValue(\"event\");\n    if (eventTag) {\n      try {\n        const parsedEvent = JSON.parse(eventTag);\n        return new NDKSubscriptionTier(this.ndk, parsedEvent);\n      } catch {\n        this.debug(\"Failed to parse event tag\");\n      }\n    }\n    const tierId = this.tierId;\n    if (!tierId)\n      return void 0;\n    const e = await this.ndk?.fetchEvent(tierId);\n    if (!e)\n      return void 0;\n    return NDKSubscriptionTier.from(e);\n  }\n  get isValid() {\n    if (this.getMatchingTags(\"amount\").length !== 1) {\n      this.debug(\"Invalid # of amount tag\");\n      return false;\n    }\n    if (!this.amount) {\n      this.debug(\"Invalid amount tag\");\n      return false;\n    }\n    if (this.getMatchingTags(\"p\").length !== 1) {\n      this.debug(\"Invalid # of p tag\");\n      return false;\n    }\n    if (!this.recipient) {\n      this.debug(\"Invalid p tag\");\n      return false;\n    }\n    return true;\n  }\n};\n\n// src/events/kinds/subscriptions/receipt.ts\nimport debug4 from \"debug\";\nvar NDKSubscriptionReceipt = class _NDKSubscriptionReceipt extends NDKEvent {\n  debug;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 7003 /* SubscriptionReceipt */;\n    this.debug = ndk?.debug.extend(\"subscription-start\") ?? debug4(\"ndk:subscription-start\");\n  }\n  static from(event) {\n    return new _NDKSubscriptionReceipt(event.ndk, event.rawEvent());\n  }\n  /**\n   * This is the person being subscribed to\n   */\n  get recipient() {\n    const pTag = this.getMatchingTags(\"p\")?.[0];\n    if (!pTag)\n      return void 0;\n    const user = new NDKUser({ pubkey: pTag[1] });\n    return user;\n  }\n  set recipient(user) {\n    this.removeTag(\"p\");\n    if (!user)\n      return;\n    this.tags.push([\"p\", user.pubkey]);\n  }\n  /**\n   * This is the person subscribing\n   */\n  get subscriber() {\n    const PTag = this.getMatchingTags(\"P\")?.[0];\n    if (!PTag)\n      return void 0;\n    const user = new NDKUser({ pubkey: PTag[1] });\n    return user;\n  }\n  set subscriber(user) {\n    this.removeTag(\"P\");\n    if (!user)\n      return;\n    this.tags.push([\"P\", user.pubkey]);\n  }\n  set subscriptionStart(event) {\n    this.debug(`before setting subscription start: ${this.rawEvent}`);\n    this.removeTag(\"e\");\n    this.tag(event, \"subscription\", true);\n    this.debug(`after setting subscription start: ${this.rawEvent}`);\n  }\n  get tierName() {\n    const tag = this.getMatchingTags(\"tier\")?.[0];\n    return tag?.[1];\n  }\n  get isValid() {\n    const period = this.validPeriod;\n    if (!period) {\n      return false;\n    }\n    if (period.start > period.end) {\n      return false;\n    }\n    const pTags = this.getMatchingTags(\"p\");\n    const PTags = this.getMatchingTags(\"P\");\n    if (pTags.length !== 1 || PTags.length !== 1) {\n      return false;\n    }\n    return true;\n  }\n  get validPeriod() {\n    const tag = this.getMatchingTags(\"valid\")?.[0];\n    if (!tag)\n      return void 0;\n    try {\n      return {\n        start: new Date(parseInt(tag[1]) * 1e3),\n        end: new Date(parseInt(tag[2]) * 1e3)\n      };\n    } catch {\n      return void 0;\n    }\n  }\n  set validPeriod(period) {\n    this.removeTag(\"valid\");\n    if (!period)\n      return;\n    this.tags.push([\n      \"valid\",\n      Math.floor(period.start.getTime() / 1e3).toString(),\n      Math.floor(period.end.getTime() / 1e3).toString()\n    ]);\n  }\n  get startPeriod() {\n    return this.validPeriod?.start;\n  }\n  get endPeriod() {\n    return this.validPeriod?.end;\n  }\n  /**\n   * Whether the subscription is currently active\n   */\n  isActive(time) {\n    time ??= /* @__PURE__ */ new Date();\n    const period = this.validPeriod;\n    if (!period)\n      return false;\n    if (time < period.start)\n      return false;\n    if (time > period.end)\n      return false;\n    return true;\n  }\n};\n\n// src/events/kinds/dvm/feedback.ts\nvar NDKDvmJobFeedbackStatus = /* @__PURE__ */ ((NDKDvmJobFeedbackStatus3) => {\n  NDKDvmJobFeedbackStatus3[\"Processing\"] = \"processing\";\n  NDKDvmJobFeedbackStatus3[\"Success\"] = \"success\";\n  NDKDvmJobFeedbackStatus3[\"Scheduled\"] = \"scheduled\";\n  NDKDvmJobFeedbackStatus3[\"PayReq\"] = \"payment_required\";\n  return NDKDvmJobFeedbackStatus3;\n})(NDKDvmJobFeedbackStatus || {});\nvar NDKDVMJobFeedback = class _NDKDVMJobFeedback extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind ??= 7e3 /* DVMJobFeedback */;\n  }\n  static async from(event) {\n    const e = new _NDKDVMJobFeedback(event.ndk, event.rawEvent());\n    if (e.encrypted)\n      await e.dvmDecrypt();\n    return e;\n  }\n  get status() {\n    return this.tagValue(\"status\");\n  }\n  set status(status) {\n    this.removeTag(\"status\");\n    if (status !== void 0) {\n      this.tags.push([\"status\", status]);\n    }\n  }\n  get encrypted() {\n    return !!this.getMatchingTags(\"encrypted\")[0];\n  }\n  async dvmDecrypt() {\n    await this.decrypt();\n    const decryptedContent = JSON.parse(this.content);\n    this.tags.push(...decryptedContent);\n  }\n};\n\n// src/events/kinds/dvm/request.ts\nvar NDKDVMRequest = class _NDKDVMRequest extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n  }\n  static from(event) {\n    return new _NDKDVMRequest(event.ndk, event.rawEvent());\n  }\n  set bid(msatAmount) {\n    if (msatAmount === void 0) {\n      this.removeTag(\"bid\");\n    } else {\n      this.tags.push([\"bid\", msatAmount.toString()]);\n    }\n  }\n  get bid() {\n    const v = this.tagValue(\"bid\");\n    if (v === void 0)\n      return void 0;\n    return parseInt(v);\n  }\n  /**\n   * Adds a new input to the job\n   * @param args The arguments to the input\n   */\n  addInput(...args) {\n    this.tags.push([\"i\", ...args]);\n  }\n  /**\n   * Adds a new parameter to the job\n   */\n  addParam(...args) {\n    this.tags.push([\"param\", ...args]);\n  }\n  set output(output) {\n    if (output === void 0) {\n      this.removeTag(\"output\");\n    } else {\n      if (typeof output === \"string\")\n        output = [output];\n      this.tags.push([\"output\", ...output]);\n    }\n  }\n  get output() {\n    const outputTag = this.getMatchingTags(\"output\")[0];\n    return outputTag ? outputTag.slice(1) : void 0;\n  }\n  get params() {\n    const paramTags = this.getMatchingTags(\"param\");\n    return paramTags.map((t) => t.slice(1));\n  }\n  getParam(name) {\n    const paramTag = this.getMatchingTags(\"param\").find((t) => t[1] === name);\n    return paramTag ? paramTag[2] : void 0;\n  }\n  createFeedback(status) {\n    const feedback = new NDKDVMJobFeedback(this.ndk);\n    feedback.tag(this, \"job\");\n    feedback.status = status;\n    return feedback;\n  }\n  /**\n   * Enables job encryption for this event\n   * @param dvm DVM that will receive the event\n   * @param signer Signer to use for encryption\n   */\n  async encryption(dvm, signer) {\n    const dvmTags = [\"i\", \"param\", \"output\", \"relays\", \"bid\"];\n    const tags = this.tags.filter((t) => dvmTags.includes(t[0]));\n    this.tags = this.tags.filter((t) => !dvmTags.includes(t[0]));\n    this.content = JSON.stringify(tags);\n    this.tag(dvm);\n    this.tags.push([\"encrypted\"]);\n    await this.encrypt(dvm, signer);\n  }\n  /**\n   * Sets the DVM that will receive the event\n   */\n  set dvm(dvm) {\n    this.removeTag(\"p\");\n    if (dvm)\n      this.tag(dvm);\n  }\n};\n\n// src/events/kinds/dvm/NDKTranscriptionDVM.ts\nvar NDKTranscriptionDVM = class _NDKTranscriptionDVM extends NDKDVMRequest {\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind = 5e3 /* DVMReqTextExtraction */;\n  }\n  static from(event) {\n    return new _NDKTranscriptionDVM(event.ndk, event.rawEvent());\n  }\n  /**\n   * Returns the original source of the transcription\n   */\n  get url() {\n    const inputTags = this.getMatchingTags(\"i\");\n    if (inputTags.length !== 1) {\n      return void 0;\n    }\n    return inputTags[0][1];\n  }\n  /**\n   * Getter for the title tag\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the title tag\n   */\n  set title(value) {\n    this.removeTag(\"title\");\n    if (value) {\n      this.tags.push([\"title\", value]);\n    }\n  }\n  /**\n   * Getter for the image tag\n   */\n  get image() {\n    return this.tagValue(\"image\");\n  }\n  /**\n   * Setter for the image tag\n   */\n  set image(value) {\n    this.removeTag(\"image\");\n    if (value) {\n      this.tags.push([\"image\", value]);\n    }\n  }\n};\n\n// src/events/kinds/dvm/result.ts\nvar NDKDVMJobResult = class _NDKDVMJobResult extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n  }\n  static from(event) {\n    return new _NDKDVMJobResult(event.ndk, event.rawEvent());\n  }\n  setAmount(msat, invoice) {\n    this.removeTag(\"amount\");\n    const tag = [\"amount\", msat.toString()];\n    if (invoice)\n      tag.push(invoice);\n    this.tags.push(tag);\n  }\n  set result(result) {\n    if (result === void 0) {\n      this.content = \"\";\n    } else {\n      this.content = result;\n    }\n  }\n  get result() {\n    if (this.content === \"\") {\n      return void 0;\n    }\n    return this.content;\n  }\n  set status(status) {\n    this.removeTag(\"status\");\n    if (status !== void 0) {\n      this.tags.push([\"status\", status]);\n    }\n  }\n  get status() {\n    return this.tagValue(\"status\");\n  }\n  get jobRequestId() {\n    for (const eTag of this.getMatchingTags(\"e\")) {\n      if (eTag[2] === \"job\")\n        return eTag[1];\n    }\n    if (this.jobRequest)\n      return this.jobRequest.id;\n    return this.tagValue(\"e\");\n  }\n  set jobRequest(event) {\n    this.removeTag(\"request\");\n    if (event) {\n      this.kind = event.kind + 1e3;\n      this.tags.push([\"request\", JSON.stringify(event.rawEvent())]);\n      this.tag(event);\n    }\n  }\n  get jobRequest() {\n    const tag = this.tagValue(\"request\");\n    if (tag === void 0) {\n      return void 0;\n    }\n    return new NDKEvent(this.ndk, JSON.parse(tag));\n  }\n};\n\n// src/nwc/index.ts\nimport { EventEmitter as EventEmitter6 } from \"tseep\";\n\n// src/nwc/pay_invoice.ts\nasync function payInvoice(invoice) {\n  const ret = await this.sendReq(\"pay_invoice\", { invoice });\n  return ret;\n}\n\n// src/signers/private-key/index.ts\nimport { generatePrivateKey, getPublicKey, getSignature, nip04 } from \"nostr-tools\";\nvar NDKPrivateKeySigner = class _NDKPrivateKeySigner {\n  _user;\n  privateKey;\n  constructor(privateKey) {\n    if (privateKey) {\n      this.privateKey = privateKey;\n      this._user = new NDKUser({\n        pubkey: getPublicKey(this.privateKey)\n      });\n    }\n  }\n  static generate() {\n    const privateKey = generatePrivateKey();\n    return new _NDKPrivateKeySigner(privateKey);\n  }\n  async blockUntilReady() {\n    if (!this._user) {\n      throw new Error(\"NDKUser not initialized\");\n    }\n    return this._user;\n  }\n  async user() {\n    await this.blockUntilReady();\n    return this._user;\n  }\n  async sign(event) {\n    if (!this.privateKey) {\n      throw Error(\"Attempted to sign without a private key\");\n    }\n    return getSignature(event, this.privateKey);\n  }\n  async encrypt(recipient, value) {\n    if (!this.privateKey) {\n      throw Error(\"Attempted to encrypt without a private key\");\n    }\n    const recipientHexPubKey = recipient.pubkey;\n    return await nip04.encrypt(this.privateKey, recipientHexPubKey, value);\n  }\n  async decrypt(sender, value) {\n    if (!this.privateKey) {\n      throw Error(\"Attempted to decrypt without a private key\");\n    }\n    const senderHexPubKey = sender.pubkey;\n    return await nip04.decrypt(this.privateKey, senderHexPubKey, value);\n  }\n};\n\n// src/nwc/req.ts\nasync function sendReq(method, params) {\n  const event = new NDKEvent(this.ndk, {\n    kind: 23194 /* NostrWalletConnectReq */,\n    tags: [[\"p\", this.walletService.pubkey]],\n    content: JSON.stringify({ method, params })\n  });\n  this.debug(\"Sending request\", event.content);\n  await event.encrypt(this.walletService, this.signer);\n  await event.sign(this.signer);\n  this.debug(\"Request encrypted and signed\");\n  return new Promise(async (resolve, reject) => {\n    try {\n      const eTag = event.tagId();\n      if (!eTag)\n        throw new Error(\"Failed to get e-tag\");\n      const processEvent = (payload) => {\n        this.off(eTag, processEvent);\n        this.off(\"event\", processEvent);\n        this.debug(\"Received response\", payload);\n        try {\n          const content = JSON.parse(payload);\n          if (content.error)\n            reject(content);\n          resolve(content);\n        } catch (e) {\n          this.debug(\"Failed to parse response\", e);\n          reject({\n            result_type: \"error\",\n            error: {\n              code: \"failed_to_parse_response\",\n              message: e.message\n            }\n          });\n        }\n      };\n      const sub = this.ndk.subscribe(\n        {\n          kinds: [23195 /* NostrWalletConnectRes */],\n          \"#e\": [eTag],\n          limit: 1\n        },\n        { groupable: false, subId: `nwc-${method}` },\n        this.relaySet\n      );\n      sub.on(\"event\", async (event2) => {\n        await event2.decrypt(event2.author, this.signer);\n        processEvent(event2.content);\n        sub.stop();\n      });\n      this.once(eTag, processEvent);\n      this.once(\"event\", processEvent);\n      this.debug(\"Sending request to relay\", event.rawEvent());\n      await event.publish(this.relaySet);\n    } catch (e) {\n      this.debug(\"Failed to send request\", e, e.relayErrors);\n      reject({\n        result_type: \"error\",\n        error: {\n          code: \"failed_to_send_request\",\n          message: e.message\n        }\n      });\n    }\n  });\n}\n\n// src/nwc/get_balance.ts\nasync function getBalance() {\n  const ret = await this.sendReq(\"get_balance\", {});\n  return ret;\n}\n\n// src/nwc/get_info.ts\nasync function getInfo() {\n  const ret = await this.sendReq(\"get_info\", {});\n  return ret;\n}\n\n// src/nwc/index.ts\nvar NDKNwc = class _NDKNwc extends EventEmitter6 {\n  ndk;\n  debug;\n  /**\n   * The Wallet Service's public key\n   */\n  walletService;\n  relaySet;\n  signer;\n  active = false;\n  /**\n   *\n   * @param opts: NostrWalletConnectOptions\n   * @returns NDKNwc\n   */\n  constructor({\n    ndk,\n    pubkey,\n    relayUrls,\n    secret\n  }) {\n    super();\n    this.ndk = ndk;\n    this.walletService = ndk.getUser({ pubkey });\n    this.relaySet = new NDKRelaySet(\n      new Set(relayUrls.map((url) => ndk.pool.getRelay(url))),\n      ndk\n    );\n    this.signer = new NDKPrivateKeySigner(secret);\n    this.debug = ndk.debug.extend(\"nwc\");\n    this.debug(`Starting with wallet service ${this.walletService.npub}`);\n  }\n  static async fromURI(ndk, uri) {\n    const u = new URL(uri);\n    if (u.protocol !== \"nostr+walletconnect:\") {\n      throw new Error(\"Invalid protocol\");\n    }\n    const nwc = new _NDKNwc({\n      ndk,\n      pubkey: u.host ?? u.pathname,\n      relayUrls: u.searchParams.getAll(\"relay\") ?? [\"\"],\n      secret: u.searchParams.get(\"secret\") ?? \"\"\n    });\n    return nwc;\n  }\n  /**\n   * Blocks until we're subscribed to talk to the wallet service\n   * @param msTimeout Timeout in ms to wait for the subscription to be ready\n   * @returns\n   */\n  async blockUntilReady(msTimeout) {\n    const signerUser = await this.signer.user();\n    const timeout = new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"Timeout\"));\n      }, msTimeout);\n    });\n    const subPromise = new Promise((resolve) => {\n      const sub = this.ndk.subscribe(\n        {\n          kinds: [23195 /* NostrWalletConnectRes */],\n          \"#p\": [signerUser.pubkey],\n          limit: 1\n        },\n        { groupable: false, subId: \"nwc\" },\n        this.relaySet\n      );\n      sub.on(\"event\", async (event) => {\n        this.debug(\"received response\", event.rawEvent());\n        const eTag = event.tagValue(\"e\");\n        if (!eTag) {\n          this.debug(\"Received an event without an e-tag\");\n          return;\n        }\n        this.debug(\"received an event\", eTag);\n        try {\n          await event.decrypt(event.author, this.signer);\n          this.emit(eTag, event.content);\n        } catch (e) {\n          this.debug(\"Failed to decrypt event\", e);\n          return;\n        }\n      });\n      sub.on(\"eose\", () => {\n        this.debug(\"Subscription ready\");\n        this.active = true;\n        resolve();\n      });\n      sub.on(\"close\", () => {\n        this.debug(\"Subscription closed\");\n        this.active = false;\n      });\n    });\n    const promises = [subPromise];\n    if (msTimeout)\n      promises.push(timeout);\n    return await Promise.race(promises);\n  }\n  async sendReq(method, params) {\n    return await sendReq.call(this, method, params);\n  }\n  async payInvoice(invoice) {\n    return await payInvoice.call(this, invoice);\n  }\n  async getInfo() {\n    return await getInfo.call(this);\n  }\n  getBalance = getBalance.bind(this);\n};\n\n// src/events/kinds/simple-group/index.ts\nvar NDKSimpleGroup = class _NDKSimpleGroup {\n  ndk;\n  groupId;\n  relaySet;\n  constructor(ndk, groupId, relaySet) {\n    this.ndk = ndk;\n    this.groupId = groupId;\n    this.relaySet = relaySet;\n  }\n  /**\n   * Adds a user to the group using a kind:9000 event\n   * @param user user to add\n   * @param opts options\n   */\n  async addUser(user) {\n    const addUserEvent = _NDKSimpleGroup.generateAddUserEvent(user.pubkey, this.groupId);\n    addUserEvent.ndk = this.ndk;\n    const relays = await addUserEvent.publish(this.relaySet);\n    return addUserEvent;\n  }\n  async getMemberListEvent() {\n    const memberList = await this.ndk.fetchEvent(\n      {\n        kinds: [39002 /* GroupMembers */],\n        \"#d\": [this.groupId]\n      },\n      void 0,\n      this.relaySet\n    );\n    return memberList;\n  }\n  /**\n   * Gets a list of users that belong to this group\n   */\n  async getMembers() {\n    const members = [];\n    const memberPubkeys = /* @__PURE__ */ new Set();\n    const memberListEvent = await this.getMemberListEvent();\n    if (!memberListEvent)\n      return [];\n    for (const pTag of memberListEvent.getMatchingTags(\"p\")) {\n      const pubkey = pTag[1];\n      if (memberPubkeys.has(pubkey))\n        continue;\n      memberPubkeys.add(pubkey);\n      try {\n        members.push(this.ndk.getUser({ pubkey }));\n      } catch {\n      }\n    }\n    return members;\n  }\n  /**\n   * Generates an event that lists the members of a group.\n   * @param groupId\n   * @returns\n   */\n  static generateUserListEvent(groupId) {\n    const event = new NDKEvent(void 0, {\n      kind: 39002 /* GroupMembers */,\n      tags: [\n        [\"h\", groupId],\n        [\"alt\", \"Group Member List\"]\n      ]\n    });\n    return event;\n  }\n  /**\n   * Generates an event that adds a user to a group.\n   * @param userPubkey pubkey of the user to add\n   * @param groupId group to add the user to\n   * @returns\n   */\n  static generateAddUserEvent(userPubkey, groupId) {\n    const event = new NDKEvent(void 0, {\n      kind: 9e3 /* GroupAdminAddUser */,\n      tags: [[\"h\", groupId]]\n    });\n    event.tags.push([\"p\", userPubkey]);\n    return event;\n  }\n};\n\n// src/relay/auth-policies.ts\nimport createDebug2 from \"debug\";\nfunction disconnect(pool, debug7) {\n  debug7 ??= createDebug2(\"ndk:relay:auth-policies:disconnect\");\n  return async (relay) => {\n    debug7(`Relay ${relay.url} requested authentication, disconnecting`);\n    pool.removeRelay(relay.url);\n  };\n}\nasync function signAndAuth(event, relay, signer, debug7, resolve, reject) {\n  try {\n    await event.sign(signer);\n    await relay.auth(event);\n    resolve(event);\n  } catch (e) {\n    debug7(`Failed to publish auth event to relay ${relay.url}`, e);\n    reject(event);\n  }\n}\nfunction signIn({ ndk, signer, debug: debug7 } = {}) {\n  debug7 ??= createDebug2(\"ndk:auth-policies:signIn\");\n  return async (relay, challenge) => {\n    debug7(`Relay ${relay.url} requested authentication, signing in`);\n    const event = new NDKEvent(ndk);\n    event.kind = 22242 /* ClientAuth */;\n    event.tags = [\n      [\"relay\", relay.url],\n      [\"challenge\", challenge]\n    ];\n    signer ??= ndk?.signer;\n    return new Promise(async (resolve, reject) => {\n      if (signer) {\n        await signAndAuth(event, relay, signer, debug7, resolve, reject);\n      } else {\n        ndk?.once(\"signer:ready\", async (signer2) => {\n          await signAndAuth(event, relay, signer2, debug7, resolve, reject);\n        });\n      }\n    });\n  };\n}\nvar NDKRelayAuthPolicies = {\n  disconnect,\n  signIn\n};\n\n// src/signers/nip07/index.ts\nimport debug5 from \"debug\";\nvar NDKNip07Signer = class {\n  _userPromise;\n  nip04Queue = [];\n  nip04Processing = false;\n  debug;\n  waitTimeout;\n  /**\n   * @param waitTimeout - The timeout in milliseconds to wait for the NIP-07 to become available\n   */\n  constructor(waitTimeout = 1e3) {\n    this.debug = debug5(\"ndk:nip07\");\n    this.waitTimeout = waitTimeout;\n  }\n  async blockUntilReady() {\n    await this.waitForExtension();\n    const pubkey = await window.nostr.getPublicKey();\n    if (!pubkey) {\n      throw new Error(\"User rejected access\");\n    }\n    return new NDKUser({ pubkey });\n  }\n  /**\n   * Getter for the user property.\n   * @returns The NDKUser instance.\n   */\n  async user() {\n    if (!this._userPromise) {\n      this._userPromise = this.blockUntilReady();\n    }\n    return this._userPromise;\n  }\n  /**\n   * Signs the given Nostr event.\n   * @param event - The Nostr event to be signed.\n   * @returns The signature of the signed event.\n   * @throws Error if the NIP-07 is not available on the window object.\n   */\n  async sign(event) {\n    await this.waitForExtension();\n    const signedEvent = await window.nostr.signEvent(event);\n    return signedEvent.sig;\n  }\n  async relays() {\n    await this.waitForExtension();\n    const relays = await window.nostr.getRelays?.() || {};\n    const activeRelays = [];\n    for (const url of Object.keys(relays)) {\n      if (relays[url].read && relays[url].write) {\n        activeRelays.push(url);\n      }\n    }\n    return activeRelays.map((url) => new NDKRelay(url));\n  }\n  async encrypt(recipient, value) {\n    await this.waitForExtension();\n    const recipientHexPubKey = recipient.pubkey;\n    return this.queueNip04(\"encrypt\", recipientHexPubKey, value);\n  }\n  async decrypt(sender, value) {\n    await this.waitForExtension();\n    const senderHexPubKey = sender.pubkey;\n    return this.queueNip04(\"decrypt\", senderHexPubKey, value);\n  }\n  async queueNip04(type, counterpartyHexpubkey, value) {\n    return new Promise((resolve, reject) => {\n      this.nip04Queue.push({\n        type,\n        counterpartyHexpubkey,\n        value,\n        resolve,\n        reject\n      });\n      if (!this.nip04Processing) {\n        this.processNip04Queue();\n      }\n    });\n  }\n  async processNip04Queue(item, retries = 0) {\n    if (!item && this.nip04Queue.length === 0) {\n      this.nip04Processing = false;\n      return;\n    }\n    this.nip04Processing = true;\n    const { type, counterpartyHexpubkey, value, resolve, reject } = item || this.nip04Queue.shift();\n    this.debug(\"Processing encryption queue item\", {\n      type,\n      counterpartyHexpubkey,\n      value\n    });\n    try {\n      let result;\n      if (type === \"encrypt\") {\n        result = await window.nostr.nip04.encrypt(counterpartyHexpubkey, value);\n      } else {\n        result = await window.nostr.nip04.decrypt(counterpartyHexpubkey, value);\n      }\n      resolve(result);\n    } catch (error) {\n      if (error.message && error.message.includes(\"call already executing\")) {\n        if (retries < 5) {\n          this.debug(\"Retrying encryption queue item\", {\n            type,\n            counterpartyHexpubkey,\n            value,\n            retries\n          });\n          setTimeout(() => {\n            this.processNip04Queue(item, retries + 1);\n          }, 50 * retries);\n          return;\n        }\n      }\n      reject(error);\n    }\n    this.processNip04Queue();\n  }\n  waitForExtension() {\n    return new Promise((resolve, reject) => {\n      if (window.nostr) {\n        resolve();\n        return;\n      }\n      let timerId;\n      const intervalId = setInterval(() => {\n        if (window.nostr) {\n          clearTimeout(timerId);\n          clearInterval(intervalId);\n          resolve();\n        }\n      }, 100);\n      timerId = setTimeout(() => {\n        clearInterval(intervalId);\n        reject(new Error(\"NIP-07 extension not available\"));\n      }, this.waitTimeout);\n    });\n  }\n};\n\n// src/signers/nip46/rpc.ts\nimport { EventEmitter as EventEmitter7 } from \"tseep\";\nvar NDKNostrRpc = class extends EventEmitter7 {\n  ndk;\n  signer;\n  relaySet;\n  debug;\n  constructor(ndk, signer, debug7, relayUrls) {\n    super();\n    this.ndk = ndk;\n    this.signer = signer;\n    this.relaySet = relayUrls ? NDKRelaySet.fromRelayUrls(relayUrls, ndk) : void 0;\n    this.debug = debug7.extend(\"rpc\");\n  }\n  /**\n   * Subscribe to a filter. This function will resolve once the subscription is ready.\n   */\n  subscribe(filter) {\n    const sub = this.ndk.subscribe(\n      filter,\n      {\n        closeOnEose: false,\n        groupable: false,\n        cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */\n      },\n      this.relaySet\n    );\n    sub.on(\"event\", async (event) => {\n      try {\n        const parsedEvent = await this.parseEvent(event);\n        if (parsedEvent.method) {\n          this.emit(\"request\", parsedEvent);\n        } else {\n          this.emit(`response-${parsedEvent.id}`, parsedEvent);\n        }\n      } catch (e) {\n        this.debug(\"error parsing event\", e, event.rawEvent());\n      }\n    });\n    return new Promise((resolve) => {\n      sub.on(\"eose\", () => resolve(sub));\n    });\n  }\n  async parseEvent(event) {\n    const remoteUser = this.ndk.getUser({ pubkey: event.pubkey });\n    remoteUser.ndk = this.ndk;\n    const decryptedContent = await this.signer.decrypt(remoteUser, event.content);\n    const parsedContent = JSON.parse(decryptedContent);\n    const { id, method, params, result, error } = parsedContent;\n    if (method) {\n      return { id, pubkey: event.pubkey, method, params, event };\n    } else {\n      return { id, result, error, event };\n    }\n  }\n  async sendResponse(id, remotePubkey, result, kind = 24133 /* NostrConnect */, error) {\n    const res = { id, result };\n    if (error) {\n      res.error = error;\n    }\n    const localUser = await this.signer.user();\n    const remoteUser = this.ndk.getUser({ pubkey: remotePubkey });\n    const event = new NDKEvent(this.ndk, {\n      kind,\n      content: JSON.stringify(res),\n      tags: [[\"p\", remotePubkey]],\n      pubkey: localUser.pubkey\n    });\n    event.content = await this.signer.encrypt(remoteUser, event.content);\n    await event.sign(this.signer);\n    await event.publish(this.relaySet);\n  }\n  /**\n   * Sends a request.\n   * @param remotePubkey\n   * @param method\n   * @param params\n   * @param kind\n   * @param id\n   */\n  async sendRequest(remotePubkey, method, params = [], kind = 24133, cb) {\n    const id = Math.random().toString(36).substring(7);\n    const localUser = await this.signer.user();\n    const remoteUser = this.ndk.getUser({ pubkey: remotePubkey });\n    const request = { id, method, params };\n    const promise = new Promise(() => {\n      const responseHandler = (response) => {\n        if (response.result === \"auth_url\") {\n          this.once(`response-${id}`, responseHandler);\n          this.emit(\"authUrl\", response.error);\n        } else if (cb) {\n          cb(response);\n        }\n      };\n      this.once(`response-${id}`, responseHandler);\n    });\n    const event = new NDKEvent(this.ndk, {\n      kind,\n      content: JSON.stringify(request),\n      tags: [[\"p\", remotePubkey]],\n      pubkey: localUser.pubkey\n    });\n    event.content = await this.signer.encrypt(remoteUser, event.content);\n    await event.sign(this.signer);\n    await event.publish(this.relaySet);\n    return promise;\n  }\n};\n\n// src/signers/nip46/backend/ping.ts\nvar PingEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const debug7 = backend.debug.extend(\"ping\");\n    debug7(`ping request from ${remotePubkey}`);\n    if (await backend.pubkeyAllowed({ id, pubkey: remotePubkey, method: \"ping\" })) {\n      debug7(`connection request from ${remotePubkey} allowed`);\n      return \"pong\";\n    } else {\n      debug7(`connection request from ${remotePubkey} rejected`);\n    }\n    return void 0;\n  }\n};\n\n// src/signers/nip46/backend/connect.ts\nvar ConnectEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [_, token] = params;\n    const debug7 = backend.debug.extend(\"connect\");\n    debug7(`connection request from ${remotePubkey}`);\n    if (token && backend.applyToken) {\n      debug7(`applying token`);\n      await backend.applyToken(remotePubkey, token);\n    }\n    if (await backend.pubkeyAllowed({\n      id,\n      pubkey: remotePubkey,\n      method: \"connect\",\n      params: token\n    })) {\n      debug7(`connection request from ${remotePubkey} allowed`);\n      return \"ack\";\n    } else {\n      debug7(`connection request from ${remotePubkey} rejected`);\n    }\n    return void 0;\n  }\n};\n\n// src/signers/nip46/backend/get-public-key.ts\nvar GetPublicKeyHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    return backend.localUser?.pubkey;\n  }\n};\n\n// src/signers/nip46/backend/nip04-decrypt.ts\nvar Nip04DecryptHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [senderPubkey, payload] = params;\n    const senderUser = new NDKUser({ pubkey: senderPubkey });\n    const decryptedPayload = await decrypt2(backend, id, remotePubkey, senderUser, payload);\n    return decryptedPayload;\n  }\n};\nasync function decrypt2(backend, id, remotePubkey, senderUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"decrypt\",\n    params: payload\n  })) {\n    backend.debug(`decrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.decrypt(senderUser, payload);\n}\n\n// src/signers/nip46/backend/nip04-encrypt.ts\nvar Nip04EncryptHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [recipientPubkey, payload] = params;\n    const recipientUser = new NDKUser({ pubkey: recipientPubkey });\n    const encryptedPayload = await encrypt2(backend, id, remotePubkey, recipientUser, payload);\n    return encryptedPayload;\n  }\n};\nasync function encrypt2(backend, id, remotePubkey, recipientUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"encrypt\",\n    params: payload\n  })) {\n    backend.debug(`encrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.encrypt(recipientUser, payload);\n}\n\n// src/signers/nip46/backend/sign-event.ts\nvar SignEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const event = await signEvent(backend, id, remotePubkey, params);\n    if (!event)\n      return void 0;\n    return JSON.stringify(await event.toNostrEvent());\n  }\n};\nasync function signEvent(backend, id, remotePubkey, params) {\n  const [eventString] = params;\n  backend.debug(`sign event request from ${remotePubkey}`);\n  const event = new NDKEvent(backend.ndk, JSON.parse(eventString));\n  backend.debug(\"event to sign\", event.rawEvent());\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"sign_event\",\n    params: event\n  })) {\n    backend.debug(`sign event request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  backend.debug(`sign event request from ${remotePubkey} allowed`);\n  await event.sign(backend.signer);\n  return event;\n}\n\n// src/signers/nip46/backend/index.ts\nvar NDKNip46Backend = class {\n  ndk;\n  signer;\n  localUser;\n  debug;\n  rpc;\n  permitCallback;\n  relayUrls;\n  /**\n   * @param ndk The NDK instance to use\n   * @param privateKeyOrSigner The private key or signer of the npub that wants to be published as\n   * @param permitCallback Callback executed when permission is requested\n   */\n  constructor(ndk, privateKeyOrSigner, permitCallback, relayUrls) {\n    this.ndk = ndk;\n    this.signer = typeof privateKeyOrSigner === \"string\" ? new NDKPrivateKeySigner(privateKeyOrSigner) : privateKeyOrSigner;\n    this.debug = ndk.debug.extend(\"nip46:backend\");\n    this.relayUrls = relayUrls ?? Array.from(ndk.pool.relays.keys());\n    this.rpc = new NDKNostrRpc(ndk, this.signer, this.debug, this.relayUrls);\n    this.permitCallback = permitCallback;\n  }\n  /**\n   * This method starts the backend, which will start listening for incoming\n   * requests.\n   */\n  async start() {\n    this.localUser = await this.signer.user();\n    const sub = this.ndk.subscribe(\n      {\n        kinds: [24133],\n        \"#p\": [this.localUser.pubkey]\n      },\n      { closeOnEose: false }\n    );\n    sub.on(\"event\", (e) => this.handleIncomingEvent(e));\n  }\n  handlers = {\n    connect: new ConnectEventHandlingStrategy(),\n    sign_event: new SignEventHandlingStrategy(),\n    nip04_encrypt: new Nip04EncryptHandlingStrategy(),\n    nip04_decrypt: new Nip04DecryptHandlingStrategy(),\n    get_public_key: new GetPublicKeyHandlingStrategy(),\n    ping: new PingEventHandlingStrategy()\n  };\n  /**\n   * Enables the user to set a custom strategy for handling incoming events.\n   * @param method - The method to set the strategy for\n   * @param strategy - The strategy to set\n   */\n  setStrategy(method, strategy) {\n    this.handlers[method] = strategy;\n  }\n  /**\n   * Overload this method to apply tokens, which can\n   * wrap permission sets to be applied to a pubkey.\n   * @param pubkey public key to apply token to\n   * @param token token to apply\n   */\n  async applyToken(pubkey, token) {\n    throw new Error(\"connection token not supported\");\n  }\n  async handleIncomingEvent(event) {\n    const { id, method, params } = await this.rpc.parseEvent(event);\n    const remotePubkey = event.pubkey;\n    let response;\n    this.debug(\"incoming event\", { id, method, params });\n    if (!event.verifySignature(false)) {\n      this.debug(\"invalid signature\", event.rawEvent());\n      return;\n    }\n    const strategy = this.handlers[method];\n    if (strategy) {\n      try {\n        response = await strategy.handle(this, id, remotePubkey, params);\n      } catch (e) {\n        this.debug(\"error handling event\", e, { id, method, params });\n        this.rpc.sendResponse(id, remotePubkey, \"error\", void 0, e.message);\n      }\n    } else {\n      this.debug(\"unsupported method\", { method, params });\n    }\n    if (response) {\n      this.debug(`sending response to ${remotePubkey}`, response);\n      this.rpc.sendResponse(id, remotePubkey, response);\n    } else {\n      this.rpc.sendResponse(id, remotePubkey, \"error\", void 0, \"Not authorized\");\n    }\n  }\n  /**\n   * This method should be overriden by the user to allow or reject incoming\n   * connections.\n   */\n  async pubkeyAllowed(params) {\n    return this.permitCallback(params);\n  }\n};\n\n// src/signers/nip46/index.ts\nimport { EventEmitter as EventEmitter8 } from \"tseep\";\nvar NDKNip46Signer = class extends EventEmitter8 {\n  ndk;\n  remoteUser;\n  remotePubkey;\n  token;\n  localSigner;\n  nip05;\n  rpc;\n  debug;\n  relayUrls;\n  subscription;\n  /**\n   * @param ndk - The NDK instance to use\n   * @param tokenOrRemoteUser - The public key, or a connection token, of the npub that wants to be published as\n   * @param localSigner - The signer that will be used to request events to be signed\n   */\n  constructor(ndk, tokenOrRemoteUser, localSigner) {\n    super();\n    let remotePubkey;\n    let token;\n    if (tokenOrRemoteUser.includes(\"#\")) {\n      const parts = tokenOrRemoteUser.split(\"#\");\n      if (parts[0].startsWith(\"npub\")) {\n        remotePubkey = new NDKUser({ npub: parts[0] }).pubkey;\n      } else {\n        remotePubkey = parts[0];\n      }\n      token = parts[1];\n    } else if (tokenOrRemoteUser.startsWith(\"npub\")) {\n      remotePubkey = new NDKUser({\n        npub: tokenOrRemoteUser\n      }).pubkey;\n    } else if (tokenOrRemoteUser.match(/\\./)) {\n      this.nip05 = tokenOrRemoteUser;\n    } else {\n      remotePubkey = tokenOrRemoteUser;\n    }\n    this.ndk = ndk;\n    if (remotePubkey)\n      this.remotePubkey = remotePubkey;\n    this.token = token;\n    this.debug = ndk.debug.extend(\"nip46:signer\");\n    this.remoteUser = new NDKUser({ pubkey: remotePubkey });\n    if (!localSigner) {\n      this.localSigner = NDKPrivateKeySigner.generate();\n    } else {\n      this.localSigner = localSigner;\n    }\n    this.rpc = new NDKNostrRpc(this.ndk, this.localSigner, this.debug, this.relayUrls);\n  }\n  async startListening() {\n    if (this.subscription)\n      return;\n    const localUser = await this.localSigner.user();\n    this.subscription = await this.rpc.subscribe({\n      kinds: [24133 /* NostrConnect */, 24133 /* NostrConnect */ + 1],\n      \"#p\": [localUser.pubkey]\n    });\n  }\n  /**\n   * Get the user that is being published as\n   */\n  async user() {\n    return this.remoteUser;\n  }\n  async blockUntilReady() {\n    if (this.nip05 && !this.remotePubkey) {\n      const user = await NDKUser.fromNip05(this.nip05, this.ndk);\n      if (user) {\n        this.remoteUser = user;\n        this.remotePubkey = user.pubkey;\n        this.relayUrls = user.nip46Urls;\n        this.rpc = new NDKNostrRpc(this.ndk, this.localSigner, this.debug, this.relayUrls);\n      }\n    }\n    if (!this.remotePubkey) {\n      throw new Error(\"Remote pubkey not set\");\n    }\n    await this.startListening();\n    this.rpc.on(\"authUrl\", (...props) => {\n      this.emit(\"authUrl\", ...props);\n    });\n    return new Promise((resolve, reject) => {\n      const connectParams = [this.remotePubkey];\n      if (this.token) {\n        connectParams.push(this.token);\n      }\n      this.rpc.sendRequest(\n        this.remotePubkey,\n        \"connect\",\n        connectParams,\n        24133,\n        (response) => {\n          if (response.result === \"ack\") {\n            resolve(this.remoteUser);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n  }\n  async encrypt(recipient, value) {\n    this.debug(\"asking for encryption\");\n    const promise = new Promise((resolve, reject) => {\n      this.rpc.sendRequest(\n        this.remotePubkey,\n        \"nip04_encrypt\",\n        [recipient.pubkey, value],\n        24133,\n        (response) => {\n          if (!response.error) {\n            resolve(response.result);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  async decrypt(sender, value) {\n    this.debug(\"asking for decryption\");\n    const promise = new Promise((resolve, reject) => {\n      this.rpc.sendRequest(\n        this.remotePubkey,\n        \"nip04_decrypt\",\n        [sender.pubkey, value],\n        24133,\n        (response) => {\n          if (!response.error) {\n            resolve(response.result);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  async sign(event) {\n    this.debug(\"asking for a signature\");\n    const promise = new Promise((resolve, reject) => {\n      this.rpc.sendRequest(\n        this.remotePubkey,\n        \"sign_event\",\n        [JSON.stringify(event)],\n        24133,\n        (response) => {\n          this.debug(\"got a response\", response);\n          if (!response.error) {\n            const json = JSON.parse(response.result);\n            resolve(json.sig);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  /**\n   * Allows creating a new account on the remote server.\n   * @param username Desired username for the NIP-05\n   * @param domain Desired domain for the NIP-05\n   * @param email Email address to associate with this account -- Remote servers may use this for recovery\n   * @returns The public key of the newly created account\n   */\n  async createAccount(username, domain, email) {\n    await this.startListening();\n    this.debug(\"asking to create an account\");\n    const req = [];\n    if (username)\n      req.push(username);\n    if (domain)\n      req.push(domain);\n    if (email)\n      req.push(email);\n    return new Promise((resolve, reject) => {\n      this.rpc.sendRequest(\n        this.remotePubkey,\n        \"create_account\",\n        req,\n        24133 /* NostrConnect */,\n        (response) => {\n          this.debug(\"got a response\", response);\n          if (!response.error) {\n            const pubkey = response.result;\n            resolve(pubkey);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n  }\n};\n\n// src/dvm/schedule.ts\nfunction addRelays(event, relays) {\n  const tags = [];\n  if (!relays || relays.length === 0) {\n    const poolRelays = event.ndk?.pool.relays;\n    relays = poolRelays ? Object.keys(poolRelays) : void 0;\n  }\n  if (relays && relays.length > 0)\n    tags.push([\"relays\", ...relays]);\n  return tags;\n}\nasync function dvmSchedule(events, dvm, relays, encrypted = true, waitForConfirmationForMs) {\n  if (!(events instanceof Array)) {\n    events = [events];\n  }\n  const ndk = events[0].ndk;\n  if (!ndk)\n    throw new Error(\"NDK not set\");\n  for (const event of events) {\n    if (!event.sig)\n      throw new Error(\"Event not signed\");\n    if (!event.created_at)\n      throw new Error(\"Event has no date\");\n    if (!dvm)\n      throw new Error(\"No DVM specified\");\n    if (event.created_at <= Date.now() / 1e3)\n      throw new Error(\"Event needs to be in the future\");\n  }\n  const scheduleEvent = new NDKDVMRequest(ndk, {\n    kind: 5905 /* DVMEventSchedule */\n  });\n  for (const event of events) {\n    scheduleEvent.addInput(JSON.stringify(event.rawEvent()), \"text\");\n  }\n  scheduleEvent.tags.push(...addRelays(events[0], relays));\n  if (encrypted) {\n    await scheduleEvent.encryption(dvm);\n  } else {\n    scheduleEvent.dvm = dvm;\n  }\n  await scheduleEvent.sign();\n  let res;\n  if (waitForConfirmationForMs) {\n    res = ndk.subscribe(\n      {\n        kinds: [5905 /* DVMEventSchedule */ + 1e3, 7e3 /* DVMJobFeedback */],\n        ...scheduleEvent.filter()\n      },\n      { groupable: false, closeOnEose: false }\n    );\n  }\n  const timeoutPromise = new Promise((reject) => {\n    setTimeout(() => {\n      res?.stop();\n      reject(\"Timeout waiting for an answer from the DVM\");\n    }, waitForConfirmationForMs);\n  });\n  const schedulePromise = new Promise(\n    (resolve, reject) => {\n      if (waitForConfirmationForMs) {\n        res?.on(\"event\", async (e) => {\n          res?.stop();\n          if (e.kind === 7e3 /* DVMJobFeedback */) {\n            const feedback = await NDKDVMJobFeedback.from(e);\n            if (feedback.status === \"error\") {\n              const statusTag = feedback.getMatchingTags(\"status\");\n              reject(statusTag?.[2] ?? feedback);\n            } else {\n              resolve(feedback);\n            }\n          }\n          resolve(e);\n        });\n      }\n      scheduleEvent.publish().then(() => {\n        if (!waitForConfirmationForMs)\n          resolve();\n      });\n    }\n  );\n  return new Promise((resolve, reject) => {\n    if (waitForConfirmationForMs) {\n      Promise.race([timeoutPromise, schedulePromise]).then((e) => {\n        resolve(e);\n      }).catch(reject);\n    } else {\n      schedulePromise.then(resolve);\n    }\n  });\n}\n\n// src/ndk/index.ts\nimport debug6 from \"debug\";\nimport { EventEmitter as EventEmitter11 } from \"tseep\";\n\n// src/events/dedup.ts\nfunction dedup(event1, event2) {\n  if (event1.created_at > event2.created_at) {\n    return event1;\n  }\n  return event2;\n}\n\n// src/outbox/tracker.ts\nimport { EventEmitter as EventEmitter9 } from \"tseep\";\nimport { LRUCache as LRUCache2 } from \"typescript-lru-cache\";\nvar OutboxItem = class {\n  /**\n   * Type of item\n   */\n  type;\n  /**\n   * The relay URLs that are of interest to this item\n   */\n  relayUrlScores;\n  readRelays;\n  writeRelays;\n  constructor(type) {\n    this.type = type;\n    this.relayUrlScores = /* @__PURE__ */ new Map();\n    this.readRelays = /* @__PURE__ */ new Set();\n    this.writeRelays = /* @__PURE__ */ new Set();\n  }\n};\nvar OutboxTracker = class extends EventEmitter9 {\n  data;\n  ndk;\n  debug;\n  constructor(ndk) {\n    super();\n    this.ndk = ndk;\n    this.debug = ndk.debug.extend(\"outbox-tracker\");\n    this.data = new LRUCache2({\n      maxSize: 1e5,\n      entryExpirationTimeInMS: 2 * 60 * 1e3\n    });\n  }\n  trackUsers(items) {\n    for (let i = 0; i < items.length; i += 400) {\n      const slice = items.slice(i, i + 400);\n      let pubkeys = slice.map((item) => getKeyFromItem(item)).filter((pubkey) => !this.data.has(pubkey));\n      if (pubkeys.length === 0)\n        continue;\n      for (const pubkey of pubkeys) {\n        this.data.set(pubkey, new OutboxItem(\"user\"));\n      }\n      NDKRelayList.forUsers(pubkeys, this.ndk).then(\n        (relayLists) => {\n          for (const [pubkey, relayList] of relayLists) {\n            const outboxItem = this.data.get(pubkey);\n            if (relayList) {\n              outboxItem.readRelays = new Set(normalize(relayList.readRelayUrls));\n              outboxItem.writeRelays = new Set(normalize(relayList.writeRelayUrls));\n              for (const relayUrl of outboxItem.readRelays) {\n                if (this.ndk.pool.blacklistRelayUrls.has(relayUrl)) {\n                  outboxItem.readRelays.delete(relayUrl);\n                }\n              }\n              for (const relayUrl of outboxItem.writeRelays) {\n                if (this.ndk.pool.blacklistRelayUrls.has(relayUrl)) {\n                  outboxItem.writeRelays.delete(relayUrl);\n                }\n              }\n              this.data.set(pubkey, outboxItem);\n            }\n          }\n        }\n      );\n    }\n  }\n  /**\n   *\n   * @param key\n   * @param score\n   */\n  track(item, type) {\n    const key = getKeyFromItem(item);\n    type ??= getTypeFromItem(item);\n    let outboxItem = this.data.get(key);\n    if (!outboxItem) {\n      outboxItem = new OutboxItem(type);\n      if (item instanceof NDKUser) {\n        this.trackUsers([item]);\n      }\n    }\n    return outboxItem;\n  }\n};\nfunction getKeyFromItem(item) {\n  if (item instanceof NDKUser) {\n    return item.pubkey;\n  } else {\n    return item;\n  }\n}\nfunction getTypeFromItem(item) {\n  if (item instanceof NDKUser) {\n    return \"user\";\n  } else {\n    return \"kind\";\n  }\n}\n\n// src/relay/pool/index.ts\nimport { EventEmitter as EventEmitter10 } from \"tseep\";\nvar NDKPool = class extends EventEmitter10 {\n  // TODO: This should probably be an LRU cache\n  relays = /* @__PURE__ */ new Map();\n  blacklistRelayUrls;\n  debug;\n  temporaryRelayTimers = /* @__PURE__ */ new Map();\n  flappingRelays = /* @__PURE__ */ new Set();\n  // A map to store timeouts for each flapping relay.\n  backoffTimes = /* @__PURE__ */ new Map();\n  ndk;\n  constructor(relayUrls = [], blacklistedRelayUrls = [], ndk, debug7) {\n    super();\n    this.debug = debug7 ?? ndk.debug.extend(\"pool\");\n    this.ndk = ndk;\n    for (const relayUrl of relayUrls) {\n      const relay = new NDKRelay(relayUrl);\n      this.addRelay(relay, false);\n    }\n    this.blacklistRelayUrls = new Set(blacklistedRelayUrls);\n  }\n  set name(name) {\n    this.debug = this.debug.extend(name);\n  }\n  /**\n   * Adds a relay to the pool, and sets a timer to remove it if it is not used within the specified time.\n   * @param relay - The relay to add to the pool.\n   * @param removeIfUnusedAfter - The time in milliseconds to wait before removing the relay from the pool after it is no longer used.\n   */\n  useTemporaryRelay(relay, removeIfUnusedAfter = 3e4) {\n    const relayAlreadyInPool = this.relays.has(relay.url);\n    if (!relayAlreadyInPool) {\n      this.addRelay(relay);\n    }\n    const existingTimer = this.temporaryRelayTimers.get(relay.url);\n    if (existingTimer) {\n      clearTimeout(existingTimer);\n    }\n    if (!relayAlreadyInPool || existingTimer) {\n      const timer = setTimeout(() => {\n        this.removeRelay(relay.url);\n      }, removeIfUnusedAfter);\n      this.temporaryRelayTimers.set(relay.url, timer);\n    }\n  }\n  /**\n   * Adds a relay to the pool.\n   *\n   * @param relay - The relay to add to the pool.\n   * @param connect - Whether or not to connect to the relay.\n   */\n  addRelay(relay, connect = true) {\n    const isAlreadyInPool = this.relays.has(relay.url);\n    const isBlacklisted = this.blacklistRelayUrls?.has(relay.url);\n    const isCustomRelayUrl = relay.url.includes(\"/npub1\");\n    let reconnect = true;\n    const relayUrl = relay.url;\n    if (isAlreadyInPool) {\n      this.debug(`Refusing to add relay ${relayUrl}: already in the pool`);\n      return;\n    }\n    if (isBlacklisted) {\n      this.debug(`Refusing to add relay ${relayUrl}: blacklisted`);\n      return;\n    }\n    if (isCustomRelayUrl) {\n      this.debug(`Refusing to add relay ${relayUrl}: is a filter relay`);\n      return;\n    }\n    if (this.ndk.cacheAdapter?.getRelayStatus) {\n      const info = this.ndk.cacheAdapter.getRelayStatus(relayUrl);\n      if (info && info.dontConnectBefore) {\n        if (info.dontConnectBefore > Date.now()) {\n          const delay = info.dontConnectBefore - Date.now();\n          this.debug(`Refusing to add relay ${relayUrl}: delayed connect for ${delay}ms`);\n          setTimeout(() => {\n            this.addRelay(relay, connect);\n          }, delay);\n          return;\n        } else {\n          reconnect = false;\n        }\n      }\n    }\n    this.debug(`Adding relay ${relayUrl} to the pool`);\n    const noticeHandler = (notice) => this.emit(\"notice\", relay, notice);\n    const connectHandler = () => this.handleRelayConnect(relayUrl);\n    const readyHandler = () => this.handleRelayReady(relay);\n    const disconnectHandler = () => this.emit(\"relay:disconnect\", relay);\n    const flappingHandler = () => this.handleFlapping(relay);\n    const authHandler = (challenge) => this.emit(\"relay:auth\", relay, challenge);\n    const authedHandler = () => this.emit(\"relay:authed\", relay);\n    relay.off(\"notice\", noticeHandler);\n    relay.off(\"connect\", connectHandler);\n    relay.off(\"ready\", readyHandler);\n    relay.off(\"disconnect\", disconnectHandler);\n    relay.off(\"flapping\", flappingHandler);\n    relay.off(\"auth\", authHandler);\n    relay.off(\"authed\", authedHandler);\n    relay.on(\"notice\", noticeHandler);\n    relay.on(\"connect\", connectHandler);\n    relay.on(\"ready\", readyHandler);\n    relay.on(\"disconnect\", disconnectHandler);\n    relay.on(\"flapping\", flappingHandler);\n    relay.on(\"auth\", authHandler);\n    relay.on(\"authed\", authedHandler);\n    relay.on(\"delayed-connect\", (delay) => {\n      if (this.ndk.cacheAdapter?.updateRelayStatus) {\n        this.ndk.cacheAdapter.updateRelayStatus(relay.url, {\n          dontConnectBefore: Date.now() + delay\n        });\n      }\n    });\n    this.relays.set(relayUrl, relay);\n    if (connect) {\n      this.emit(\"relay:connecting\", relay);\n      relay.connect(void 0, reconnect).catch((e) => {\n        this.debug(`Failed to connect to relay ${relayUrl}`, e);\n      });\n    }\n  }\n  /**\n   * Removes a relay from the pool.\n   * @param relayUrl - The URL of the relay to remove.\n   * @returns {boolean} True if the relay was removed, false if it was not found.\n   */\n  removeRelay(relayUrl) {\n    const relay = this.relays.get(relayUrl);\n    if (relay) {\n      relay.disconnect();\n      this.relays.delete(relayUrl);\n      this.emit(\"relay:disconnect\", relay);\n      return true;\n    }\n    const existingTimer = this.temporaryRelayTimers.get(relayUrl);\n    if (existingTimer) {\n      clearTimeout(existingTimer);\n      this.temporaryRelayTimers.delete(relayUrl);\n    }\n    return false;\n  }\n  /**\n   * Fetches a relay from the pool, or creates a new one if it does not exist.\n   *\n   * New relays will be attempted to be connected.\n   */\n  getRelay(url, connect = true, temporary = false, filters) {\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new NDKRelay(url);\n      if (temporary) {\n        this.useTemporaryRelay(relay);\n      } else {\n        this.addRelay(relay, connect);\n      }\n    }\n    return relay;\n  }\n  handleRelayConnect(relayUrl) {\n    this.emit(\"relay:connect\", this.relays.get(relayUrl));\n    if (this.stats().connected === this.relays.size) {\n      this.emit(\"connect\");\n    }\n  }\n  handleRelayReady(relay) {\n    this.debug(`Relay ${relay.url} ready`);\n    this.emit(\"relay:ready\", relay);\n  }\n  /**\n   * Attempts to establish a connection to each relay in the pool.\n   *\n   * @async\n   * @param {number} [timeoutMs] - Optional timeout in milliseconds for each connection attempt.\n   * @returns {Promise<void>} A promise that resolves when all connection attempts have completed.\n   * @throws {Error} If any of the connection attempts result in an error or timeout.\n   */\n  async connect(timeoutMs) {\n    const promises = [];\n    this.debug(\n      `Connecting to ${this.relays.size} relays${timeoutMs ? `, timeout ${timeoutMs}...` : \"\"}`\n    );\n    for (const relay of this.relays.values()) {\n      const connectPromise = new Promise((resolve, reject) => {\n        this.emit(\"relay:connecting\", relay);\n        return relay.connect(timeoutMs).then(resolve).catch(reject);\n      });\n      if (timeoutMs) {\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => reject(`Timed out after ${timeoutMs}ms`), timeoutMs);\n        });\n        promises.push(\n          Promise.race([connectPromise, timeoutPromise]).catch((e) => {\n            this.debug(\n              `Failed to connect to relay ${relay.url}: ${e ?? \"No reason specified\"}`\n            );\n          })\n        );\n      } else {\n        promises.push(connectPromise);\n      }\n    }\n    if (timeoutMs) {\n      setTimeout(() => {\n        const allConnected = this.stats().connected === this.relays.size;\n        const someConnected = this.stats().connected > 0;\n        if (!allConnected && someConnected) {\n          this.emit(\"connect\");\n        }\n      }, timeoutMs);\n    }\n    await Promise.all(promises);\n  }\n  checkOnFlappingRelays() {\n    const flappingRelaysCount = this.flappingRelays.size;\n    const totalRelays = this.relays.size;\n    if (flappingRelaysCount / totalRelays >= 0.8) {\n      for (const relayUrl of this.flappingRelays) {\n        this.backoffTimes.set(relayUrl, 0);\n      }\n    }\n  }\n  handleFlapping(relay) {\n    this.debug(`Relay ${relay.url} is flapping`);\n    let currentBackoff = this.backoffTimes.get(relay.url) || 5e3;\n    currentBackoff = currentBackoff * 2;\n    this.backoffTimes.set(relay.url, currentBackoff);\n    this.debug(`Backoff time for ${relay.url} is ${currentBackoff}ms`);\n    setTimeout(() => {\n      this.debug(`Attempting to reconnect to ${relay.url}`);\n      this.emit(\"relay:connecting\", relay);\n      relay.connect();\n      this.checkOnFlappingRelays();\n    }, currentBackoff);\n    relay.disconnect();\n    this.emit(\"flapping\", relay);\n  }\n  size() {\n    return this.relays.size;\n  }\n  /**\n   * Returns the status of each relay in the pool.\n   * @returns {NDKPoolStats} An object containing the number of relays in each status.\n   */\n  stats() {\n    const stats = {\n      total: 0,\n      connected: 0,\n      disconnected: 0,\n      connecting: 0\n    };\n    for (const relay of this.relays.values()) {\n      stats.total++;\n      if (relay.status === 1 /* CONNECTED */) {\n        stats.connected++;\n      } else if (relay.status === 3 /* DISCONNECTED */) {\n        stats.disconnected++;\n      } else if (relay.status === 0 /* CONNECTING */) {\n        stats.connecting++;\n      }\n    }\n    return stats;\n  }\n  connectedRelays() {\n    return Array.from(this.relays.values()).filter(\n      (relay) => relay.status === 1 /* CONNECTED */\n    );\n  }\n  permanentAndConnectedRelays() {\n    return Array.from(this.relays.values()).filter(\n      (relay) => relay.status === 1 /* CONNECTED */ || !this.temporaryRelayTimers.has(relay.url)\n    );\n  }\n  /**\n   * Get a list of all relay urls in the pool.\n   */\n  urls() {\n    return Array.from(this.relays.keys());\n  }\n};\n\n// src/relay/sets/utils.ts\nfunction correctRelaySet(relaySet, pool) {\n  const connectedRelays = pool.connectedRelays();\n  const includesConnectedRelay = Array.from(relaySet.relays).some((relay) => {\n    return connectedRelays.map((r) => r.url).includes(relay.url);\n  });\n  if (!includesConnectedRelay) {\n    for (const relay of connectedRelays) {\n      relaySet.addRelay(relay);\n    }\n  }\n  if (connectedRelays.length === 0) {\n    for (const relay of pool.relays.values()) {\n      relaySet.addRelay(relay);\n    }\n  }\n  return relaySet;\n}\n\n// src/ndk/fetch-event-from-tag.ts\nasync function fetchEventFromTag(tag, subOpts, fallback = {\n  type: \"timeout\"\n}) {\n  const d = this.debug.extend(\"fetch-event-from-tag\");\n  const [tagType, id, hint] = tag;\n  let result = void 0;\n  let relay = hint && hint !== \"\" ? this.pool.getRelay(hint, true, true, [{ ids: [id] }]) : void 0;\n  const fetchMaybeWithRelayHint = new Promise((resolve) => {\n    this.fetchEvent(id, subOpts, relay).then(resolve);\n  });\n  if (hint === \"\" || !hint || fallback.type === \"none\") {\n    return fetchMaybeWithRelayHint;\n  }\n  let fallbackFetchPromise = new Promise(async (resolve) => {\n    let fallbackRelaySet = fallback.relaySet;\n    let timeout = fallback.timeout ?? 1500;\n    let timeoutPromise = new Promise((resolve2) => setTimeout(resolve2, timeout));\n    if (fallback.type === \"timeout\")\n      await timeoutPromise;\n    if (result) {\n      resolve(result);\n    } else {\n      d(\"fallback fetch triggered\");\n      let fallbackEvent = await this.fetchEvent(id, subOpts, fallbackRelaySet);\n      resolve(fallbackEvent);\n    }\n  });\n  switch (fallback.type) {\n    case \"timeout\":\n      return Promise.race([fetchMaybeWithRelayHint, fallbackFetchPromise]);\n    case \"eose\":\n      result = await fetchMaybeWithRelayHint;\n      if (result)\n        return result;\n      return fallbackFetchPromise;\n  }\n}\n\n// src/media/index.ts\nvar SPEC_PATH = \"/.well-known/nostr/nip96.json\";\nvar Nip96 = class {\n  ndk;\n  spec;\n  url;\n  nip98Required = false;\n  /**\n   * @param domain domain of the NIP96 service\n   */\n  constructor(domain, ndk) {\n    this.url = `https://${domain}${SPEC_PATH}`;\n    this.ndk = ndk;\n  }\n  async prepareUpload(blob, httpVerb = \"POST\") {\n    this.validateHttpFetch();\n    if (!this.spec)\n      await this.fetchSpec();\n    if (!this.spec)\n      throw new Error(\"Failed to fetch NIP96 spec\");\n    let headers = {};\n    if (this.nip98Required) {\n      const authorizationHeader = await this.generateNip98Header(\n        this.spec.api_url,\n        httpVerb,\n        blob\n      );\n      headers = { Authorization: authorizationHeader };\n    }\n    return {\n      url: this.spec.api_url,\n      headers\n    };\n  }\n  /**\n   * Provides an XMLHttpRequest-based upload method for browsers.\n   * @example\n   * const xhr = new XMLHttpRequest();\n   * xhr.upload.addEventListener(\"progress\", function(e) {\n   *    const percentComplete = e.loaded / e.total;\n   *    console.log(percentComplete);\n   * });\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const response = await nip96.xhrUpload(xhr, blob);\n   * console.log(response);\n   * @returns Promise that resolves to the upload response\n   */\n  async xhrUpload(xhr, blob) {\n    const httpVerb = \"POST\";\n    const { url, headers } = await this.prepareUpload(blob, httpVerb);\n    xhr.open(httpVerb, url, true);\n    if (headers[\"Authorization\"]) {\n      xhr.setRequestHeader(\"Authorization\", headers[\"Authorization\"]);\n    }\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    return new Promise((resolve, reject) => {\n      xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(JSON.parse(xhr.responseText));\n        } else {\n          reject(new Error(xhr.statusText));\n        }\n      };\n      xhr.onerror = function() {\n        reject(new Error(\"Network Error\"));\n      };\n      xhr.send(formData);\n    });\n  }\n  /**\n   * Fetch-based upload method. Note that this will use NDK's httpFetch\n   * @param blob\n   * @returns Promise that resolves to the upload response\n   *\n   * @example\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const response = await nip96.upload(blob);\n   * console.log(response);\n   */\n  async upload(blob) {\n    const httpVerb = \"POST\";\n    const { url, headers } = await this.prepareUpload(blob, httpVerb);\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    const res = await this.ndk.httpFetch(this.spec.api_url, {\n      method: httpVerb,\n      headers,\n      body: formData\n    });\n    if (res.status !== 200)\n      throw new Error(`Failed to upload file to ${url}`);\n    const json = await res.json();\n    if (json.status !== \"success\")\n      throw new Error(json.message);\n    return json;\n  }\n  validateHttpFetch() {\n    if (!this.ndk)\n      throw new Error(\"NDK is required to fetch NIP96 spec\");\n    if (!this.ndk.httpFetch)\n      throw new Error(\"NDK must have an httpFetch method to fetch NIP96 spec\");\n  }\n  async fetchSpec() {\n    this.validateHttpFetch();\n    const res = await this.ndk.httpFetch(this.url);\n    if (res.status !== 200)\n      throw new Error(`Failed to fetch NIP96 spec from ${this.url}`);\n    const spec = await res.json();\n    if (!spec)\n      throw new Error(`Failed to parse NIP96 spec from ${this.url}`);\n    this.spec = spec;\n    this.nip98Required = this.spec.plans.free.is_nip98_required;\n  }\n  async generateNip98Header(requestUrl, httpMethod, blob) {\n    const event = new NDKEvent(this.ndk, {\n      kind: 27235 /* HttpAuth */,\n      tags: [\n        [\"u\", requestUrl],\n        [\"method\", httpMethod]\n      ]\n    });\n    if ([\"POST\", \"PUT\", \"PATCH\"].includes(httpMethod)) {\n      const sha256Hash = await this.calculateSha256(blob);\n      event.tags.push([\"payload\", sha256Hash]);\n    }\n    await event.sign();\n    const encodedEvent = btoa(JSON.stringify(event.rawEvent()));\n    return `Nostr ${encodedEvent}`;\n  }\n  async calculateSha256(blob) {\n    const buffer = await blob.arrayBuffer();\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n    return hashHex;\n  }\n};\n\n// src/ndk/queue/index.ts\nvar Queue = class {\n  queue = [];\n  maxConcurrency;\n  processing = /* @__PURE__ */ new Set();\n  promises = /* @__PURE__ */ new Map();\n  constructor(name, maxConcurrency) {\n    this.maxConcurrency = maxConcurrency;\n  }\n  add(item) {\n    if (this.promises.has(item.id)) {\n      return this.promises.get(item.id);\n    } else {\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.queue.push({\n        ...item,\n        func: () => item.func().then(\n          (result) => {\n            resolve(result);\n            return result;\n          },\n          (error) => {\n            reject(error);\n            throw error;\n          }\n        )\n      });\n      this.process();\n    });\n    this.promises.set(item.id, promise);\n    promise.finally(() => {\n      this.promises.delete(item.id);\n      this.processing.delete(item.id);\n    });\n    return promise;\n  }\n  process() {\n    if (this.processing.size >= this.maxConcurrency || this.queue.length === 0) {\n      return;\n    }\n    const item = this.queue.shift();\n    if (!item || this.processing.has(item.id)) {\n      return;\n    }\n    this.processing.add(item.id);\n    item.func();\n  }\n  clear() {\n    this.queue = [];\n  }\n  clearProcessing() {\n    this.processing.clear();\n  }\n  clearAll() {\n    this.clear();\n    this.clearProcessing();\n  }\n  length() {\n    return this.queue.length;\n  }\n};\n\n// src/ndk/index.ts\nvar DEFAULT_OUTBOX_RELAYS = [\"wss://purplepag.es/\", \"wss://profiles.nos.social/\"];\nvar DEFAULT_BLACKLISTED_RELAYS = [\n  \"wss://brb.io/\",\n  // BRB\n  \"wss://nostr.mutinywallet.com/\"\n  // Don't try to read from this relay since it's a write-only relay\n  // \"wss://purplepag.es/\", // This is a hack, since this is a mostly read-only relay, but not fully. Once we have relay routing this can be removed so it only receives the supported kinds\n];\nvar NDK = class extends EventEmitter11 {\n  explicitRelayUrls;\n  pool;\n  outboxPool;\n  _signer;\n  _activeUser;\n  cacheAdapter;\n  debug;\n  devWriteRelaySet;\n  outboxTracker;\n  mutedIds;\n  clientName;\n  clientNip89;\n  queuesZapConfig;\n  queuesNip05;\n  asyncSigVerification = false;\n  validationRatio = 1;\n  /**\n   * Default relay-auth policy that will be used when a relay requests authentication,\n   * if no other policy is specified for that relay.\n   *\n   * @example Disconnect from relays that request authentication:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = NDKAuthPolicies.disconnect(ndk.pool);\n   * ```\n   *\n   * @example Sign in to relays that request authentication:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = NDKAuthPolicies.signIn({ndk})\n   * ```\n   *\n   * @example Sign in to relays that request authentication, asking the user for confirmation:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = (relay: NDKRelay) => {\n   *     const signIn = NDKAuthPolicies.signIn({ndk});\n   *     if (confirm(`Relay ${relay.url} is requesting authentication, do you want to sign in?`)) {\n   *        signIn(relay);\n   *     }\n   * }\n   * ```\n   */\n  relayAuthDefaultPolicy;\n  /**\n   * Fetch function to use for HTTP requests.\n   *\n   * @example\n   * ```typescript\n   * import fetch from \"node-fetch\";\n   *\n   * ndk.httpFetch = fetch;\n   * ```\n   */\n  httpFetch;\n  autoConnectUserRelays = true;\n  autoFetchUserMutelist = true;\n  constructor(opts = {}) {\n    super();\n    this.debug = opts.debug || debug6(\"ndk\");\n    this.explicitRelayUrls = opts.explicitRelayUrls || [];\n    this.pool = new NDKPool(\n      opts.explicitRelayUrls || [],\n      opts.blacklistRelayUrls || DEFAULT_BLACKLISTED_RELAYS,\n      this\n    );\n    this.pool.name = \"main\";\n    this.debug(`Starting with explicit relays: ${JSON.stringify(this.explicitRelayUrls)}`);\n    this.pool.on(\"relay:auth\", async (relay, challenge) => {\n      if (this.relayAuthDefaultPolicy) {\n        await this.relayAuthDefaultPolicy(relay, challenge);\n      }\n    });\n    this.autoConnectUserRelays = opts.autoConnectUserRelays ?? true;\n    this.autoFetchUserMutelist = opts.autoFetchUserMutelist ?? true;\n    this.clientName = opts.clientName;\n    this.clientNip89 = opts.clientNip89;\n    this.relayAuthDefaultPolicy = opts.relayAuthDefaultPolicy;\n    if (opts.enableOutboxModel) {\n      this.outboxPool = new NDKPool(\n        opts.outboxRelayUrls || DEFAULT_OUTBOX_RELAYS,\n        opts.blacklistRelayUrls || DEFAULT_BLACKLISTED_RELAYS,\n        this,\n        this.debug.extend(\"outbox-pool\")\n      );\n      this.outboxPool.name = \"outbox\";\n      this.outboxTracker = new OutboxTracker(this);\n    }\n    this.signer = opts.signer;\n    this.cacheAdapter = opts.cacheAdapter;\n    this.mutedIds = opts.mutedIds || /* @__PURE__ */ new Map();\n    if (opts.devWriteRelayUrls) {\n      this.devWriteRelaySet = NDKRelaySet.fromRelayUrls(opts.devWriteRelayUrls, this);\n    }\n    this.queuesZapConfig = new Queue(\"zaps\", 3);\n    this.queuesNip05 = new Queue(\"nip05\", 10);\n    this.signatureVerificationWorker = opts.signatureVerificationWorker;\n    this.validationRatio = opts.validationRatio || 1;\n    try {\n      this.httpFetch = fetch;\n    } catch {\n    }\n  }\n  set signatureVerificationWorker(worker2) {\n    this.asyncSigVerification = !!worker2;\n    if (worker2) {\n      signatureVerificationInit(worker2);\n    }\n  }\n  /**\n   * Adds an explicit relay to the pool.\n   * @param url\n   * @param relayAuthPolicy Authentication policy to use if different from the default\n   * @param connect Whether to connect to the relay automatically\n   * @returns\n   */\n  addExplicitRelay(urlOrRelay, relayAuthPolicy, connect = true) {\n    let relay;\n    if (typeof urlOrRelay === \"string\") {\n      relay = new NDKRelay(urlOrRelay, relayAuthPolicy);\n    } else {\n      relay = urlOrRelay;\n    }\n    this.pool.addRelay(relay, connect);\n    this.explicitRelayUrls.push(relay.url);\n    return relay;\n  }\n  toJSON() {\n    return { relayCount: this.pool.relays.size }.toString();\n  }\n  get activeUser() {\n    return this._activeUser;\n  }\n  /**\n   * Sets the active user for this NDK instance, typically this will be\n   * called when assigning a signer to the NDK instance.\n   *\n   * This function will automatically connect to the user's relays if\n   * `autoConnectUserRelays` is set to true.\n   *\n   * It will also fetch the user's mutelist if `autoFetchUserMutelist` is set to true.\n   */\n  set activeUser(user) {\n    const differentUser = this._activeUser?.pubkey !== user?.pubkey;\n    this._activeUser = user;\n    if (user && differentUser) {\n      const connectToUserRelays = async (user2) => {\n        const relayList = await NDKRelayList.forUser(user2.pubkey, this);\n        if (!relayList) {\n          this.debug(\"No relay list found for user\", { npub: user2.npub });\n          return;\n        }\n        this.debug(\"Connecting to user relays\", {\n          npub: user2.npub,\n          relays: relayList.relays\n        });\n        for (const url of relayList.relays) {\n          let relay = this.pool.relays.get(url);\n          if (!relay) {\n            relay = new NDKRelay(url);\n            this.pool.addRelay(relay);\n          }\n        }\n      };\n      const fetchBlockedRelays = async (user2) => {\n        const blockedRelays = await this.fetchEvent({\n          kinds: [10006 /* BlockRelayList */],\n          authors: [user2.pubkey]\n        });\n        if (blockedRelays) {\n          const list = lists_default.from(blockedRelays);\n          for (const item of list.items) {\n            this.pool.blacklistRelayUrls.add(item[0]);\n          }\n        }\n        this.debug(\"Blocked relays\", { blockedRelays });\n      };\n      const fetchUserMuteList = async (user2) => {\n        const muteList = await this.fetchEvent({\n          kinds: [1e4 /* MuteList */],\n          authors: [user2.pubkey]\n        });\n        if (muteList) {\n          const list = lists_default.from(muteList);\n          for (const item of list.items) {\n            this.mutedIds.set(item[1], item[0]);\n          }\n        }\n      };\n      const userFunctions = [fetchBlockedRelays];\n      if (this.autoConnectUserRelays)\n        userFunctions.push(connectToUserRelays);\n      if (this.autoFetchUserMutelist)\n        userFunctions.push(fetchUserMuteList);\n      const runUserFunctions = async (user2) => {\n        for (const fn of userFunctions) {\n          await fn(user2);\n        }\n      };\n      const pool = this.outboxPool || this.pool;\n      if (pool.connectedRelays.length > 0) {\n        runUserFunctions(user);\n      } else {\n        this.debug(\"Waiting for connection to main relays\");\n        pool.once(\"connect\", () => {\n          runUserFunctions(user);\n        });\n      }\n    } else if (!user) {\n      this.mutedIds = /* @__PURE__ */ new Map();\n    }\n  }\n  get signer() {\n    return this._signer;\n  }\n  set signer(newSigner) {\n    this._signer = newSigner;\n    if (newSigner)\n      this.emit(\"signer:ready\", newSigner);\n    newSigner?.user().then((user) => {\n      user.ndk = this;\n      this.activeUser = user;\n    });\n  }\n  /**\n   * Connect to relays with optional timeout.\n   * If the timeout is reached, the connection will be continued to be established in the background.\n   */\n  async connect(timeoutMs) {\n    if (this._signer && this.autoConnectUserRelays) {\n      this.debug(\"Attempting to connect to user relays specified by signer\");\n      if (this._signer.relays) {\n        const relays = await this._signer.relays();\n        relays.forEach((relay) => this.pool.addRelay(relay));\n      }\n    }\n    const connections = [this.pool.connect(timeoutMs)];\n    if (this.outboxPool) {\n      connections.push(this.outboxPool.connect(timeoutMs));\n    }\n    this.debug(\"Connecting to relays\", { timeoutMs });\n    return Promise.allSettled(connections).then(() => {\n    });\n  }\n  /**\n   * Get a NDKUser object\n   *\n   * @param opts\n   * @returns\n   */\n  getUser(opts) {\n    const user = new NDKUser(opts);\n    user.ndk = this;\n    return user;\n  }\n  /**\n   * Get a NDKUser from a NIP05\n   * @param nip05 NIP-05 ID\n   * @param skipCache Skip cache\n   * @returns\n   */\n  async getUserFromNip05(nip05, skipCache = false) {\n    return NDKUser.fromNip05(nip05, this, skipCache);\n  }\n  /**\n   * Create a new subscription. Subscriptions automatically start, you can make them automatically close when all relays send back an EOSE by setting `opts.closeOnEose` to `true`)\n   *\n   * @param filters\n   * @param opts\n   * @param relaySet explicit relay set to use\n   * @param autoStart automatically start the subscription\n   * @returns NDKSubscription\n   */\n  subscribe(filters, opts, relaySet, autoStart = true) {\n    const subscription = new NDKSubscription(this, filters, opts, relaySet);\n    if (relaySet) {\n      for (const relay of relaySet.relays) {\n        this.pool.useTemporaryRelay(relay);\n      }\n    }\n    if (this.outboxPool && subscription.hasAuthorsFilter()) {\n      const authors = subscription.filters.filter((filter) => filter.authors && filter.authors?.length > 0).map((filter) => filter.authors).flat();\n      this.outboxTracker?.trackUsers(authors);\n    }\n    if (autoStart) {\n      setTimeout(() => subscription.start(), 0);\n    }\n    return subscription;\n  }\n  /**\n   * Publish an event to a relay\n   * @param event event to publish\n   * @param relaySet explicit relay set to use\n   * @param timeoutMs timeout in milliseconds to wait for the event to be published\n   * @returns The relays the event was published to\n   *\n   * @deprecated Use `event.publish()` instead\n   */\n  async publish(event, relaySet, timeoutMs) {\n    this.debug(\"Deprecated: Use `event.publish()` instead\");\n    return event.publish(relaySet, timeoutMs);\n  }\n  /**\n   * Fetches event following a tag\n   * @param tag\n   * @param subOpts\n   * @returns\n   */\n  fetchEventFromTag = fetchEventFromTag.bind(this);\n  /**\n   * Fetch a single event.\n   *\n   * @param idOrFilter event id in bech32 format or filter\n   * @param opts subscription options\n   * @param relaySetOrRelay explicit relay set to use\n   */\n  async fetchEvent(idOrFilter, opts, relaySetOrRelay) {\n    let filter;\n    let relaySet;\n    if (relaySetOrRelay instanceof NDKRelay) {\n      relaySet = new NDKRelaySet(/* @__PURE__ */ new Set([relaySetOrRelay]), this);\n    } else if (relaySetOrRelay instanceof NDKRelaySet) {\n      relaySet = relaySetOrRelay;\n    }\n    if (!relaySetOrRelay && typeof idOrFilter === \"string\") {\n      if (!isNip33AValue(idOrFilter)) {\n        const relays = relaysFromBech32(idOrFilter);\n        if (relays.length > 0) {\n          relaySet = new NDKRelaySet(new Set(relays), this);\n          relaySet = correctRelaySet(relaySet, this.pool);\n        }\n      }\n    }\n    if (typeof idOrFilter === \"string\") {\n      filter = filterFromId(idOrFilter);\n    } else {\n      filter = idOrFilter;\n    }\n    if (!filter) {\n      throw new Error(`Invalid filter: ${JSON.stringify(idOrFilter)}`);\n    }\n    return new Promise((resolve) => {\n      let fetchedEvent = null;\n      const s = this.subscribe(\n        filter,\n        { ...opts || {}, closeOnEose: true },\n        relaySet,\n        false\n      );\n      s.on(\"event\", (event) => {\n        event.ndk = this;\n        if (!event.isReplaceable()) {\n          resolve(event);\n        } else if (!fetchedEvent || fetchedEvent.created_at < event.created_at) {\n          fetchedEvent = event;\n        }\n      });\n      s.on(\"eose\", () => {\n        resolve(fetchedEvent);\n      });\n      s.start();\n    });\n  }\n  /**\n   * Fetch events\n   */\n  async fetchEvents(filters, opts, relaySet) {\n    return new Promise((resolve) => {\n      const events = /* @__PURE__ */ new Map();\n      const relaySetSubscription = this.subscribe(\n        filters,\n        { ...opts || {}, closeOnEose: true },\n        relaySet,\n        false\n      );\n      const onEvent = (event) => {\n        const dedupKey = event.deduplicationKey();\n        const existingEvent = events.get(dedupKey);\n        if (existingEvent) {\n          event = dedup(existingEvent, event);\n        }\n        event.ndk = this;\n        events.set(dedupKey, event);\n      };\n      relaySetSubscription.on(\"event\", onEvent);\n      relaySetSubscription.on(\"event:dup\", onEvent);\n      relaySetSubscription.on(\"eose\", () => {\n        resolve(new Set(events.values()));\n      });\n      relaySetSubscription.start();\n    });\n  }\n  /**\n   * Ensures that a signer is available to sign an event.\n   */\n  assertSigner() {\n    if (!this.signer) {\n      this.emit(\"signer:required\");\n      throw new Error(\"Signer required\");\n    }\n  }\n  /**\n   * Creates a new Nip96 instance for the given domain.\n   * @param domain Domain to use for nip96 uploads\n   * @example Upload a file to a NIP-96 enabled domain:\n   *\n   * ```typescript\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * await nip96.upload(blob);\n   * ```\n   */\n  getNip96(domain) {\n    return new Nip96(domain, this);\n  }\n  /**\n   * Creates a new Nostr Wallet Connect instance for the given URI and waits for it to be ready.\n   * @param uri WalletConnect URI\n   * @param connectTimeout Timeout in milliseconds to wait for the NWC to be ready. Set to `false` to avoid connecting.\n   * @example\n   * const nwc = await ndk.nwc(\"nostr+walletconnect://....\")\n   * nwc.payInvoice(\"lnbc...\")\n   */\n  async nwc(uri, connectTimeout = 2e3) {\n    const nwc = await NDKNwc.fromURI(this, uri);\n    if (connectTimeout !== false) {\n      await nwc.blockUntilReady(connectTimeout);\n    }\n    return nwc;\n  }\n};\n\n// src/zap/invoice.ts\nimport { decode } from \"light-bolt11-decoder\";\nfunction zapInvoiceFromEvent(event) {\n  const description = event.getMatchingTags(\"description\")[0];\n  const bolt11 = event.getMatchingTags(\"bolt11\")[0];\n  let decodedInvoice;\n  let zapRequest;\n  if (!description || !bolt11 || !bolt11[1]) {\n    return null;\n  }\n  try {\n    let zapRequestPayload = description[1];\n    if (zapRequestPayload.startsWith(\"%\")) {\n      zapRequestPayload = decodeURIComponent(zapRequestPayload);\n    }\n    if (zapRequestPayload === \"\") {\n      return null;\n    }\n    zapRequest = JSON.parse(zapRequestPayload);\n    decodedInvoice = decode(bolt11[1]);\n  } catch (e) {\n    return null;\n  }\n  const amountSection = decodedInvoice.sections.find((s) => s.name === \"amount\");\n  if (!amountSection) {\n    return null;\n  }\n  const amount = parseInt(amountSection.value);\n  if (!amount) {\n    return null;\n  }\n  const content = zapRequest.content;\n  const sender = zapRequest.pubkey;\n  const recipientTag = event.getMatchingTags(\"p\")[0];\n  const recipient = recipientTag[1];\n  let zappedEvent = event.getMatchingTags(\"e\")[0];\n  if (!zappedEvent) {\n    zappedEvent = event.getMatchingTags(\"a\")[0];\n  }\n  const zappedEventId = zappedEvent ? zappedEvent[1] : void 0;\n  const zapInvoice = {\n    id: event.id,\n    zapper: event.pubkey,\n    zappee: sender,\n    zapped: recipient,\n    zappedEvent: zappedEventId,\n    amount,\n    comment: content\n  };\n  return zapInvoice;\n}\nexport {\n  BECH32_REGEX,\n  NDKAppHandlerEvent,\n  NDKArticle,\n  NDKClassified,\n  NDKDVMJobFeedback,\n  NDKDVMJobResult,\n  NDKDVMRequest,\n  NDKDvmJobFeedbackStatus,\n  NDKEvent,\n  NDKHighlight,\n  NDKKind,\n  NDKList,\n  NDKListKinds,\n  NDKNip07Signer,\n  NDKNip46Backend,\n  NDKNip46Signer,\n  NDKNostrRpc,\n  NDKNwc,\n  NDKPrivateKeySigner,\n  NDKRelay,\n  NDKRelayAuthPolicies,\n  NDKRelayList,\n  NDKRelaySet,\n  NDKRelayStatus,\n  NDKRepost,\n  NDKSimpleGroup,\n  NDKSubscription,\n  NDKSubscriptionCacheUsage,\n  NDKSubscriptionReceipt,\n  NDKSubscriptionStart,\n  NDKSubscriptionTier,\n  NDKTranscriptionDVM,\n  NDKUser,\n  NDKVideo,\n  NDKZap,\n  NIP33_A_REGEX,\n  PublishError,\n  calculateGroupableId,\n  calculateTermDurationInSeconds,\n  compareFilter,\n  NDK as default,\n  defaultOpts,\n  deserialize,\n  dvmSchedule,\n  eventHasETagMarkers,\n  eventIsPartOfThread,\n  eventIsReply,\n  eventReplies,\n  eventThreadIds,\n  eventThreads,\n  eventsBySameAuthor,\n  filterFromId,\n  generateSubId,\n  getEventReplyIds,\n  getReplyTag,\n  getRootEventId,\n  getRootTag,\n  isEventOriginalPost,\n  isNip33AValue,\n  mergeFilters,\n  newAmount,\n  normalize,\n  normalizeRelayUrl,\n  parseTagToSubscriptionAmount,\n  pinEvent,\n  possibleIntervalFrequencies,\n  profileFromEvent,\n  queryFullyFilled,\n  relaysFromBech32,\n  serialize,\n  serializeProfile,\n  zapInvoiceFromEvent\n};\n"],
  "mappings": "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",
  "names": ["import_tseep", "import_tseep", "import_tseep", "import_debug", "import_tseep", "import_debug", "import_tseep", "import_debug", "import_tseep", "import_typescript_lru_cache", "EventEmitter2", "debug", "createDebug", "EventEmitter3", "EventEmitter4", "_a", "EventEmitter5", "debug3", "debug4", "EventEmitter6", "createDebug2", "debug5", "EventEmitter7", "EventEmitter8", "EventEmitter9", "LRUCache2", "EventEmitter10", "EventEmitter11", "debug6"]
}
